{"version":3,"sources":["../node_modules/chart.js/dist/Chart.js","../node_modules/react-chartjs-2/es/index.js","../node_modules/moment/moment.js","../node_modules/lodash/isEqual.js","../node_modules/lodash/keyBy.js","../node_modules/lodash/_createAggregator.js","../node_modules/lodash/_arrayAggregator.js","../node_modules/lodash/_baseAggregator.js","../node_modules/lodash/_baseEach.js","../node_modules/lodash/_createBaseEach.js","../node_modules/@coreui/coreui-plugin-chartjs-custom-tooltips/dist/umd/custom-tooltips.js","../node_modules/@coreui/coreui/dist/js/coreui-utilities.js"],"names":["module","exports","moment","hasOwnProperty","conversions","rgb2hsl","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","rgb2xyz","rgb2lab","rgb2lch","args","lab2lch","hsl2rgb","hsl2hsv","hsl","h","s","l","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hsv2hsl","hsv","sl","v","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2rgb","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab2rgb","lch2lab","lch2xyz","lch2rgb","rgb","r","g","b","min","Math","max","delta","w","k","reverseKeywords","JSON","stringify","pow","x","y","z","xyz","t1","t2","t3","val","i","hi","floor","f","p","q","t","hwb","n","wh","bl","ratio","cmyk","c","m","lab","y2","a","hr","atan2","PI","sqrt","lch","cos","sin","keyword","cssKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","key","convert","Converter","func","arg","Array","prototype","slice","call","arguments","pair","exec","from","to","undefined","length","round","this","convs","routeSpace","space","values","getValues","setValues","vals","fspace","forEach","colorConvert","colorName","colorString","getRgba","getHsla","getRgb","string","rgba","getHsl","hsla","getHwb","getAlpha","hexString","hexDouble","rgbString","alpha","rgbaString","percentString","percentaString","hslString","hslaString","hwbString","reverseNames","match","hexAlpha","parseInt","parseFloat","scale","isNaN","num","str","toString","toUpperCase","name","Color","obj","valid","lightness","value","whiteness","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","concat","cmykArray","rgbaArray","hslaArray","setChannel","hue","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","w1","w2","toJSON","clone","type","result","source","target","prop","console","error","spaces","maxes","charAt","capped","chans","sname","index","svalues","window","chartjsColor","helpers","noop","uid","id","isNullOrUndef","isArray","Object","substr","isObject","isFinite","_isFinite","_x","apply","Number","valueOrDefault","defaultValue","valueAtIndexOrDefault","callback","fn","thisArg","each","loopable","reverse","len","keys","arrayEquals","a0","a1","ilen","v0","v1","map","klen","_merger","options","tval","sval","merge","_mergerIf","mergeIf","sources","merger","extend","setFn","inherits","extensions","me","ChartElement","constructor","Surrogate","__super__","helpers_core","callCallback","indexOf","array","item","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","helpers_easing","easingEffects","RAD_PER_DEG","DOUBLE_PI","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","exports$1","clear","chart","ctx","clearRect","width","height","roundedRect","radius","left","top","right","bottom","moveTo","arc","closePath","rect","drawPoint","style","rotation","xOffset","yOffset","size","cornerRadius","rad","beginPath","lineTo","SQRT1_2","fill","stroke","drawImage","_isPointInArea","point","area","clipArea","save","clip","unclipArea","restore","previous","flip","stepped","steppedLine","midpoint","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","helpers_canvas","drawRoundedRectangle","defaults","_set","scope","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","defaultLineHeight","showLines","core_defaults","helpers_options","toLineHeight","matches","toPadding","_parseFont","globalDefaults","global","fontSize","font","family","fontFamily","lineHeight","fontStyle","toFontString","resolve","inputs","context","helpers$1","easing","canvas","Element","configuration","initialize","hidden","pivot","_view","_model","_start","transition","ease","model","start","view","actual","origin","c0","c1","interpolate","tooltipPosition","hasValue","isNumber","core_element","exports$2","currentStep","numSteps","render","onAnimationProgress","onAnimationComplete","core_animation","defineProperty","get","set","animation","duration","onProgress","onComplete","core_animations","animations","request","addAnimation","lazy","startTime","Date","now","animating","push","requestAnimationFrame","cancelAnimation","findIndex","splice","requestAnimFrame","startDigest","advance","nextStep","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","DatasetController","datasetIndex","datasetElementType","dataElementType","linkScales","addElements","updateIndex","meta","getMeta","dataset","getDataset","xAxisID","scales","xAxes","yAxisID","yAxes","data","datasets","getDatasetMeta","getScaleForId","scaleID","_getValueScaleId","_getIndexScaleId","_getValueScale","_getIndexScale","reset","update","destroy","_data","createMetaDataset","_chart","_datasetIndex","createMetaData","_index","metaData","addElementAndReset","element","updateElement","buildOrUpdateElements","isExtensible","configurable","enumerable","method","base","res","object","resyncElements","easingValue","elements","draw","removeHoverStyle","$previousStyle","setHoverStyle","custom","getHoverColor","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","numMeta","numData","insertElements","count","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","core_datasetController","borderAlign","element_arc","inLabelRange","mouseX","vm","hoverRadius","inRange","chartX","chartY","pointRelativePosition","getAngleFromPoint","angle","distance","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","getCenterPoint","halfAngle","halfRadius","getArea","centreAngle","rangeFromCentre","angleMargin","sA","eA","pixelMargin","fillStyle","lineWidth","lineJoin","strokeStyle","valueOrDefault$1","line","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","capBezierPoints","element_line","current","currentVM","spanGaps","points","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","setLineDash","lineDashOffset","previousItem","skip","valueOrDefault$2","defaultColor$1","xRange","abs","hitRadius","pointStyle","element_point","mouseY","inXRange","inYRange","padding","chartArea","defaultColor$2","isVertical","getBarBounds","x1","x2","y1","half","swap","orig","v2","parseBorderWidth","maxW","maxH","edge","borderSkipped","horizontal","parseBorderSkipped","_inRange","skipX","skipY","bounds","rectangle","element_rectangle","rects","border","outer","inner","boundingRects","fillRect","Arc","Line","Point","Rectangle","resolve$1","hover","mode","categoryPercentage","barPercentage","offset","gridLines","offsetGridLines","controller_bar","stack","bar","_ruler","getRuler","_resolveElementOptions","_xScale","_yScale","datasetLabel","label","labels","_updateElementGeometry","vscale","getBasePixel","isHorizontal","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","_getStacks","last","stacked","stacks","isDatasetVisible","getStackCount","getStackIndex","stackCount","end","pixels","getPixelForValue","barThickness","prev","curr","ticks","getTicks","getPixelForTick","computeMinSampleSize","imeta","ivalue","getRightValue","minBarLength","controller","range","next","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","dataIndex","valueOrDefault$3","resolve$2","position","tooltips","callbacks","title","dataPoint","xLabel","yLabel","controller_bubble","xScale","yScale","dsIndex","getPixelForDecimal","NaN","_options","resolve$3","valueOrDefault$4","animateRotate","animateScale","legendCallback","text","join","legend","generateLabels","ds","arcOpts","bw","onClick","e","legendItem","cutoutPercentage","circumference","tooltipItem","dataLabel","controller_doughnut","getRingIndex","ringIndex","j","opts","availableWidth","availableHeight","minSize","arcs","chartWeight","_getRingWeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","_getVisibleDatasetWeightTotal","offsetX","offsetY","total","calculateTotal","_getRingWeightOffset","animationOpts","centerX","centerY","calculateCircumference","hoverWidth","ringWeightOffset","dataSetIndex","axis","controller_horizontalBar","valueOrDefault$5","resolve$4","isPointInArea","lineEnabled","showLine","controller_line","lineTension","_scale","_resolveLineOptions","updateBezierControlPoints","lineModel","_resolvePointOptions","calculatePointY","ELEMENT_OPTIONS","elementOptions","dsMeta","sumPos","sumNeg","stackedRightValue","rightValue","controlPoints","capControlPoint","pt","filter","cubicInterpolationMode","splineCurveMonotone","splineCurve","nextItem","halfBorderWidth","resolve$5","angleLines","display","circular","pointLabels","beginAtZero","controller_polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","doughnut","controller_pie","valueOrDefault$6","resolve$6","controller_radar","pointPosition","getPointPositionForValue","controllers","bubble","horizontalBar","polarArea","pie","radar","scatter","getRelativePosition","native","parseVisibleItems","handler","jlen","getIntersectItems","getNearestItems","intersect","distanceMetric","minDistance","POSITIVE_INFINITY","nearestItems","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","indexMode","items","core_interaction","modes","single","x-axis","nearest","intersectsItem","filterByPosition","where","sortByWeight","_tmpIndex_","sort","addSizeByPosition","boxes","box","layout","core_layouts","addBox","fullWidth","removeBox","layoutItem","configure","props","layoutOptions","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","maxPadding","verticalBoxes","horizontalBoxes","outerBoxes","chartWidth","chartHeight","chartAreaWidth","verticalBoxWidth","maxChartAreaWidth","maxChartAreaHeight","outerBoxSizes","minBoxSizes","getPadding","boxPadding","findMaxPadding","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBox","stylesheet","freeze","default","EXPANDO_KEY","CSS_SIZE_MONITOR","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","property","getStyle","eventListenerOptions","supports","addEventListener","passive","addListener","node","removeListener","removeEventListener","createEvent","nativeEvent","createDiv","cls","el","document","createElement","className","addResizeListener","expando","resizer","expand","shrink","appendChild","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","ticking","throttled","container","maintainAspectRatio","parentNode","clientWidth","proxy","renderProxy","animationName","reflow","offsetParent","classList","add","watchForRender","insertBefore","firstChild","removeResizeListener","remove","unwatchForRender","removeChild","platform_dom$2","disableCSSInjection","_enabled","_ensureLoaded","_loaded","platform","css","_style","setAttribute","getElementsByTagName","createTextNode","injectCSS","acquireContext","config","getElementById","getContext","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","releaseContext","removeAttribute","proxies","event","pos","fromNativeEvent","addEvent","removeEvent","implementation","plugins","core_plugins","_plugins","_cacheId","register","plugin","unregister","idx","getAll","notify","hook","descriptor","params","descriptors","cache","$plugins","_invalidate","core_scaleService","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","getScaleDefaults","updateScaleDefaults","additions","addScalesToLayout","valueOrDefault$7","enabled","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","eventPosition","nearestElement","d","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","String","split","createTooltipItem","indexScale","valueScale","getLabelForIndex","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","opacity","legendColorBackground","getAlignedX","align","getBeforeAfterBodyLines","exports$3","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","changed","existingModel","active","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","itemSort","body","dataPoints","tooltip","combinedBodyLength","reduce","titleLineCount","footerLineCount","widthPadding","maxLineWidth","measureText","fontString","getTooltipSize","lf","rf","olf","orf","yf","midX","midY","determineAlignment","paddingAndSize","radiusAndPadding","getBackgroundPoint","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","textAlign","textBaseline","fillText","drawBody","textColor","drawColorBoxes","xLinePadding","colorX","fillLineOfText","strokeRect","drawFooter","drawBackground","quadraticCurveTo","hasTooltipContent","globalAlpha","handleEvent","getElementsAtEventForMode","positioners_1","core_tooltip","valueOrDefault$8","mergeScaleConfig","slen","mergeConfig","positionIsHorizontal","events","onHover","animationDuration","responsive","responsiveAnimationDuration","Chart","construct","initConfig","_bufferedRender","instances","retinaScale","devicePixelRatio","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","mergeTicksOptions","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","Error","resetElements","newOptions","updateConfig","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","drawDatasets","_drawTooltip","drawDataset","getElementAtEvent","getElementsAtEvent","getElementsAtXAxis","getDatasetAtEvent","_meta","generateLegend","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","core_controller","abstract","DateAdapter","Controller","types","configMerge","scaleMerge","formats","parse","format","diff","startOf","endOf","_create","override","members","core_adapters","_date","core_ticks","formatters","tickValue","logDelta","log10","tickString","maxTick","logTick","toExponential","numDecimal","toFixed","logarithmic","remain","valueOrDefault$9","labelsFromTicks","computeTextSize","tick","longestText","color","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","minor","major","core_scale","paddingLeft","paddingTop","paddingRight","paddingBottom","_ticks","beforeUpdate","maxWidth","maxHeight","margins","_maxLabelLines","longestLabelWidth","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","toRadians","scaleLabelOpts","gridLineOpts","_isVisible","parseFont","isFullWidth","scaleLabelFont","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","sinRotation","labelHeight","firstLabelWidth","lastLabelWidth","offsetLeft","offsetRight","handleMargins","rawValue","getValueForPixel","innerWidth","pixel","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","optionTicks","tickCount","skipRatio","maxTicks","maxTicksLimit","ticksLength","_tickSize","axisLength","PaddingBottom","rot","borderValue","tickStart","tickEnd","optionMajorTicks","isRotated","isMirrored","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","labelRotationRadians","itemsToDraw","axisWidth","alignPixel","_alignPixel","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","textOffset","zeroLineIndex","lineValue","getPixelForGridLine","labelYOffset","labelXOffset","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","translate","scaleLabelX","scaleLabelY","halfLineHeight","isLeft","firstLineWidth","lastLineWidth","scale_category","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","_defaults","scale_linearbase","handleTickRangeOptions","minSign","sign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","stepSize","ceil","_computeTickLimit","handleDirectionalChanges","numericGeneratorOptions","precision","fixedStepSize","generationOptions","dataRange","factor","niceMin","niceMax","numSpaces","unit","maxNumSpaces","rmin","rmax","spacing","niceNum","_decimalPlaces","almostWhole","almostEquals","generateTicks","ticksAsNumbers","defaultConfig$1","scale_linear","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","innerDimension","_defaults$1","valueOrDefault$a","defaultConfig$2","nonNegativeOrDefault","scale_logarithmic","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","generateTicks$1","tickValues","_getFirstTickValue","firstTickValue","_defaults$2","valueOrDefault$b","valueAtIndexOrDefault$1","resolve$7","defaultConfig$3","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getTickBackdropHeight","determineLimits","getTextAlignForAngle","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","scale_radialLinear","drawingArea","NEGATIVE_INFINITY","plFont","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","toDegrees","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","getBasePosition","angleLineOpts","pointLabelOpts","tickBackdropHeight","outerDistance","outerPosition","extra","pointLabelPosition","pointLabelFontColor","drawPointLabels","yCenterOffset","drawRadiusLine","_defaults$3","valueOrDefault$c","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","MAX_SAFE_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","interpolate$1","table","skey","tkey","mid","i0","i1","lo","lookup","span","toTimestamp","input","adapter","_adapter","time","parser","determineMajorUnit","generate","capacity","timeOpts","minUnit","interval","determineUnitForAutoTicks","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","milliseconds","determineStepSize","scale_time","adapters","date","warn","displayFormats","timestamp","timestamps","dataLabels","_horizontal","_table","_timestamps","getLabelCapacity","_unit","determineUnitForFormatting","_majorUnit","distribution","buildLookupTable","_offsets","computeOffsets","majorUnit","ticksFromTimestamps","tooltipFormat","datetime","tickFormatFunction","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","isReverse","getLabelWidth","ticksOpts","tickLabelWidth","tickFontSize","exampleTime","exampleLabel","_defaults$4","displayFormat","category","radialLinear","FORMATS","_id","valueOf","_format","amount","as","filler","propagate","mappers","visible","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","plugin_filler","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","loop","p0","p1","d0","d1","doFill","noop$1","valueOrDefault$d","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","onLeave","lineDash","Legend","legendHitBoxes","_hoveredItem","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","textWidth","SQRT2","drawLegendBox","halfFontSize","xLeft","yMiddle","_getLegendItemAt","hitBox","lh","hoveredItem","createNewLegendAndAttach","legendOpts","plugin_legend","_element","beforeInit","afterEvent","noop$2","Title","lineCount","fontOpts","titleX","titleY","createNewTitleBlockAndAttach","titleOpts","titleBlock","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","collection","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","epsilon","rounded","exponent","log","LOG10E","powerOf10","isPowerOf10","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","aliasPixel","pixelWidth","currentDevicePixelRatio","halfWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getConstraintWidth","getConstraintHeight","_calculatePadding","parentDimension","parent","host","cw","clientHeight","ch","currentStyle","getPropertyValue","forceRatio","pixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","numberOfLines","CanvasGradient","colorValue","CanvasPattern","core_helpers","_adapters","Animation","animationService","Interaction","layouts","Scale","scaleService","Ticks","Tooltip","src","pluginService","PluginBase","canvasHelpers","layoutService","LinearScaleBase","klass","cfg","toLowerCase","factory","__webpack_require__","process","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","chart_js__WEBPACK_IMPORTED_MODULE_2__","chart_js__WEBPACK_IMPORTED_MODULE_2___default","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4__","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4___default","_extends","assign","_objectWithoutProperties","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","writable","setPrototypeOf","__proto__","NODE_ENV","PUBLIC_URL","ChartComponent","_React$Component","_temp","_this","_len","_key","handleOnClick","chartInstance","_this$props","onElementsClick","ref","componentWillMount","componentDidMount","renderChart","componentDidUpdate","redraw","destroyChart","updateChart","shouldComponentUpdate","nextProps","_props","nextData","transformDataProp","shadowDataProp","componentWillUnmount","memoizeDataProps","saveCurrentDatasets","checkDatasets","isDev","usingCustomKeyProvider","datasetKeyProvider","getLabelAsKey","multipleDatasets","shouldWarn","getCurrentDatasets","_this2","_this3","currentDatasets","nextDatasets","currentDatasetsIndexed","pid","otherProps","rest","_props2","defaultProps","_props3","Component","propTypes","oneOfType","isRequired","number","arrayOf","bool","propName","componentName","_React$Component2","Doughnut","_this5","_ref","_React$Component3","Pie","_this7","_ref2","_React$Component4","_this9","_ref3","_React$Component5","Bar","_this11","_ref4","_React$Component6","HorizontalBar","_this13","_ref5","_React$Component7","Radar","_this15","_ref6","_React$Component8","Polar","_this17","_ref7","_React$Component9","Bubble","_this19","_ref8","_React$Component10","Scatter","_this21","_ref9","hookCallback","some","hooks","isUndefined","isDate","arr","hasOwnProp","createUTC","locale","strict","createLocalOrUTC","utc","getParsingFlags","_pf","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","_isValid","flags","parsedParts","isNowValid","_d","getTime","invalidWeekday","_strict","bigHour","isFrozen","createInvalid","fun","momentProperties","copyConfig","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","updateInProgress","Moment","updateOffset","isMoment","absFloor","toInt","argumentForCoercion","coercedNumber","compareArrays","array1","array2","dontConvert","lengthDiff","diffs","msg","suppressDeprecationWarnings","deprecate","firstTime","deprecationHandler","deprecations","deprecateSimple","isFunction","Function","mergeConfigs","parentConfig","childConfig","Locale","aliases","addUnitAlias","shorthand","lowerCase","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","priorities","addUnitPriority","priority","zeroFill","targetLength","forceSign","absNumber","zerosToFill","formattingTokens","localFormattingTokens","formatFunctions","formatTokenFunctions","addFormatToken","token","padded","ordinal","localeData","formatMoment","expandFormat","replace","mom","output","makeFormatFunction","invalidDate","replaceLongDateFormatTokens","longDateFormat","lastIndex","test","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchWord","regexes","addRegexToken","regex","strictRegex","isStrict","getParseRegexForToken","RegExp","regexEscape","matched","p2","p3","p4","tokens","addParseToken","addWeekParseToken","_w","addTimeToArrayFromToken","_a","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","daysInYear","isLeapYear","parseTwoDigitYear","getSetYear","makeGetSet","keepTime","set$1","daysInMonth","modMonth","o","monthsShort","months","monthsShortRegex","monthsRegex","monthsParse","MONTHS_IN_FORMAT","defaultLocaleMonths","defaultLocaleMonthsShort","setMonth","dayOfMonth","getSetMonth","defaultMonthsShortRegex","defaultMonthsRegex","computeMonthsParse","cmpLenRev","shortPieces","longPieces","mixedPieces","_monthsRegex","_monthsShortRegex","_monthsStrictRegex","_monthsShortStrictRegex","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","fwdlw","getUTCDay","dayOfYearFromWeeks","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","shiftWeekdays","ws","weekdaysMin","weekdaysShort","weekdays","weekdaysMinRegex","weekdaysShortRegex","weekdaysRegex","weekdaysParse","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultWeekdaysRegex","defaultWeekdaysShortRegex","defaultWeekdaysMinRegex","computeWeekdaysParse","minp","shortp","longp","minPieces","_weekdaysRegex","_weekdaysShortRegex","_weekdaysMinRegex","_weekdaysStrictRegex","_weekdaysShortStrictRegex","_weekdaysMinStrictRegex","hFormat","hours","lowercase","minutes","matchMeridiem","_meridiemParse","seconds","kInput","_isPm","isPM","_meridiem","pos1","pos2","globalLocale","getSetHour","baseConfig","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","LTS","LT","L","LL","LLL","LLLL","dayOfMonthOrdinalParse","relativeTime","future","past","ss","mm","hh","dd","M","MM","yy","meridiemParse","locales","localeFamilies","normalizeLocale","loadLocale","oldLocale","_abbr","code","getSetGlobalLocale","getLocale","defineLocale","abbr","_config","parentLocale","names","chooseLocale","checkOverflow","_overflowDayOfYear","_overflowWeeks","_overflowWeekday","configFromArray","currentDate","expectedWeekday","yearToUse","nowValue","_useUTC","getUTCMonth","getUTCDate","getFullYear","getMonth","getDate","currentDateArray","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","_week","curWeek","gg","_dayOfYear","dayOfYearFromWeekInfo","_nextDay","ms","setFullYear","getDay","setUTCMinutes","getUTCMinutes","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","configFromISO","allowTime","dateFormat","timeFormat","tzFormat","configFromStringAndFormat","untruncateYear","yearStr","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromRFC2822","parsedArray","monthStr","dayStr","hourStr","minuteStr","secondStr","extractFromRFC2822Strings","weekdayStr","parsedInput","weekdayProvided","weekdayActual","checkWeekday","obsOffset","militaryOffset","numOffset","hm","calculateOffset","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","isPm","meridiemHour","meridiemFixWrap","prepareConfig","preparse","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromStringAndArray","createFromInputFallback","configFromString","configFromObject","configFromInput","isUTC","getOwnPropertyNames","isObjectEmpty","createFromConfig","prototypeMin","other","prototypeMax","pickBy","moments","ordering","Duration","years","quarters","weeks","isoWeek","days","unitHasDecimal","isDurationValid","_milliseconds","_days","_months","_bubble","isDuration","absRound","separator","utcOffset","offsetFromString","chunkOffset","matcher","parts","cloneWithOffset","setTime","local","getDateOffset","getTimezoneOffset","isUtc","aspNetRegex","isoRegex","createDuration","ret","diffRes","parseIso","isBefore","positiveMomentsDifference","momentsDifference","inp","isAfter","createAdder","direction","period","addSubtract","isAdding","invalid","subtract","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","newLocaleData","defaultFormat","defaultFormatUtc","lang","MS_PER_SECOND","MS_PER_MINUTE","MS_PER_HOUR","MS_PER_400_YEARS","mod$1","dividend","divisor","localStartOfDate","utcStartOfDate","addWeekYearFormatToken","getter","getSetWeekYearHelper","weeksTarget","dayOfYearData","isoWeekYear","_dayOfMonthOrdinalParse","_ordinalParse","_dayOfMonthOrdinalParseLenient","getSetDayOfMonth","getSetMinute","getSetSecond","parseMs","getSetMillisecond","proto","preParsePostFormat","sod","calendarFormat","asFloat","that","zoneDelta","startOfDate","inputString","postformat","withoutSuffix","humanize","fromNow","toNow","invalidAt","localInput","isBetween","inclusivity","localFrom","localTo","isSame","inputMs","isSameOrAfter","isSameOrBefore","parsingFlags","prioritized","unitsObj","u","getPrioritizedUnits","toArray","toObject","toDate","toISOString","keepOffset","inspect","zone","isLocal","prefix","suffix","unix","creationData","isoWeeks","weekInfo","isoWeeksInYear","parseWeekday","parseIsoWeekday","keepLocalTime","keepMinutes","localAdjust","_changeInProgress","parseZone","tZone","hasAlignedHourOffset","isDST","isUtcOffset","zoneAbbr","zoneName","dates","isDSTShifted","_isDSTShifted","proto$1","get$1","field","setter","listMonthsImpl","listWeekdaysImpl","localeSorted","_calendar","_longDateFormat","formatUpper","_invalidDate","_ordinal","isFuture","_relativeTime","pastFuture","isFormat","_monthsShort","monthName","_monthsParseExact","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","firstDayOfYear","firstDayOfWeek","_weekdays","_weekdaysMin","_weekdaysShort","weekdayName","_weekdaysParseExact","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","_fullWeekdaysParse","isLower","langData","mathAbs","addSubtract$1","absCeil","daysToMonths","monthsToDays","makeAs","alias","asMilliseconds","asSeconds","asMinutes","asHours","asDays","asWeeks","asMonths","asQuarters","asYears","makeGetter","thresholds","abs$1","toISOString$1","Y","D","totalSign","ymSign","daysSign","hmsSign","proto$2","monthsFromDays","withSuffix","posNegDuration","relativeTime$1","toIsoString","version","updateLocale","tmpLocale","relativeTimeRounding","roundingFunction","relativeTimeThreshold","threshold","limit","myMoment","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME","TIME_SECONDS","TIME_MS","baseIsEqual","baseAssignValue","keyBy","createAggregator","arrayAggregator","baseAggregator","baseIteratee","initializer","iteratee","accumulator","baseEach","baseForOwn","createBaseEach","isArrayLike","eachFunc","fromRight","iterable","CustomTooltips","tooltipModel","ClassName","ABOVE","BELOW","CHARTJS_TOOLTIP","NO_TRANSFORM","TOOLTIP_BODY","TOOLTIP_BODY_ITEM","TOOLTIP_BODY_ITEM_COLOR","TOOLTIP_BODY_ITEM_LABEL","TOOLTIP_BODY_ITEM_VALUE","TOOLTIP_HEADER","TOOLTIP_HEADER_ITEM","Selector","DIV","SPAN","TOOLTIP","_idMaker","random","_canvasId","_setCanvasId","titleLines","tooltipHeader","tooltipHeaderTitle","innerHTML","tooltipBody","tooltipBodyItems","tooltipBodyItem","colors","tooltipBodyItemColor","tooltipBodyItemLabel","tooltipBodyItemValue","_tooltipBodyItemValue","positionY","offsetTop","positionX","createCommonjsModule","_core","core","__e","_global","__g","_shared","store","copyright","px","_uid","_wks","Symbol","USE_SYMBOL","$exports","_isObject","it","_anObject","_fails","_descriptors","document$1","is","_domCreate","_ie8DomDefine","dP","_objectDp","O","P","Attributes","S","_toPrimitive","_propertyDesc","bitmap","_hide","UNSCOPABLES","ArrayProto","_addToUnscopables","_iterStep","done","_iterators","_cof","_iobject","propertyIsEnumerable","_defined","_toIobject","_has","_functionToString","_redefine","SRC","TPL","inspectSource","safe","_aFunction","_ctx","$export","own","IS_FORCED","F","IS_GLOBAL","G","IS_STATIC","IS_PROTO","IS_BIND","B","expProto","U","R","IS_INCLUDES","_export","_toInteger","_toLength","min$1","shared","_sharedKey","arrayIndexOf","$this","_toAbsoluteIndex","IE_PROTO","_enumBugKeys","_objectKeys","_objectKeysInternal","_objectDps","defineProperties","Properties","document$2","_html","documentElement","IE_PROTO$1","Empty","_createDict","iframeDocument","iframe","contentWindow","open","write","lt","close","_objectCreate","def","TAG","_setToStringTag","tag","stat","IteratorPrototype","_iterCreate","NAME","_toObject","IE_PROTO$2","ObjectProto","_objectGpo","getPrototypeOf","ITERATOR","BUGGY","returnThis","es6_array_iterator","Base","DEFAULT","IS_SET","FORCED","methods","getMethod","kind","DEF_VALUES","VALUES_BUG","$native","$default","$entries","$anyNative","entries","_iterDefine","iterated","_t","_k","Arguments","ITERATOR$1","TO_STRING_TAG","ArrayValues","DOMIterables","CSSRuleList","CSSStyleDeclaration","CSSValueList","ClientRectList","DOMRectList","DOMStringList","DOMTokenList","DataTransferItemList","FileList","HTMLAllCollection","HTMLCollection","HTMLFormElement","HTMLSelectElement","MediaList","MimeTypeArray","NamedNodeMap","NodeList","PaintRequestList","Plugin","PluginArray","SVGLengthList","SVGNumberList","SVGPathSegList","SVGPointList","SVGStringList","SVGTransformList","SourceBufferList","StyleSheetList","TextTrackCueList","TextTrackList","TouchList","collections","explicit","Collection","TAG$1","ARG","_classof","T","tryGet","callee","KEY","_objectSap","_objectGops","getOwnPropertySymbols","_objectPie","$assign","_objectAssign","A","K","aLen","getSymbols","isEnum","at","TO_STRING","charCodeAt","_stringAt","_advanceStringIndex","unicode","builtinExec","_regexpExecAbstract","_flags","ignoreCase","multiline","sticky","nativeExec","nativeReplace","patchedExec","UPDATES_LAST_INDEX_WRONG","re1","re2","NPCG_INCLUDED","reCopy","re","_regexpExec","forced","SPECIES","REPLACE_SUPPORTS_NAMED_GROUPS","groups","SPLIT_WORKS_WITH_OVERWRITTEN_EXEC","originalExec","_fixReWks","SYMBOL","DELEGATES_TO_SYMBOL","DELEGATES_TO_EXEC","execCalled","nativeRegExpMethod","fns","nativeMethod","regexp","arg2","forceStringMethod","strfn","rxfn","max$1","min$2","floor$1","SUBSTITUTION_SYMBOLS","SUBSTITUTION_SYMBOLS_NO_NAMED","defined","REPLACE","$replace","maybeCallNative","searchValue","replaceValue","rx","functionalReplace","fullUnicode","results","matchStr","accumulatedResult","nextSourcePosition","captures","namedCaptures","replacerArgs","replacement","getSubstitution","tailPos","symbols","capture","MATCH","$match","SPECIES$1","$min","$push","SUPPORTS_Y","SPLIT","$split","internalSplit","isRegExp","_isRegexp","lastLength","lastLastIndex","splitLimit","separatorCopy","splitter","C","_speciesConstructor","unicodeMatching","lim","isCustomProperty","Boolean","documentMode","cssCustomProperties","sheets","styleSheets","cssText","rules","cssRules","selectorText","substring","lastIndexOf","trim","getCssCustomProperties","$toString","define","asideMenuCssClasses","checkBreakpoint","breakpoint","list","deepObjectsMerge","_arr","getColor","rawProperty","hexToRgb","hexToRgba","rgbToHex","sidebarCssClasses","validBreakpoints"],"mappings":"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","file":"static/js/7.d6a55750.chunk.js","sourcesContent":["/*!\n * Chart.js v2.8.0\n * https://www.chartjs.org\n * (c) 2019 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(function () {\n    try {\n      return require('moment');\n    } catch (e) {}\n  }()) : typeof define === 'function' && define.amd ? define(['require'], function (require) {\n    return factory(function () {\n      try {\n        return require('moment');\n      } catch (e) {}\n    }());\n  }) : global.Chart = factory(global.moment);\n})(this, function (moment) {\n  'use strict';\n\n  moment = moment && moment.hasOwnProperty('default') ? moment['default'] : moment;\n  /* MIT license */\n\n  var conversions = {\n    rgb2hsl: rgb2hsl,\n    rgb2hsv: rgb2hsv,\n    rgb2hwb: rgb2hwb,\n    rgb2cmyk: rgb2cmyk,\n    rgb2keyword: rgb2keyword,\n    rgb2xyz: rgb2xyz,\n    rgb2lab: rgb2lab,\n    rgb2lch: rgb2lch,\n    hsl2rgb: hsl2rgb,\n    hsl2hsv: hsl2hsv,\n    hsl2hwb: hsl2hwb,\n    hsl2cmyk: hsl2cmyk,\n    hsl2keyword: hsl2keyword,\n    hsv2rgb: hsv2rgb,\n    hsv2hsl: hsv2hsl,\n    hsv2hwb: hsv2hwb,\n    hsv2cmyk: hsv2cmyk,\n    hsv2keyword: hsv2keyword,\n    hwb2rgb: hwb2rgb,\n    hwb2hsl: hwb2hsl,\n    hwb2hsv: hwb2hsv,\n    hwb2cmyk: hwb2cmyk,\n    hwb2keyword: hwb2keyword,\n    cmyk2rgb: cmyk2rgb,\n    cmyk2hsl: cmyk2hsl,\n    cmyk2hsv: cmyk2hsv,\n    cmyk2hwb: cmyk2hwb,\n    cmyk2keyword: cmyk2keyword,\n    keyword2rgb: keyword2rgb,\n    keyword2hsl: keyword2hsl,\n    keyword2hsv: keyword2hsv,\n    keyword2hwb: keyword2hwb,\n    keyword2cmyk: keyword2cmyk,\n    keyword2lab: keyword2lab,\n    keyword2xyz: keyword2xyz,\n    xyz2rgb: xyz2rgb,\n    xyz2lab: xyz2lab,\n    xyz2lch: xyz2lch,\n    lab2xyz: lab2xyz,\n    lab2rgb: lab2rgb,\n    lab2lch: lab2lch,\n    lch2lab: lch2lab,\n    lch2xyz: lch2xyz,\n    lch2rgb: lch2rgb\n  };\n\n  function rgb2hsl(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        l;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    l = (min + max) / 2;\n    if (max == min) s = 0;else if (l <= 0.5) s = delta / (max + min);else s = delta / (2 - max - min);\n    return [h, s * 100, l * 100];\n  }\n\n  function rgb2hsv(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        v;\n    if (max == 0) s = 0;else s = delta / max * 1000 / 10;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    v = max / 255 * 1000 / 10;\n    return [h, s, v];\n  }\n\n  function rgb2hwb(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        h = rgb2hsl(rgb)[0],\n        w = 1 / 255 * Math.min(r, Math.min(g, b)),\n        b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n    return [h, w * 100, b * 100];\n  }\n\n  function rgb2cmyk(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        c,\n        m,\n        y,\n        k;\n    k = Math.min(1 - r, 1 - g, 1 - b);\n    c = (1 - r - k) / (1 - k) || 0;\n    m = (1 - g - k) / (1 - k) || 0;\n    y = (1 - b - k) / (1 - k) || 0;\n    return [c * 100, m * 100, y * 100, k * 100];\n  }\n\n  function rgb2keyword(rgb) {\n    return reverseKeywords[JSON.stringify(rgb)];\n  }\n\n  function rgb2xyz(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255; // assume sRGB\n\n    r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n    g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n    b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n    var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n    var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n    var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n    return [x * 100, y * 100, z * 100];\n  }\n\n  function rgb2lab(rgb) {\n    var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function rgb2lch(args) {\n    return lab2lch(rgb2lab(args));\n  }\n\n  function hsl2rgb(hsl) {\n    var h = hsl[0] / 360,\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        t1,\n        t2,\n        t3,\n        rgb,\n        val;\n\n    if (s == 0) {\n      val = l * 255;\n      return [val, val, val];\n    }\n\n    if (l < 0.5) t2 = l * (1 + s);else t2 = l + s - l * s;\n    t1 = 2 * l - t2;\n    rgb = [0, 0, 0];\n\n    for (var i = 0; i < 3; i++) {\n      t3 = h + 1 / 3 * -(i - 1);\n      t3 < 0 && t3++;\n      t3 > 1 && t3--;\n      if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;else if (2 * t3 < 1) val = t2;else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;else val = t1;\n      rgb[i] = val * 255;\n    }\n\n    return rgb;\n  }\n\n  function hsl2hsv(hsl) {\n    var h = hsl[0],\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        sv,\n        v;\n\n    if (l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n    }\n\n    l *= 2;\n    s *= l <= 1 ? l : 2 - l;\n    v = (l + s) / 2;\n    sv = 2 * s / (l + s);\n    return [h, sv * 100, v * 100];\n  }\n\n  function hsl2hwb(args) {\n    return rgb2hwb(hsl2rgb(args));\n  }\n\n  function hsl2cmyk(args) {\n    return rgb2cmyk(hsl2rgb(args));\n  }\n\n  function hsl2keyword(args) {\n    return rgb2keyword(hsl2rgb(args));\n  }\n\n  function hsv2rgb(hsv) {\n    var h = hsv[0] / 60,\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        hi = Math.floor(h) % 6;\n    var f = h - Math.floor(h),\n        p = 255 * v * (1 - s),\n        q = 255 * v * (1 - s * f),\n        t = 255 * v * (1 - s * (1 - f)),\n        v = 255 * v;\n\n    switch (hi) {\n      case 0:\n        return [v, t, p];\n\n      case 1:\n        return [q, v, p];\n\n      case 2:\n        return [p, v, t];\n\n      case 3:\n        return [p, q, v];\n\n      case 4:\n        return [t, p, v];\n\n      case 5:\n        return [v, p, q];\n    }\n  }\n\n  function hsv2hsl(hsv) {\n    var h = hsv[0],\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        sl,\n        l;\n    l = (2 - s) * v;\n    sl = s * v;\n    sl /= l <= 1 ? l : 2 - l;\n    sl = sl || 0;\n    l /= 2;\n    return [h, sl * 100, l * 100];\n  }\n\n  function hsv2hwb(args) {\n    return rgb2hwb(hsv2rgb(args));\n  }\n\n  function hsv2cmyk(args) {\n    return rgb2cmyk(hsv2rgb(args));\n  }\n\n  function hsv2keyword(args) {\n    return rgb2keyword(hsv2rgb(args));\n  } // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\n\n  function hwb2rgb(hwb) {\n    var h = hwb[0] / 360,\n        wh = hwb[1] / 100,\n        bl = hwb[2] / 100,\n        ratio = wh + bl,\n        i,\n        v,\n        f,\n        n; // wh + bl cant be > 1\n\n    if (ratio > 1) {\n      wh /= ratio;\n      bl /= ratio;\n    }\n\n    i = Math.floor(6 * h);\n    v = 1 - bl;\n    f = 6 * h - i;\n\n    if ((i & 0x01) != 0) {\n      f = 1 - f;\n    }\n\n    n = wh + f * (v - wh); // linear interpolation\n\n    switch (i) {\n      default:\n      case 6:\n      case 0:\n        r = v;\n        g = n;\n        b = wh;\n        break;\n\n      case 1:\n        r = n;\n        g = v;\n        b = wh;\n        break;\n\n      case 2:\n        r = wh;\n        g = v;\n        b = n;\n        break;\n\n      case 3:\n        r = wh;\n        g = n;\n        b = v;\n        break;\n\n      case 4:\n        r = n;\n        g = wh;\n        b = v;\n        break;\n\n      case 5:\n        r = v;\n        g = wh;\n        b = n;\n        break;\n    }\n\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function hwb2hsl(args) {\n    return rgb2hsl(hwb2rgb(args));\n  }\n\n  function hwb2hsv(args) {\n    return rgb2hsv(hwb2rgb(args));\n  }\n\n  function hwb2cmyk(args) {\n    return rgb2cmyk(hwb2rgb(args));\n  }\n\n  function hwb2keyword(args) {\n    return rgb2keyword(hwb2rgb(args));\n  }\n\n  function cmyk2rgb(cmyk) {\n    var c = cmyk[0] / 100,\n        m = cmyk[1] / 100,\n        y = cmyk[2] / 100,\n        k = cmyk[3] / 100,\n        r,\n        g,\n        b;\n    r = 1 - Math.min(1, c * (1 - k) + k);\n    g = 1 - Math.min(1, m * (1 - k) + k);\n    b = 1 - Math.min(1, y * (1 - k) + k);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function cmyk2hsl(args) {\n    return rgb2hsl(cmyk2rgb(args));\n  }\n\n  function cmyk2hsv(args) {\n    return rgb2hsv(cmyk2rgb(args));\n  }\n\n  function cmyk2hwb(args) {\n    return rgb2hwb(cmyk2rgb(args));\n  }\n\n  function cmyk2keyword(args) {\n    return rgb2keyword(cmyk2rgb(args));\n  }\n\n  function xyz2rgb(xyz) {\n    var x = xyz[0] / 100,\n        y = xyz[1] / 100,\n        z = xyz[2] / 100,\n        r,\n        g,\n        b;\n    r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n    g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n    b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB\n\n    r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r = r * 12.92;\n    g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g = g * 12.92;\n    b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b = b * 12.92;\n    r = Math.min(Math.max(0, r), 1);\n    g = Math.min(Math.max(0, g), 1);\n    b = Math.min(Math.max(0, b), 1);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function xyz2lab(xyz) {\n    var x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function xyz2lch(args) {\n    return lab2lch(xyz2lab(args));\n  }\n\n  function lab2xyz(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        x,\n        y,\n        z,\n        y2;\n\n    if (l <= 8) {\n      y = l * 100 / 903.3;\n      y2 = 7.787 * (y / 100) + 16 / 116;\n    } else {\n      y = 100 * Math.pow((l + 16) / 116, 3);\n      y2 = Math.pow(y / 100, 1 / 3);\n    }\n\n    x = x / 95.047 <= 0.008856 ? x = 95.047 * (a / 500 + y2 - 16 / 116) / 7.787 : 95.047 * Math.pow(a / 500 + y2, 3);\n    z = z / 108.883 <= 0.008859 ? z = 108.883 * (y2 - b / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(y2 - b / 200, 3);\n    return [x, y, z];\n  }\n\n  function lab2lch(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        hr,\n        h,\n        c;\n    hr = Math.atan2(b, a);\n    h = hr * 360 / 2 / Math.PI;\n\n    if (h < 0) {\n      h += 360;\n    }\n\n    c = Math.sqrt(a * a + b * b);\n    return [l, c, h];\n  }\n\n  function lab2rgb(args) {\n    return xyz2rgb(lab2xyz(args));\n  }\n\n  function lch2lab(lch) {\n    var l = lch[0],\n        c = lch[1],\n        h = lch[2],\n        a,\n        b,\n        hr;\n    hr = h / 360 * 2 * Math.PI;\n    a = c * Math.cos(hr);\n    b = c * Math.sin(hr);\n    return [l, a, b];\n  }\n\n  function lch2xyz(args) {\n    return lab2xyz(lch2lab(args));\n  }\n\n  function lch2rgb(args) {\n    return lab2rgb(lch2lab(args));\n  }\n\n  function keyword2rgb(keyword) {\n    return cssKeywords[keyword];\n  }\n\n  function keyword2hsl(args) {\n    return rgb2hsl(keyword2rgb(args));\n  }\n\n  function keyword2hsv(args) {\n    return rgb2hsv(keyword2rgb(args));\n  }\n\n  function keyword2hwb(args) {\n    return rgb2hwb(keyword2rgb(args));\n  }\n\n  function keyword2cmyk(args) {\n    return rgb2cmyk(keyword2rgb(args));\n  }\n\n  function keyword2lab(args) {\n    return rgb2lab(keyword2rgb(args));\n  }\n\n  function keyword2xyz(args) {\n    return rgb2xyz(keyword2rgb(args));\n  }\n\n  var cssKeywords = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 134, 11],\n    darkgray: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkgrey: [169, 169, 169],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 250, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    grey: [128, 128, 128],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightgrey: [211, 211, 211],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 221],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    rebeccapurple: [102, 51, 153],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [112, 128, 144],\n    slategrey: [112, 128, 144],\n    snow: [255, 250, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0],\n    yellowgreen: [154, 205, 50]\n  };\n  var reverseKeywords = {};\n\n  for (var key in cssKeywords) {\n    reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n  }\n\n  var convert = function convert() {\n    return new Converter();\n  };\n\n  for (var func in conversions) {\n    // export Raw versions\n    convert[func + \"Raw\"] = function (func) {\n      // accept array or plain args\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        return conversions[func](arg);\n      };\n    }(func);\n\n    var pair = /(\\w+)2(\\w+)/.exec(func),\n        from = pair[1],\n        to = pair[2]; // export rgb2hsl and [\"rgb\"][\"hsl\"]\n\n    convert[from] = convert[from] || {};\n\n    convert[from][to] = convert[func] = function (func) {\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        var val = conversions[func](arg);\n        if (typeof val == \"string\" || val === undefined) return val; // keyword\n\n        for (var i = 0; i < val.length; i++) {\n          val[i] = Math.round(val[i]);\n        }\n\n        return val;\n      };\n    }(func);\n  }\n  /* Converter does lazy conversion and caching */\n\n\n  var Converter = function Converter() {\n    this.convs = {};\n  };\n  /* Either get the values for a space or\n    set the values for a space, depending on args */\n\n\n  Converter.prototype.routeSpace = function (space, args) {\n    var values = args[0];\n\n    if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);\n    }\n\n    return this.setValues(space, values);\n  };\n  /* Set the values for a space, invalidating cache */\n\n\n  Converter.prototype.setValues = function (space, values) {\n    this.space = space;\n    this.convs = {};\n    this.convs[space] = values;\n    return this;\n  };\n  /* Get the values for a space. If there's already\n    a conversion for the space, fetch it, otherwise\n    compute it */\n\n\n  Converter.prototype.getValues = function (space) {\n    var vals = this.convs[space];\n\n    if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n      this.convs[space] = vals;\n    }\n\n    return vals;\n  };\n\n  [\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function (space) {\n    Converter.prototype[space] = function (vals) {\n      return this.routeSpace(space, arguments);\n    };\n  });\n  var colorConvert = convert;\n  var colorName = {\n    \"aliceblue\": [240, 248, 255],\n    \"antiquewhite\": [250, 235, 215],\n    \"aqua\": [0, 255, 255],\n    \"aquamarine\": [127, 255, 212],\n    \"azure\": [240, 255, 255],\n    \"beige\": [245, 245, 220],\n    \"bisque\": [255, 228, 196],\n    \"black\": [0, 0, 0],\n    \"blanchedalmond\": [255, 235, 205],\n    \"blue\": [0, 0, 255],\n    \"blueviolet\": [138, 43, 226],\n    \"brown\": [165, 42, 42],\n    \"burlywood\": [222, 184, 135],\n    \"cadetblue\": [95, 158, 160],\n    \"chartreuse\": [127, 255, 0],\n    \"chocolate\": [210, 105, 30],\n    \"coral\": [255, 127, 80],\n    \"cornflowerblue\": [100, 149, 237],\n    \"cornsilk\": [255, 248, 220],\n    \"crimson\": [220, 20, 60],\n    \"cyan\": [0, 255, 255],\n    \"darkblue\": [0, 0, 139],\n    \"darkcyan\": [0, 139, 139],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"darkgray\": [169, 169, 169],\n    \"darkgreen\": [0, 100, 0],\n    \"darkgrey\": [169, 169, 169],\n    \"darkkhaki\": [189, 183, 107],\n    \"darkmagenta\": [139, 0, 139],\n    \"darkolivegreen\": [85, 107, 47],\n    \"darkorange\": [255, 140, 0],\n    \"darkorchid\": [153, 50, 204],\n    \"darkred\": [139, 0, 0],\n    \"darksalmon\": [233, 150, 122],\n    \"darkseagreen\": [143, 188, 143],\n    \"darkslateblue\": [72, 61, 139],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"darkturquoise\": [0, 206, 209],\n    \"darkviolet\": [148, 0, 211],\n    \"deeppink\": [255, 20, 147],\n    \"deepskyblue\": [0, 191, 255],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"dodgerblue\": [30, 144, 255],\n    \"firebrick\": [178, 34, 34],\n    \"floralwhite\": [255, 250, 240],\n    \"forestgreen\": [34, 139, 34],\n    \"fuchsia\": [255, 0, 255],\n    \"gainsboro\": [220, 220, 220],\n    \"ghostwhite\": [248, 248, 255],\n    \"gold\": [255, 215, 0],\n    \"goldenrod\": [218, 165, 32],\n    \"gray\": [128, 128, 128],\n    \"green\": [0, 128, 0],\n    \"greenyellow\": [173, 255, 47],\n    \"grey\": [128, 128, 128],\n    \"honeydew\": [240, 255, 240],\n    \"hotpink\": [255, 105, 180],\n    \"indianred\": [205, 92, 92],\n    \"indigo\": [75, 0, 130],\n    \"ivory\": [255, 255, 240],\n    \"khaki\": [240, 230, 140],\n    \"lavender\": [230, 230, 250],\n    \"lavenderblush\": [255, 240, 245],\n    \"lawngreen\": [124, 252, 0],\n    \"lemonchiffon\": [255, 250, 205],\n    \"lightblue\": [173, 216, 230],\n    \"lightcoral\": [240, 128, 128],\n    \"lightcyan\": [224, 255, 255],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"lightgray\": [211, 211, 211],\n    \"lightgreen\": [144, 238, 144],\n    \"lightgrey\": [211, 211, 211],\n    \"lightpink\": [255, 182, 193],\n    \"lightsalmon\": [255, 160, 122],\n    \"lightseagreen\": [32, 178, 170],\n    \"lightskyblue\": [135, 206, 250],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"lightsteelblue\": [176, 196, 222],\n    \"lightyellow\": [255, 255, 224],\n    \"lime\": [0, 255, 0],\n    \"limegreen\": [50, 205, 50],\n    \"linen\": [250, 240, 230],\n    \"magenta\": [255, 0, 255],\n    \"maroon\": [128, 0, 0],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"mediumblue\": [0, 0, 205],\n    \"mediumorchid\": [186, 85, 211],\n    \"mediumpurple\": [147, 112, 219],\n    \"mediumseagreen\": [60, 179, 113],\n    \"mediumslateblue\": [123, 104, 238],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"mediumturquoise\": [72, 209, 204],\n    \"mediumvioletred\": [199, 21, 133],\n    \"midnightblue\": [25, 25, 112],\n    \"mintcream\": [245, 255, 250],\n    \"mistyrose\": [255, 228, 225],\n    \"moccasin\": [255, 228, 181],\n    \"navajowhite\": [255, 222, 173],\n    \"navy\": [0, 0, 128],\n    \"oldlace\": [253, 245, 230],\n    \"olive\": [128, 128, 0],\n    \"olivedrab\": [107, 142, 35],\n    \"orange\": [255, 165, 0],\n    \"orangered\": [255, 69, 0],\n    \"orchid\": [218, 112, 214],\n    \"palegoldenrod\": [238, 232, 170],\n    \"palegreen\": [152, 251, 152],\n    \"paleturquoise\": [175, 238, 238],\n    \"palevioletred\": [219, 112, 147],\n    \"papayawhip\": [255, 239, 213],\n    \"peachpuff\": [255, 218, 185],\n    \"peru\": [205, 133, 63],\n    \"pink\": [255, 192, 203],\n    \"plum\": [221, 160, 221],\n    \"powderblue\": [176, 224, 230],\n    \"purple\": [128, 0, 128],\n    \"rebeccapurple\": [102, 51, 153],\n    \"red\": [255, 0, 0],\n    \"rosybrown\": [188, 143, 143],\n    \"royalblue\": [65, 105, 225],\n    \"saddlebrown\": [139, 69, 19],\n    \"salmon\": [250, 128, 114],\n    \"sandybrown\": [244, 164, 96],\n    \"seagreen\": [46, 139, 87],\n    \"seashell\": [255, 245, 238],\n    \"sienna\": [160, 82, 45],\n    \"silver\": [192, 192, 192],\n    \"skyblue\": [135, 206, 235],\n    \"slateblue\": [106, 90, 205],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"snow\": [255, 250, 250],\n    \"springgreen\": [0, 255, 127],\n    \"steelblue\": [70, 130, 180],\n    \"tan\": [210, 180, 140],\n    \"teal\": [0, 128, 128],\n    \"thistle\": [216, 191, 216],\n    \"tomato\": [255, 99, 71],\n    \"turquoise\": [64, 224, 208],\n    \"violet\": [238, 130, 238],\n    \"wheat\": [245, 222, 179],\n    \"white\": [255, 255, 255],\n    \"whitesmoke\": [245, 245, 245],\n    \"yellow\": [255, 255, 0],\n    \"yellowgreen\": [154, 205, 50]\n  };\n  /* MIT license */\n\n  var colorString = {\n    getRgba: getRgba,\n    getHsla: getHsla,\n    getRgb: getRgb,\n    getHsl: getHsl,\n    getHwb: getHwb,\n    getAlpha: getAlpha,\n    hexString: hexString,\n    rgbString: rgbString,\n    rgbaString: rgbaString,\n    percentString: percentString,\n    percentaString: percentaString,\n    hslString: hslString,\n    hslaString: hslaString,\n    hwbString: hwbString,\n    keyword: keyword\n  };\n\n  function getRgba(string) {\n    if (!string) {\n      return;\n    }\n\n    var abbr = /^#([a-fA-F0-9]{3,4})$/i,\n        hex = /^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i,\n        rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        keyword = /(\\w+)/;\n    var rgb = [0, 0, 0],\n        a = 1,\n        match = string.match(abbr),\n        hexAlpha = \"\";\n\n    if (match) {\n      match = match[1];\n      hexAlpha = match[3];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha + hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(hex)) {\n      hexAlpha = match[2];\n      match = match[1];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i + 1]);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n        return [0, 0, 0, 0];\n      }\n\n      rgb = colorName[match[1]];\n\n      if (!rgb) {\n        return;\n      }\n    }\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n    }\n\n    if (!a && a != 0) {\n      a = 1;\n    } else {\n      a = scale(a, 0, 1);\n    }\n\n    rgb[3] = a;\n    return rgb;\n  }\n\n  function getHsla(string) {\n    if (!string) {\n      return;\n    }\n\n    var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hsl);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n    }\n  }\n\n  function getHwb(string) {\n    if (!string) {\n      return;\n    }\n\n    var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hwb);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n    }\n  }\n\n  function getRgb(string) {\n    var rgba = getRgba(string);\n    return rgba && rgba.slice(0, 3);\n  }\n\n  function getHsl(string) {\n    var hsla = getHsla(string);\n    return hsla && hsla.slice(0, 3);\n  }\n\n  function getAlpha(string) {\n    var vals = getRgba(string);\n\n    if (vals) {\n      return vals[3];\n    } else if (vals = getHsla(string)) {\n      return vals[3];\n    } else if (vals = getHwb(string)) {\n      return vals[3];\n    }\n  } // generators\n\n\n  function hexString(rgba, a) {\n    var a = a !== undefined && rgba.length === 3 ? a : rgba[3];\n    return \"#\" + hexDouble(rgba[0]) + hexDouble(rgba[1]) + hexDouble(rgba[2]) + (a >= 0 && a < 1 ? hexDouble(Math.round(a * 255)) : \"\");\n  }\n\n  function rgbString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return rgbaString(rgba, alpha);\n    }\n\n    return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n  }\n\n  function rgbaString(rgba, alpha) {\n    if (alpha === undefined) {\n      alpha = rgba[3] !== undefined ? rgba[3] : 1;\n    }\n\n    return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \", \" + alpha + \")\";\n  }\n\n  function percentString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return percentaString(rgba, alpha);\n    }\n\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n  }\n\n  function percentaString(rgba, alpha) {\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n  }\n\n  function hslString(hsla, alpha) {\n    if (alpha < 1 || hsla[3] && hsla[3] < 1) {\n      return hslaString(hsla, alpha);\n    }\n\n    return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n  }\n\n  function hslaString(hsla, alpha) {\n    if (alpha === undefined) {\n      alpha = hsla[3] !== undefined ? hsla[3] : 1;\n    }\n\n    return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \" + alpha + \")\";\n  } // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n  // (hwb have alpha optional & 1 is default value)\n\n\n  function hwbString(hwb, alpha) {\n    if (alpha === undefined) {\n      alpha = hwb[3] !== undefined ? hwb[3] : 1;\n    }\n\n    return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\" + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n  }\n\n  function keyword(rgb) {\n    return reverseNames[rgb.slice(0, 3)];\n  } // helpers\n\n\n  function scale(num, min, max) {\n    return Math.min(Math.max(min, num), max);\n  }\n\n  function hexDouble(num) {\n    var str = num.toString(16).toUpperCase();\n    return str.length < 2 ? \"0\" + str : str;\n  } //create a list of reverse color names\n\n\n  var reverseNames = {};\n\n  for (var name in colorName) {\n    reverseNames[colorName[name]] = name;\n  }\n  /* MIT license */\n\n\n  var Color = function Color(obj) {\n    if (obj instanceof Color) {\n      return obj;\n    }\n\n    if (!(this instanceof Color)) {\n      return new Color(obj);\n    }\n\n    this.valid = false;\n    this.values = {\n      rgb: [0, 0, 0],\n      hsl: [0, 0, 0],\n      hsv: [0, 0, 0],\n      hwb: [0, 0, 0],\n      cmyk: [0, 0, 0, 0],\n      alpha: 1\n    }; // parse Color() argument\n\n    var vals;\n\n    if (typeof obj === 'string') {\n      vals = colorString.getRgba(obj);\n\n      if (vals) {\n        this.setValues('rgb', vals);\n      } else if (vals = colorString.getHsla(obj)) {\n        this.setValues('hsl', vals);\n      } else if (vals = colorString.getHwb(obj)) {\n        this.setValues('hwb', vals);\n      }\n    } else if (typeof obj === 'object') {\n      vals = obj;\n\n      if (vals.r !== undefined || vals.red !== undefined) {\n        this.setValues('rgb', vals);\n      } else if (vals.l !== undefined || vals.lightness !== undefined) {\n        this.setValues('hsl', vals);\n      } else if (vals.v !== undefined || vals.value !== undefined) {\n        this.setValues('hsv', vals);\n      } else if (vals.w !== undefined || vals.whiteness !== undefined) {\n        this.setValues('hwb', vals);\n      } else if (vals.c !== undefined || vals.cyan !== undefined) {\n        this.setValues('cmyk', vals);\n      }\n    }\n  };\n\n  Color.prototype = {\n    isValid: function isValid() {\n      return this.valid;\n    },\n    rgb: function rgb() {\n      return this.setSpace('rgb', arguments);\n    },\n    hsl: function hsl() {\n      return this.setSpace('hsl', arguments);\n    },\n    hsv: function hsv() {\n      return this.setSpace('hsv', arguments);\n    },\n    hwb: function hwb() {\n      return this.setSpace('hwb', arguments);\n    },\n    cmyk: function cmyk() {\n      return this.setSpace('cmyk', arguments);\n    },\n    rgbArray: function rgbArray() {\n      return this.values.rgb;\n    },\n    hslArray: function hslArray() {\n      return this.values.hsl;\n    },\n    hsvArray: function hsvArray() {\n      return this.values.hsv;\n    },\n    hwbArray: function hwbArray() {\n      var values = this.values;\n\n      if (values.alpha !== 1) {\n        return values.hwb.concat([values.alpha]);\n      }\n\n      return values.hwb;\n    },\n    cmykArray: function cmykArray() {\n      return this.values.cmyk;\n    },\n    rgbaArray: function rgbaArray() {\n      var values = this.values;\n      return values.rgb.concat([values.alpha]);\n    },\n    hslaArray: function hslaArray() {\n      var values = this.values;\n      return values.hsl.concat([values.alpha]);\n    },\n    alpha: function alpha(val) {\n      if (val === undefined) {\n        return this.values.alpha;\n      }\n\n      this.setValues('alpha', val);\n      return this;\n    },\n    red: function red(val) {\n      return this.setChannel('rgb', 0, val);\n    },\n    green: function green(val) {\n      return this.setChannel('rgb', 1, val);\n    },\n    blue: function blue(val) {\n      return this.setChannel('rgb', 2, val);\n    },\n    hue: function hue(val) {\n      if (val) {\n        val %= 360;\n        val = val < 0 ? 360 + val : val;\n      }\n\n      return this.setChannel('hsl', 0, val);\n    },\n    saturation: function saturation(val) {\n      return this.setChannel('hsl', 1, val);\n    },\n    lightness: function lightness(val) {\n      return this.setChannel('hsl', 2, val);\n    },\n    saturationv: function saturationv(val) {\n      return this.setChannel('hsv', 1, val);\n    },\n    whiteness: function whiteness(val) {\n      return this.setChannel('hwb', 1, val);\n    },\n    blackness: function blackness(val) {\n      return this.setChannel('hwb', 2, val);\n    },\n    value: function value(val) {\n      return this.setChannel('hsv', 2, val);\n    },\n    cyan: function cyan(val) {\n      return this.setChannel('cmyk', 0, val);\n    },\n    magenta: function magenta(val) {\n      return this.setChannel('cmyk', 1, val);\n    },\n    yellow: function yellow(val) {\n      return this.setChannel('cmyk', 2, val);\n    },\n    black: function black(val) {\n      return this.setChannel('cmyk', 3, val);\n    },\n    hexString: function hexString() {\n      return colorString.hexString(this.values.rgb);\n    },\n    rgbString: function rgbString() {\n      return colorString.rgbString(this.values.rgb, this.values.alpha);\n    },\n    rgbaString: function rgbaString() {\n      return colorString.rgbaString(this.values.rgb, this.values.alpha);\n    },\n    percentString: function percentString() {\n      return colorString.percentString(this.values.rgb, this.values.alpha);\n    },\n    hslString: function hslString() {\n      return colorString.hslString(this.values.hsl, this.values.alpha);\n    },\n    hslaString: function hslaString() {\n      return colorString.hslaString(this.values.hsl, this.values.alpha);\n    },\n    hwbString: function hwbString() {\n      return colorString.hwbString(this.values.hwb, this.values.alpha);\n    },\n    keyword: function keyword() {\n      return colorString.keyword(this.values.rgb, this.values.alpha);\n    },\n    rgbNumber: function rgbNumber() {\n      var rgb = this.values.rgb;\n      return rgb[0] << 16 | rgb[1] << 8 | rgb[2];\n    },\n    luminosity: function luminosity() {\n      // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n      var rgb = this.values.rgb;\n      var lum = [];\n\n      for (var i = 0; i < rgb.length; i++) {\n        var chan = rgb[i] / 255;\n        lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);\n      }\n\n      return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n    },\n    contrast: function contrast(color2) {\n      // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n      var lum1 = this.luminosity();\n      var lum2 = color2.luminosity();\n\n      if (lum1 > lum2) {\n        return (lum1 + 0.05) / (lum2 + 0.05);\n      }\n\n      return (lum2 + 0.05) / (lum1 + 0.05);\n    },\n    level: function level(color2) {\n      var contrastRatio = this.contrast(color2);\n\n      if (contrastRatio >= 7.1) {\n        return 'AAA';\n      }\n\n      return contrastRatio >= 4.5 ? 'AA' : '';\n    },\n    dark: function dark() {\n      // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n      var rgb = this.values.rgb;\n      var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n      return yiq < 128;\n    },\n    light: function light() {\n      return !this.dark();\n    },\n    negate: function negate() {\n      var rgb = [];\n\n      for (var i = 0; i < 3; i++) {\n        rgb[i] = 255 - this.values.rgb[i];\n      }\n\n      this.setValues('rgb', rgb);\n      return this;\n    },\n    lighten: function lighten(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] += hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    darken: function darken(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] -= hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    saturate: function saturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] += hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    desaturate: function desaturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] -= hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    whiten: function whiten(ratio) {\n      var hwb = this.values.hwb;\n      hwb[1] += hwb[1] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    blacken: function blacken(ratio) {\n      var hwb = this.values.hwb;\n      hwb[2] += hwb[2] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    greyscale: function greyscale() {\n      var rgb = this.values.rgb; // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\n      var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n      this.setValues('rgb', [val, val, val]);\n      return this;\n    },\n    clearer: function clearer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha - alpha * ratio);\n      return this;\n    },\n    opaquer: function opaquer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha + alpha * ratio);\n      return this;\n    },\n    rotate: function rotate(degrees) {\n      var hsl = this.values.hsl;\n      var hue = (hsl[0] + degrees) % 360;\n      hsl[0] = hue < 0 ? 360 + hue : hue;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n\n    /**\n     * Ported from sass implementation in C\n     * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n     */\n    mix: function mix(mixinColor, weight) {\n      var color1 = this;\n      var color2 = mixinColor;\n      var p = weight === undefined ? 0.5 : weight;\n      var w = 2 * p - 1;\n      var a = color1.alpha() - color2.alpha();\n      var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      var w2 = 1 - w1;\n      return this.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue()).alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n    },\n    toJSON: function toJSON() {\n      return this.rgb();\n    },\n    clone: function clone() {\n      // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n      // making the final build way to big to embed in Chart.js. So let's do it manually,\n      // assuming that values to clone are 1 dimension arrays containing only numbers,\n      // except 'alpha' which is a number.\n      var result = new Color();\n      var source = this.values;\n      var target = result.values;\n      var value, type;\n\n      for (var prop in source) {\n        if (source.hasOwnProperty(prop)) {\n          value = source[prop];\n          type = {}.toString.call(value);\n\n          if (type === '[object Array]') {\n            target[prop] = value.slice(0);\n          } else if (type === '[object Number]') {\n            target[prop] = value;\n          } else {\n            console.error('unexpected color value:', value);\n          }\n        }\n      }\n\n      return result;\n    }\n  };\n  Color.prototype.spaces = {\n    rgb: ['red', 'green', 'blue'],\n    hsl: ['hue', 'saturation', 'lightness'],\n    hsv: ['hue', 'saturation', 'value'],\n    hwb: ['hue', 'whiteness', 'blackness'],\n    cmyk: ['cyan', 'magenta', 'yellow', 'black']\n  };\n  Color.prototype.maxes = {\n    rgb: [255, 255, 255],\n    hsl: [360, 100, 100],\n    hsv: [360, 100, 100],\n    hwb: [360, 100, 100],\n    cmyk: [100, 100, 100, 100]\n  };\n\n  Color.prototype.getValues = function (space) {\n    var values = this.values;\n    var vals = {};\n\n    for (var i = 0; i < space.length; i++) {\n      vals[space.charAt(i)] = values[space][i];\n    }\n\n    if (values.alpha !== 1) {\n      vals.a = values.alpha;\n    } // {r: 255, g: 255, b: 255, a: 0.4}\n\n\n    return vals;\n  };\n\n  Color.prototype.setValues = function (space, vals) {\n    var values = this.values;\n    var spaces = this.spaces;\n    var maxes = this.maxes;\n    var alpha = 1;\n    var i;\n    this.valid = true;\n\n    if (space === 'alpha') {\n      alpha = vals;\n    } else if (vals.length) {\n      // [10, 10, 10]\n      values[space] = vals.slice(0, space.length);\n      alpha = vals[space.length];\n    } else if (vals[space.charAt(0)] !== undefined) {\n      // {r: 10, g: 10, b: 10}\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[space.charAt(i)];\n      }\n\n      alpha = vals.a;\n    } else if (vals[spaces[space][0]] !== undefined) {\n      // {red: 10, green: 10, blue: 10}\n      var chans = spaces[space];\n\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[chans[i]];\n      }\n\n      alpha = vals.alpha;\n    }\n\n    values.alpha = Math.max(0, Math.min(1, alpha === undefined ? values.alpha : alpha));\n\n    if (space === 'alpha') {\n      return false;\n    }\n\n    var capped; // cap values of the space prior converting all values\n\n    for (i = 0; i < space.length; i++) {\n      capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n      values[space][i] = Math.round(capped);\n    } // convert to all the other color spaces\n\n\n    for (var sname in spaces) {\n      if (sname !== space) {\n        values[sname] = colorConvert[space][sname](values[space]);\n      }\n    }\n\n    return true;\n  };\n\n  Color.prototype.setSpace = function (space, args) {\n    var vals = args[0];\n\n    if (vals === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof vals === 'number') {\n      vals = Array.prototype.slice.call(args);\n    }\n\n    this.setValues(space, vals);\n    return this;\n  };\n\n  Color.prototype.setChannel = function (space, index, val) {\n    var svalues = this.values[space];\n\n    if (val === undefined) {\n      // color.red()\n      return svalues[index];\n    } else if (val === svalues[index]) {\n      // color.red(color.red())\n      return this;\n    } // color.red(100)\n\n\n    svalues[index] = val;\n    this.setValues(space, svalues);\n    return this;\n  };\n\n  if (typeof window !== 'undefined') {\n    window.Color = Color;\n  }\n\n  var chartjsColor = Color;\n  /**\n   * @namespace Chart.helpers\n   */\n\n  var helpers = {\n    /**\n     * An empty function that can be used, for example, for optional callback.\n     */\n    noop: function noop() {},\n\n    /**\n     * Returns a unique id, sequentially generated from a global variable.\n     * @returns {number}\n     * @function\n     */\n    uid: function () {\n      var id = 0;\n      return function () {\n        return id++;\n      };\n    }(),\n\n    /**\n     * Returns true if `value` is neither null nor undefined, else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isNullOrUndef: function isNullOrUndef(value) {\n      return value === null || typeof value === 'undefined';\n    },\n\n    /**\n     * Returns true if `value` is an array (including typed arrays), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @function\n     */\n    isArray: function isArray(value) {\n      if (Array.isArray && Array.isArray(value)) {\n        return true;\n      }\n\n      var type = Object.prototype.toString.call(value);\n\n      if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Returns true if `value` is an object (excluding null), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isObject: function isObject(value) {\n      return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n    },\n\n    /**\n     * Returns true if `value` is a finite number, else returns false\n     * @param {*} value  - The value to test.\n     * @returns {boolean}\n     */\n    isFinite: function (_isFinite) {\n      function isFinite(_x) {\n        return _isFinite.apply(this, arguments);\n      }\n\n      isFinite.toString = function () {\n        return _isFinite.toString();\n      };\n\n      return isFinite;\n    }(function (value) {\n      return (typeof value === 'number' || value instanceof Number) && isFinite(value);\n    }),\n\n    /**\n     * Returns `value` if defined, else returns `defaultValue`.\n     * @param {*} value - The value to return if defined.\n     * @param {*} defaultValue - The value to return if `value` is undefined.\n     * @returns {*}\n     */\n    valueOrDefault: function valueOrDefault(value, defaultValue) {\n      return typeof value === 'undefined' ? defaultValue : value;\n    },\n\n    /**\n     * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n     * @param {Array} value - The array to lookup for value at `index`.\n     * @param {number} index - The index in `value` to lookup for value.\n     * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n     * @returns {*}\n     */\n    valueAtIndexOrDefault: function valueAtIndexOrDefault(value, index, defaultValue) {\n      return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n    },\n\n    /**\n     * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n     * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n     * @param {function} fn - The function to call.\n     * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @returns {*}\n     */\n    callback: function callback(fn, args, thisArg) {\n      if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n      }\n    },\n\n    /**\n     * Note(SB) for performance sake, this method should only be used when loopable type\n     * is unknown or in none intensive code (not called often and small loopable). Else\n     * it's preferable to use a regular for() loop and save extra function calls.\n     * @param {object|Array} loopable - The object or array to be iterated.\n     * @param {function} fn - The function to call for each item.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @param {boolean} [reverse] - If true, iterates backward on the loopable.\n     */\n    each: function each(loopable, fn, thisArg, reverse) {\n      var i, len, keys;\n\n      if (helpers.isArray(loopable)) {\n        len = loopable.length;\n\n        if (reverse) {\n          for (i = len - 1; i >= 0; i--) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        } else {\n          for (i = 0; i < len; i++) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        }\n      } else if (helpers.isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n      }\n    },\n\n    /**\n     * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n     * @see https://stackoverflow.com/a/14853974\n     * @param {Array} a0 - The array to compare\n     * @param {Array} a1 - The array to compare\n     * @returns {boolean}\n     */\n    arrayEquals: function arrayEquals(a0, a1) {\n      var i, ilen, v0, v1;\n\n      if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n      }\n\n      for (i = 0, ilen = a0.length; i < ilen; ++i) {\n        v0 = a0[i];\n        v1 = a1[i];\n\n        if (v0 instanceof Array && v1 instanceof Array) {\n          if (!helpers.arrayEquals(v0, v1)) {\n            return false;\n          }\n        } else if (v0 !== v1) {\n          // NOTE: two different object instances will never be equal: {x:20} != {x:20}\n          return false;\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns a deep copy of `source` without keeping references on objects and arrays.\n     * @param {*} source - The value to clone.\n     * @returns {*}\n     */\n    clone: function clone(source) {\n      if (helpers.isArray(source)) {\n        return source.map(helpers.clone);\n      }\n\n      if (helpers.isObject(source)) {\n        var target = {};\n        var keys = Object.keys(source);\n        var klen = keys.length;\n        var k = 0;\n\n        for (; k < klen; ++k) {\n          target[keys[k]] = helpers.clone(source[keys[k]]);\n        }\n\n        return target;\n      }\n\n      return source;\n    },\n\n    /**\n     * The default merger when Chart.helpers.merge is called without merger option.\n     * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n     * @private\n     */\n    _merger: function _merger(key, target, source, options) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.merge(tval, sval, options);\n      } else {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Merges source[key] in target[key] only if target[key] is undefined.\n     * @private\n     */\n    _mergerIf: function _mergerIf(key, target, source) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.mergeIf(tval, sval);\n      } else if (!target.hasOwnProperty(key)) {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` with the given `options`.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @param {object} [options] - Merging options:\n     * @param {function} [options.merger] - The merge method (key, target, source, options)\n     * @returns {object} The `target` object.\n     */\n    merge: function merge(target, source, options) {\n      var sources = helpers.isArray(source) ? source : [source];\n      var ilen = sources.length;\n      var merge, i, keys, klen, k;\n\n      if (!helpers.isObject(target)) {\n        return target;\n      }\n\n      options = options || {};\n      merge = options.merger || helpers._merger;\n\n      for (i = 0; i < ilen; ++i) {\n        source = sources[i];\n\n        if (!helpers.isObject(source)) {\n          continue;\n        }\n\n        keys = Object.keys(source);\n\n        for (k = 0, klen = keys.length; k < klen; ++k) {\n          merge(keys[k], target, source, options);\n        }\n      }\n\n      return target;\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @returns {object} The `target` object.\n     */\n    mergeIf: function mergeIf(target, source) {\n      return helpers.merge(target, source, {\n        merger: helpers._mergerIf\n      });\n    },\n\n    /**\n     * Applies the contents of two or more objects together into the first object.\n     * @param {object} target - The target object in which all objects are merged into.\n     * @param {object} arg1 - Object containing additional properties to merge in target.\n     * @param {object} argN - Additional objects containing properties to merge in target.\n     * @returns {object} The `target` object.\n     */\n    extend: function extend(target) {\n      var setFn = function setFn(value, key) {\n        target[key] = value;\n      };\n\n      for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n        helpers.each(arguments[i], setFn);\n      }\n\n      return target;\n    },\n\n    /**\n     * Basic javascript inheritance based on the model created in Backbone.js\n     */\n    inherits: function inherits(extensions) {\n      var me = this;\n      var ChartElement = extensions && extensions.hasOwnProperty('constructor') ? extensions.constructor : function () {\n        return me.apply(this, arguments);\n      };\n\n      var Surrogate = function Surrogate() {\n        this.constructor = ChartElement;\n      };\n\n      Surrogate.prototype = me.prototype;\n      ChartElement.prototype = new Surrogate();\n      ChartElement.extend = helpers.inherits;\n\n      if (extensions) {\n        helpers.extend(ChartElement.prototype, extensions);\n      }\n\n      ChartElement.__super__ = me.prototype;\n      return ChartElement;\n    }\n  };\n  var helpers_core = helpers; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.callback instead.\n   * @function Chart.helpers.callCallback\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.callCallback = helpers.callback;\n  /**\n   * Provided for backward compatibility, use Array.prototype.indexOf instead.\n   * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n   * @function Chart.helpers.indexOf\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.indexOf = function (array, item, fromIndex) {\n    return Array.prototype.indexOf.call(array, item, fromIndex);\n  };\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n   * @function Chart.helpers.getValueOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  helpers.getValueOrDefault = helpers.valueOrDefault;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n   * @function Chart.helpers.getValueAtIndexOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n  /**\n   * Easing functions adapted from Robert Penner's easing equations.\n   * @namespace Chart.helpers.easingEffects\n   * @see http://www.robertpenner.com/easing/\n   */\n\n  var effects = {\n    linear: function linear(t) {\n      return t;\n    },\n    easeInQuad: function easeInQuad(t) {\n      return t * t;\n    },\n    easeOutQuad: function easeOutQuad(t) {\n      return -t * (t - 2);\n    },\n    easeInOutQuad: function easeInOutQuad(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t;\n      }\n\n      return -0.5 * (--t * (t - 2) - 1);\n    },\n    easeInCubic: function easeInCubic(t) {\n      return t * t * t;\n    },\n    easeOutCubic: function easeOutCubic(t) {\n      return (t = t - 1) * t * t + 1;\n    },\n    easeInOutCubic: function easeInOutCubic(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t + 2);\n    },\n    easeInQuart: function easeInQuart(t) {\n      return t * t * t * t;\n    },\n    easeOutQuart: function easeOutQuart(t) {\n      return -((t = t - 1) * t * t * t - 1);\n    },\n    easeInOutQuart: function easeInOutQuart(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t;\n      }\n\n      return -0.5 * ((t -= 2) * t * t * t - 2);\n    },\n    easeInQuint: function easeInQuint(t) {\n      return t * t * t * t * t;\n    },\n    easeOutQuint: function easeOutQuint(t) {\n      return (t = t - 1) * t * t * t * t + 1;\n    },\n    easeInOutQuint: function easeInOutQuint(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t * t * t + 2);\n    },\n    easeInSine: function easeInSine(t) {\n      return -Math.cos(t * (Math.PI / 2)) + 1;\n    },\n    easeOutSine: function easeOutSine(t) {\n      return Math.sin(t * (Math.PI / 2));\n    },\n    easeInOutSine: function easeInOutSine(t) {\n      return -0.5 * (Math.cos(Math.PI * t) - 1);\n    },\n    easeInExpo: function easeInExpo(t) {\n      return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));\n    },\n    easeOutExpo: function easeOutExpo(t) {\n      return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;\n    },\n    easeInOutExpo: function easeInOutExpo(t) {\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * Math.pow(2, 10 * (t - 1));\n      }\n\n      return 0.5 * (-Math.pow(2, -10 * --t) + 2);\n    },\n    easeInCirc: function easeInCirc(t) {\n      if (t >= 1) {\n        return t;\n      }\n\n      return -(Math.sqrt(1 - t * t) - 1);\n    },\n    easeOutCirc: function easeOutCirc(t) {\n      return Math.sqrt(1 - (t = t - 1) * t);\n    },\n    easeInOutCirc: function easeInOutCirc(t) {\n      if ((t /= 0.5) < 1) {\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n      }\n\n      return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n    },\n    easeInElastic: function easeInElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n    },\n    easeOutElastic: function easeOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n    },\n    easeInOutElastic: function easeInOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if ((t /= 0.5) === 2) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.45;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      if (t < 1) {\n        return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n      }\n\n      return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n    },\n    easeInBack: function easeInBack(t) {\n      var s = 1.70158;\n      return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack: function easeOutBack(t) {\n      var s = 1.70158;\n      return (t = t - 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack: function easeInOutBack(t) {\n      var s = 1.70158;\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n      }\n\n      return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: function easeInBounce(t) {\n      return 1 - effects.easeOutBounce(1 - t);\n    },\n    easeOutBounce: function easeOutBounce(t) {\n      if (t < 1 / 2.75) {\n        return 7.5625 * t * t;\n      }\n\n      if (t < 2 / 2.75) {\n        return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n      }\n\n      if (t < 2.5 / 2.75) {\n        return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n      }\n\n      return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n    },\n    easeInOutBounce: function easeInOutBounce(t) {\n      if (t < 0.5) {\n        return effects.easeInBounce(t * 2) * 0.5;\n      }\n\n      return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n    }\n  };\n  var helpers_easing = {\n    effects: effects\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n   * @function Chart.helpers.easingEffects\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.easingEffects = effects;\n  var PI = Math.PI;\n  var RAD_PER_DEG = PI / 180;\n  var DOUBLE_PI = PI * 2;\n  var HALF_PI = PI / 2;\n  var QUARTER_PI = PI / 4;\n  var TWO_THIRDS_PI = PI * 2 / 3;\n  /**\n   * @namespace Chart.helpers.canvas\n   */\n\n  var exports$1 = {\n    /**\n     * Clears the entire canvas associated to the given `chart`.\n     * @param {Chart} chart - The chart for which to clear the canvas.\n     */\n    clear: function clear(chart) {\n      chart.ctx.clearRect(0, 0, chart.width, chart.height);\n    },\n\n    /**\n     * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n     * given size (width, height) and the same `radius` for all corners.\n     * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n     * @param {number} x - The x axis of the coordinate for the rectangle starting point.\n     * @param {number} y - The y axis of the coordinate for the rectangle starting point.\n     * @param {number} width - The rectangle's width.\n     * @param {number} height - The rectangle's height.\n     * @param {number} radius - The rounded amount (in pixels) for the four corners.\n     * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n     */\n    roundedRect: function roundedRect(ctx, x, y, width, height, radius) {\n      if (radius) {\n        var r = Math.min(radius, height / 2, width / 2);\n        var left = x + r;\n        var top = y + r;\n        var right = x + width - r;\n        var bottom = y + height - r;\n        ctx.moveTo(x, top);\n\n        if (left < right && top < bottom) {\n          ctx.arc(left, top, r, -PI, -HALF_PI);\n          ctx.arc(right, top, r, -HALF_PI, 0);\n          ctx.arc(right, bottom, r, 0, HALF_PI);\n          ctx.arc(left, bottom, r, HALF_PI, PI);\n        } else if (left < right) {\n          ctx.moveTo(left, y);\n          ctx.arc(right, top, r, -HALF_PI, HALF_PI);\n          ctx.arc(left, top, r, HALF_PI, PI + HALF_PI);\n        } else if (top < bottom) {\n          ctx.arc(left, top, r, -PI, 0);\n          ctx.arc(left, bottom, r, 0, PI);\n        } else {\n          ctx.arc(left, top, r, -PI, PI);\n        }\n\n        ctx.closePath();\n        ctx.moveTo(x, y);\n      } else {\n        ctx.rect(x, y, width, height);\n      }\n    },\n    drawPoint: function drawPoint(ctx, style, radius, x, y, rotation) {\n      var type, xOffset, yOffset, size, cornerRadius;\n      var rad = (rotation || 0) * RAD_PER_DEG;\n\n      if (style && typeof style === 'object') {\n        type = style.toString();\n\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n          ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n          return;\n        }\n      }\n\n      if (isNaN(radius) || radius <= 0) {\n        return;\n      }\n\n      ctx.beginPath();\n\n      switch (style) {\n        // Default includes circle\n        default:\n          ctx.arc(x, y, radius, 0, DOUBLE_PI);\n          ctx.closePath();\n          break;\n\n        case 'triangle':\n          ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          ctx.closePath();\n          break;\n\n        case 'rectRounded':\n          // NOTE: the rounded rect implementation changed to use `arc` instead of\n          // `quadraticCurveTo` since it generates better results when rect is\n          // almost a circle. 0.516 (instead of 0.5) produces results with visually\n          // closer proportion to the previous impl and it is inscribed in the\n          // circle with `radius`. For more details, see the following PRs:\n          // https://github.com/chartjs/Chart.js/issues/5597\n          // https://github.com/chartjs/Chart.js/issues/5858\n          cornerRadius = radius * 0.516;\n          size = radius - cornerRadius;\n          xOffset = Math.cos(rad + QUARTER_PI) * size;\n          yOffset = Math.sin(rad + QUARTER_PI) * size;\n          ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n          ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n          ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n          ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n          ctx.closePath();\n          break;\n\n        case 'rect':\n          if (!rotation) {\n            size = Math.SQRT1_2 * radius;\n            ctx.rect(x - size, y - size, 2 * size, 2 * size);\n            break;\n          }\n\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'rectRot':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          ctx.closePath();\n          break;\n\n        case 'crossRot':\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'cross':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'star':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          rad += QUARTER_PI;\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'line':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          break;\n\n        case 'dash':\n          ctx.moveTo(x, y);\n          ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n          break;\n      }\n\n      ctx.fill();\n      ctx.stroke();\n    },\n\n    /**\n     * Returns true if the point is inside the rectangle\n     * @param {object} point - The point to test\n     * @param {object} area - The rectangle\n     * @returns {boolean}\n     * @private\n     */\n    _isPointInArea: function _isPointInArea(point, area) {\n      var epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n\n      return point.x > area.left - epsilon && point.x < area.right + epsilon && point.y > area.top - epsilon && point.y < area.bottom + epsilon;\n    },\n    clipArea: function clipArea(ctx, area) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n      ctx.clip();\n    },\n    unclipArea: function unclipArea(ctx) {\n      ctx.restore();\n    },\n    lineTo: function lineTo(ctx, previous, target, flip) {\n      var stepped = target.steppedLine;\n\n      if (stepped) {\n        if (stepped === 'middle') {\n          var midpoint = (previous.x + target.x) / 2.0;\n          ctx.lineTo(midpoint, flip ? target.y : previous.y);\n          ctx.lineTo(midpoint, flip ? previous.y : target.y);\n        } else if (stepped === 'after' && !flip || stepped !== 'after' && flip) {\n          ctx.lineTo(previous.x, target.y);\n        } else {\n          ctx.lineTo(target.x, previous.y);\n        }\n\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      if (!target.tension) {\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      ctx.bezierCurveTo(flip ? previous.controlPointPreviousX : previous.controlPointNextX, flip ? previous.controlPointPreviousY : previous.controlPointNextY, flip ? target.controlPointNextX : target.controlPointPreviousX, flip ? target.controlPointNextY : target.controlPointPreviousY, target.x, target.y);\n    }\n  };\n  var helpers_canvas = exports$1; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n   * @namespace Chart.helpers.clear\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.clear = exports$1.clear;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n   * @namespace Chart.helpers.drawRoundedRectangle\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.drawRoundedRectangle = function (ctx) {\n    ctx.beginPath();\n    exports$1.roundedRect.apply(exports$1, arguments);\n  };\n\n  var defaults = {\n    /**\n     * @private\n     */\n    _set: function _set(scope, values) {\n      return helpers_core.merge(this[scope] || (this[scope] = {}), values);\n    }\n  };\n\n  defaults._set('global', {\n    defaultColor: 'rgba(0,0,0,0.1)',\n    defaultFontColor: '#666',\n    defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n    defaultFontSize: 12,\n    defaultFontStyle: 'normal',\n    defaultLineHeight: 1.2,\n    showLines: true\n  });\n\n  var core_defaults = defaults;\n  var valueOrDefault = helpers_core.valueOrDefault;\n  /**\n   * Converts the given font object into a CSS font string.\n   * @param {object} font - A font object.\n   * @return {string} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n   * @private\n   */\n\n  function toFontString(font) {\n    if (!font || helpers_core.isNullOrUndef(font.size) || helpers_core.isNullOrUndef(font.family)) {\n      return null;\n    }\n\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n  }\n  /**\n   * @alias Chart.helpers.options\n   * @namespace\n   */\n\n\n  var helpers_options = {\n    /**\n     * Converts the given line height `value` in pixels for a specific font `size`.\n     * @param {number|string} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n     * @param {number} size - The font size (in pixels) used to resolve relative `value`.\n     * @returns {number} The effective line height in pixels (size * 1.2 if value is invalid).\n     * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n     * @since 2.7.0\n     */\n    toLineHeight: function toLineHeight(value, size) {\n      var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\n      if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n      }\n\n      value = +matches[2];\n\n      switch (matches[3]) {\n        case 'px':\n          return value;\n\n        case '%':\n          value /= 100;\n          break;\n\n        default:\n          break;\n      }\n\n      return size * value;\n    },\n\n    /**\n     * Converts the given value into a padding object with pre-computed width/height.\n     * @param {number|object} value - If a number, set the value to all TRBL component,\n     *  else, if and object, use defined properties and sets undefined ones to 0.\n     * @returns {object} The padding values (top, right, bottom, left, width, height)\n     * @since 2.7.0\n     */\n    toPadding: function toPadding(value) {\n      var t, r, b, l;\n\n      if (helpers_core.isObject(value)) {\n        t = +value.top || 0;\n        r = +value.right || 0;\n        b = +value.bottom || 0;\n        l = +value.left || 0;\n      } else {\n        t = r = b = l = +value || 0;\n      }\n\n      return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        height: t + b,\n        width: l + r\n      };\n    },\n\n    /**\n     * Parses font options and returns the font object.\n     * @param {object} options - A object that contains font options to be parsed.\n     * @return {object} The font object.\n     * @todo Support font.* options and renamed to toFont().\n     * @private\n     */\n    _parseFont: function _parseFont(options) {\n      var globalDefaults = core_defaults.global;\n      var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n      var font = {\n        family: valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily),\n        lineHeight: helpers_core.options.toLineHeight(valueOrDefault(options.lineHeight, globalDefaults.defaultLineHeight), size),\n        size: size,\n        style: valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle),\n        weight: null,\n        string: ''\n      };\n      font.string = toFontString(font);\n      return font;\n    },\n\n    /**\n     * Evaluates the given `inputs` sequentially and returns the first defined value.\n     * @param {Array} inputs - An array of values, falling back to the last value.\n     * @param {object} [context] - If defined and the current value is a function, the value\n     * is called with `context` as first argument and the result becomes the new input.\n     * @param {number} [index] - If defined and the current value is an array, the value\n     * at `index` become the new input.\n     * @since 2.7.0\n     */\n    resolve: function resolve(inputs, context, index) {\n      var i, ilen, value;\n\n      for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n        value = inputs[i];\n\n        if (value === undefined) {\n          continue;\n        }\n\n        if (context !== undefined && typeof value === 'function') {\n          value = value(context);\n        }\n\n        if (index !== undefined && helpers_core.isArray(value)) {\n          value = value[index];\n        }\n\n        if (value !== undefined) {\n          return value;\n        }\n      }\n    }\n  };\n  var helpers$1 = helpers_core;\n  var easing = helpers_easing;\n  var canvas = helpers_canvas;\n  var options = helpers_options;\n  helpers$1.easing = easing;\n  helpers$1.canvas = canvas;\n  helpers$1.options = options;\n\n  function interpolate(start, view, model, ease) {\n    var keys = Object.keys(model);\n    var i, ilen, key, actual, origin, target, type, c0, c1;\n\n    for (i = 0, ilen = keys.length; i < ilen; ++i) {\n      key = keys[i];\n      target = model[key]; // if a value is added to the model after pivot() has been called, the view\n      // doesn't contain it, so let's initialize the view to the target value.\n\n      if (!view.hasOwnProperty(key)) {\n        view[key] = target;\n      }\n\n      actual = view[key];\n\n      if (actual === target || key[0] === '_') {\n        continue;\n      }\n\n      if (!start.hasOwnProperty(key)) {\n        start[key] = actual;\n      }\n\n      origin = start[key];\n      type = typeof target;\n\n      if (type === typeof origin) {\n        if (type === 'string') {\n          c0 = chartjsColor(origin);\n\n          if (c0.valid) {\n            c1 = chartjsColor(target);\n\n            if (c1.valid) {\n              view[key] = c1.mix(c0, ease).rgbString();\n              continue;\n            }\n          }\n        } else if (helpers$1.isFinite(origin) && helpers$1.isFinite(target)) {\n          view[key] = origin + (target - origin) * ease;\n          continue;\n        }\n      }\n\n      view[key] = target;\n    }\n  }\n\n  var Element = function Element(configuration) {\n    helpers$1.extend(this, configuration);\n    this.initialize.apply(this, arguments);\n  };\n\n  helpers$1.extend(Element.prototype, {\n    initialize: function initialize() {\n      this.hidden = false;\n    },\n    pivot: function pivot() {\n      var me = this;\n\n      if (!me._view) {\n        me._view = helpers$1.clone(me._model);\n      }\n\n      me._start = {};\n      return me;\n    },\n    transition: function transition(ease) {\n      var me = this;\n      var model = me._model;\n      var start = me._start;\n      var view = me._view; // No animation -> No Transition\n\n      if (!model || ease === 1) {\n        me._view = model;\n        me._start = null;\n        return me;\n      }\n\n      if (!view) {\n        view = me._view = {};\n      }\n\n      if (!start) {\n        start = me._start = {};\n      }\n\n      interpolate(start, view, model, ease);\n      return me;\n    },\n    tooltipPosition: function tooltipPosition() {\n      return {\n        x: this._model.x,\n        y: this._model.y\n      };\n    },\n    hasValue: function hasValue() {\n      return helpers$1.isNumber(this._model.x) && helpers$1.isNumber(this._model.y);\n    }\n  });\n  Element.extend = helpers$1.inherits;\n  var core_element = Element;\n  var exports$2 = core_element.extend({\n    chart: null,\n    // the animation associated chart instance\n    currentStep: 0,\n    // the current animation step\n    numSteps: 60,\n    // default number of steps\n    easing: '',\n    // the easing to use for this animation\n    render: null,\n    // render function used by the animation service\n    onAnimationProgress: null,\n    // user specified callback to fire on each step of the animation\n    onAnimationComplete: null // user specified callback to fire when the animation finishes\n\n  });\n  var core_animation = exports$2; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.Animation instead\n   * @prop Chart.Animation#animationObject\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'animationObject', {\n    get: function get() {\n      return this;\n    }\n  });\n  /**\n   * Provided for backward compatibility, use Chart.Animation#chart instead\n   * @prop Chart.Animation#chartInstance\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'chartInstance', {\n    get: function get() {\n      return this.chart;\n    },\n    set: function set(value) {\n      this.chart = value;\n    }\n  });\n\n  core_defaults._set('global', {\n    animation: {\n      duration: 1000,\n      easing: 'easeOutQuart',\n      onProgress: helpers$1.noop,\n      onComplete: helpers$1.noop\n    }\n  });\n\n  var core_animations = {\n    animations: [],\n    request: null,\n\n    /**\n     * @param {Chart} chart - The chart to animate.\n     * @param {Chart.Animation} animation - The animation that we will animate.\n     * @param {number} duration - The animation duration in ms.\n     * @param {boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n     */\n    addAnimation: function addAnimation(chart, animation, duration, lazy) {\n      var animations = this.animations;\n      var i, ilen;\n      animation.chart = chart;\n      animation.startTime = Date.now();\n      animation.duration = duration;\n\n      if (!lazy) {\n        chart.animating = true;\n      }\n\n      for (i = 0, ilen = animations.length; i < ilen; ++i) {\n        if (animations[i].chart === chart) {\n          animations[i] = animation;\n          return;\n        }\n      }\n\n      animations.push(animation); // If there are no animations queued, manually kickstart a digest, for lack of a better word\n\n      if (animations.length === 1) {\n        this.requestAnimationFrame();\n      }\n    },\n    cancelAnimation: function cancelAnimation(chart) {\n      var index = helpers$1.findIndex(this.animations, function (animation) {\n        return animation.chart === chart;\n      });\n\n      if (index !== -1) {\n        this.animations.splice(index, 1);\n        chart.animating = false;\n      }\n    },\n    requestAnimationFrame: function requestAnimationFrame() {\n      var me = this;\n\n      if (me.request === null) {\n        // Skip animation frame requests until the active one is executed.\n        // This can happen when processing mouse events, e.g. 'mousemove'\n        // and 'mouseout' events will trigger multiple renders.\n        me.request = helpers$1.requestAnimFrame.call(window, function () {\n          me.request = null;\n          me.startDigest();\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    startDigest: function startDigest() {\n      var me = this;\n      me.advance(); // Do we have more stuff to animate?\n\n      if (me.animations.length > 0) {\n        me.requestAnimationFrame();\n      }\n    },\n\n    /**\n     * @private\n     */\n    advance: function advance() {\n      var animations = this.animations;\n      var animation, chart, numSteps, nextStep;\n      var i = 0; // 1 animation per chart, so we are looping charts here\n\n      while (i < animations.length) {\n        animation = animations[i];\n        chart = animation.chart;\n        numSteps = animation.numSteps; // Make sure that currentStep starts at 1\n        // https://github.com/chartjs/Chart.js/issues/6104\n\n        nextStep = Math.floor((Date.now() - animation.startTime) / animation.duration * numSteps) + 1;\n        animation.currentStep = Math.min(nextStep, numSteps);\n        helpers$1.callback(animation.render, [chart, animation], chart);\n        helpers$1.callback(animation.onAnimationProgress, [animation], chart);\n\n        if (animation.currentStep >= numSteps) {\n          helpers$1.callback(animation.onAnimationComplete, [animation], chart);\n          chart.animating = false;\n          animations.splice(i, 1);\n        } else {\n          ++i;\n        }\n      }\n    }\n  };\n  var resolve = helpers$1.options.resolve;\n  var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n  /**\n   * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n   * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n   * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n   */\n\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n\n      return;\n    }\n\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(function (key) {\n      var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n      var base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n        value: function value() {\n          var args = Array.prototype.slice.call(arguments);\n          var res = base.apply(this, args);\n          helpers$1.each(array._chartjs.listeners, function (object) {\n            if (typeof object[method] === 'function') {\n              object[method].apply(object, args);\n            }\n          });\n          return res;\n        }\n      });\n    });\n  }\n  /**\n   * Removes the given array event listener and cleanup extra attached properties (such as\n   * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n   */\n\n\n  function unlistenArrayEvents(array, listener) {\n    var stub = array._chartjs;\n\n    if (!stub) {\n      return;\n    }\n\n    var listeners = stub.listeners;\n    var index = listeners.indexOf(listener);\n\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n\n    if (listeners.length > 0) {\n      return;\n    }\n\n    arrayEvents.forEach(function (key) {\n      delete array[key];\n    });\n    delete array._chartjs;\n  } // Base class for all dataset controllers (line, bar, etc)\n\n\n  var DatasetController = function DatasetController(chart, datasetIndex) {\n    this.initialize(chart, datasetIndex);\n  };\n\n  helpers$1.extend(DatasetController.prototype, {\n    /**\n     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n     * @type {Chart.core.element}\n     */\n    datasetElementType: null,\n\n    /**\n     * Element type used to generate a meta data (e.g. Chart.element.Point).\n     * @type {Chart.core.element}\n     */\n    dataElementType: null,\n    initialize: function initialize(chart, datasetIndex) {\n      var me = this;\n      me.chart = chart;\n      me.index = datasetIndex;\n      me.linkScales();\n      me.addElements();\n    },\n    updateIndex: function updateIndex(datasetIndex) {\n      this.index = datasetIndex;\n    },\n    linkScales: function linkScales() {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n        meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n      }\n\n      if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n        meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n      }\n    },\n    getDataset: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    },\n    getMeta: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    },\n    getScaleForId: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    },\n\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().yAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getValueScale: function _getValueScale() {\n      return this.getScaleForId(this._getValueScaleId());\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScale: function _getIndexScale() {\n      return this.getScaleForId(this._getIndexScaleId());\n    },\n    reset: function reset() {\n      this.update(true);\n    },\n\n    /**\n     * @private\n     */\n    destroy: function destroy() {\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n    },\n    createMetaDataset: function createMetaDataset() {\n      var me = this;\n      var type = me.datasetElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index\n      });\n    },\n    createMetaData: function createMetaData(index) {\n      var me = this;\n      var type = me.dataElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index,\n        _index: index\n      });\n    },\n    addElements: function addElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data || [];\n      var metaData = meta.data;\n      var i, ilen;\n\n      for (i = 0, ilen = data.length; i < ilen; ++i) {\n        metaData[i] = metaData[i] || me.createMetaData(i);\n      }\n\n      meta.dataset = meta.dataset || me.createMetaDataset();\n    },\n    addElementAndReset: function addElementAndReset(index) {\n      var element = this.createMetaData(index);\n      this.getMeta().data.splice(index, 0, element);\n      this.updateElement(element, index, true);\n    },\n    buildOrUpdateElements: function buildOrUpdateElements() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []); // In order to correctly handle data addition/deletion animation (an thus simulate\n      // real-time charts), we need to monitor these data modifications and synchronize\n      // the internal meta data accordingly.\n\n      if (me._data !== data) {\n        if (me._data) {\n          // This case happens when the user replaced the data array instance.\n          unlistenArrayEvents(me._data, me);\n        }\n\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, me);\n        }\n\n        me._data = data;\n      } // Re-sync meta data in case the user replaced the data array or if we missed\n      // any updates and so make sure that we handle number of datapoints changing.\n\n\n      me.resyncElements();\n    },\n    update: helpers$1.noop,\n    transition: function transition(easingValue) {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        elements[i].transition(easingValue);\n      }\n\n      if (meta.dataset) {\n        meta.dataset.transition(easingValue);\n      }\n    },\n    draw: function draw() {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      if (meta.dataset) {\n        meta.dataset.draw();\n      }\n\n      for (; i < ilen; ++i) {\n        elements[i].draw();\n      }\n    },\n    removeHoverStyle: function removeHoverStyle(element) {\n      helpers$1.merge(element._model, element.$previousStyle || {});\n      delete element.$previousStyle;\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var model = element._model;\n      var getHoverColor = helpers$1.getHoverColor;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = resolve([custom.hoverBackgroundColor, dataset.hoverBackgroundColor, getHoverColor(model.backgroundColor)], undefined, index);\n      model.borderColor = resolve([custom.hoverBorderColor, dataset.hoverBorderColor, getHoverColor(model.borderColor)], undefined, index);\n      model.borderWidth = resolve([custom.hoverBorderWidth, dataset.hoverBorderWidth, model.borderWidth], undefined, index);\n    },\n\n    /**\n     * @private\n     */\n    resyncElements: function resyncElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data;\n      var numMeta = meta.data.length;\n      var numData = data.length;\n\n      if (numData < numMeta) {\n        meta.data.splice(numData, numMeta - numData);\n      } else if (numData > numMeta) {\n        me.insertElements(numMeta, numData - numMeta);\n      }\n    },\n\n    /**\n     * @private\n     */\n    insertElements: function insertElements(start, count) {\n      for (var i = 0; i < count; ++i) {\n        this.addElementAndReset(start + i);\n      }\n    },\n\n    /**\n     * @private\n     */\n    onDataPush: function onDataPush() {\n      var count = arguments.length;\n      this.insertElements(this.getDataset().data.length - count, count);\n    },\n\n    /**\n     * @private\n     */\n    onDataPop: function onDataPop() {\n      this.getMeta().data.pop();\n    },\n\n    /**\n     * @private\n     */\n    onDataShift: function onDataShift() {\n      this.getMeta().data.shift();\n    },\n\n    /**\n     * @private\n     */\n    onDataSplice: function onDataSplice(start, count) {\n      this.getMeta().data.splice(start, count);\n      this.insertElements(start, arguments.length - 2);\n    },\n\n    /**\n     * @private\n     */\n    onDataUnshift: function onDataUnshift() {\n      this.insertElements(0, arguments.length);\n    }\n  });\n  DatasetController.extend = helpers$1.inherits;\n  var core_datasetController = DatasetController;\n\n  core_defaults._set('global', {\n    elements: {\n      arc: {\n        backgroundColor: core_defaults.global.defaultColor,\n        borderColor: '#fff',\n        borderWidth: 2,\n        borderAlign: 'center'\n      }\n    }\n  });\n\n  var element_arc = core_element.extend({\n    inLabelRange: function inLabelRange(mouseX) {\n      var vm = this._view;\n\n      if (vm) {\n        return Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2);\n      }\n\n      return false;\n    },\n    inRange: function inRange(chartX, chartY) {\n      var vm = this._view;\n\n      if (vm) {\n        var pointRelativePosition = helpers$1.getAngleFromPoint(vm, {\n          x: chartX,\n          y: chartY\n        });\n        var angle = pointRelativePosition.angle;\n        var distance = pointRelativePosition.distance; // Sanitise angle range\n\n        var startAngle = vm.startAngle;\n        var endAngle = vm.endAngle;\n\n        while (endAngle < startAngle) {\n          endAngle += 2.0 * Math.PI;\n        }\n\n        while (angle > endAngle) {\n          angle -= 2.0 * Math.PI;\n        }\n\n        while (angle < startAngle) {\n          angle += 2.0 * Math.PI;\n        } // Check if within the range of the open/close angle\n\n\n        var betweenAngles = angle >= startAngle && angle <= endAngle;\n        var withinRadius = distance >= vm.innerRadius && distance <= vm.outerRadius;\n        return betweenAngles && withinRadius;\n      }\n\n      return false;\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var halfAngle = (vm.startAngle + vm.endAngle) / 2;\n      var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n      return {\n        x: vm.x + Math.cos(halfAngle) * halfRadius,\n        y: vm.y + Math.sin(halfAngle) * halfRadius\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      var centreAngle = vm.startAngle + (vm.endAngle - vm.startAngle) / 2;\n      var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n      return {\n        x: vm.x + Math.cos(centreAngle) * rangeFromCentre,\n        y: vm.y + Math.sin(centreAngle) * rangeFromCentre\n      };\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var sA = vm.startAngle;\n      var eA = vm.endAngle;\n      var pixelMargin = vm.borderAlign === 'inner' ? 0.33 : 0;\n      var angleMargin;\n      ctx.save();\n      ctx.beginPath();\n      ctx.arc(vm.x, vm.y, Math.max(vm.outerRadius - pixelMargin, 0), sA, eA);\n      ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n      ctx.closePath();\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fill();\n\n      if (vm.borderWidth) {\n        if (vm.borderAlign === 'inner') {\n          // Draw an inner border by cliping the arc and drawing a double-width border\n          // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n          ctx.beginPath();\n          angleMargin = pixelMargin / vm.outerRadius;\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA - angleMargin, eA + angleMargin);\n\n          if (vm.innerRadius > pixelMargin) {\n            angleMargin = pixelMargin / vm.innerRadius;\n            ctx.arc(vm.x, vm.y, vm.innerRadius - pixelMargin, eA + angleMargin, sA - angleMargin, true);\n          } else {\n            ctx.arc(vm.x, vm.y, pixelMargin, eA + Math.PI / 2, sA - Math.PI / 2);\n          }\n\n          ctx.closePath();\n          ctx.clip();\n          ctx.beginPath();\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n          ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n          ctx.closePath();\n          ctx.lineWidth = vm.borderWidth * 2;\n          ctx.lineJoin = 'round';\n        } else {\n          ctx.lineWidth = vm.borderWidth;\n          ctx.lineJoin = 'bevel';\n        }\n\n        ctx.strokeStyle = vm.borderColor;\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$1 = helpers$1.valueOrDefault;\n  var defaultColor = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      line: {\n        tension: 0.4,\n        backgroundColor: defaultColor,\n        borderWidth: 3,\n        borderColor: defaultColor,\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        capBezierPoints: true,\n        fill: true // do we fill in the area between the line and its base axis\n\n      }\n    }\n  });\n\n  var element_line = core_element.extend({\n    draw: function draw() {\n      var me = this;\n      var vm = me._view;\n      var ctx = me._chart.ctx;\n      var spanGaps = vm.spanGaps;\n\n      var points = me._children.slice(); // clone array\n\n\n      var globalDefaults = core_defaults.global;\n      var globalOptionLineElements = globalDefaults.elements.line;\n      var lastDrawnIndex = -1;\n      var index, current, previous, currentVM; // If we are looping, adding the first point again\n\n      if (me._loop && points.length) {\n        points.push(points[0]);\n      }\n\n      ctx.save(); // Stroke Line Options\n\n      ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle; // IE 9 and 10 do not support line dash\n\n      if (ctx.setLineDash) {\n        ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n      }\n\n      ctx.lineDashOffset = valueOrDefault$1(vm.borderDashOffset, globalOptionLineElements.borderDashOffset);\n      ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n      ctx.lineWidth = valueOrDefault$1(vm.borderWidth, globalOptionLineElements.borderWidth);\n      ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor; // Stroke Line\n\n      ctx.beginPath();\n      lastDrawnIndex = -1;\n\n      for (index = 0; index < points.length; ++index) {\n        current = points[index];\n        previous = helpers$1.previousItem(points, index);\n        currentVM = current._view; // First point moves to it's starting position no matter what\n\n        if (index === 0) {\n          if (!currentVM.skip) {\n            ctx.moveTo(currentVM.x, currentVM.y);\n            lastDrawnIndex = index;\n          }\n        } else {\n          previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n          if (!currentVM.skip) {\n            if (lastDrawnIndex !== index - 1 && !spanGaps || lastDrawnIndex === -1) {\n              // There was a gap and this is the first point after the gap\n              ctx.moveTo(currentVM.x, currentVM.y);\n            } else {\n              // Line to next point\n              helpers$1.canvas.lineTo(ctx, previous._view, current._view);\n            }\n\n            lastDrawnIndex = index;\n          }\n        }\n      }\n\n      ctx.stroke();\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$2 = helpers$1.valueOrDefault;\n  var defaultColor$1 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      point: {\n        radius: 3,\n        pointStyle: 'circle',\n        backgroundColor: defaultColor$1,\n        borderColor: defaultColor$1,\n        borderWidth: 1,\n        // Hover\n        hitRadius: 1,\n        hoverRadius: 4,\n        hoverBorderWidth: 1\n      }\n    }\n  });\n\n  function xRange(mouseX) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius : false;\n  }\n\n  function yRange(mouseY) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius : false;\n  }\n\n  var element_point = core_element.extend({\n    inRange: function inRange(mouseX, mouseY) {\n      var vm = this._view;\n      return vm ? Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2) < Math.pow(vm.hitRadius + vm.radius, 2) : false;\n    },\n    inLabelRange: xRange,\n    inXRange: xRange,\n    inYRange: yRange,\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    },\n    getArea: function getArea() {\n      return Math.PI * Math.pow(this._view.radius, 2);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y,\n        padding: vm.radius + vm.borderWidth\n      };\n    },\n    draw: function draw(chartArea) {\n      var vm = this._view;\n      var ctx = this._chart.ctx;\n      var pointStyle = vm.pointStyle;\n      var rotation = vm.rotation;\n      var radius = vm.radius;\n      var x = vm.x;\n      var y = vm.y;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor; // eslint-disable-line no-shadow\n\n      if (vm.skip) {\n        return;\n      } // Clipping for Points.\n\n\n      if (chartArea === undefined || helpers$1.canvas._isPointInArea(vm, chartArea)) {\n        ctx.strokeStyle = vm.borderColor || defaultColor;\n        ctx.lineWidth = valueOrDefault$2(vm.borderWidth, globalDefaults.elements.point.borderWidth);\n        ctx.fillStyle = vm.backgroundColor || defaultColor;\n        helpers$1.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n      }\n    }\n  });\n  var defaultColor$2 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      rectangle: {\n        backgroundColor: defaultColor$2,\n        borderColor: defaultColor$2,\n        borderSkipped: 'bottom',\n        borderWidth: 0\n      }\n    }\n  });\n\n  function isVertical(vm) {\n    return vm && vm.width !== undefined;\n  }\n  /**\n   * Helper function to get the bounds of the bar regardless of the orientation\n   * @param bar {Chart.Element.Rectangle} the bar\n   * @return {Bounds} bounds of the bar\n   * @private\n   */\n\n\n  function getBarBounds(vm) {\n    var x1, x2, y1, y2, half;\n\n    if (isVertical(vm)) {\n      half = vm.width / 2;\n      x1 = vm.x - half;\n      x2 = vm.x + half;\n      y1 = Math.min(vm.y, vm.base);\n      y2 = Math.max(vm.y, vm.base);\n    } else {\n      half = vm.height / 2;\n      x1 = Math.min(vm.x, vm.base);\n      x2 = Math.max(vm.x, vm.base);\n      y1 = vm.y - half;\n      y2 = vm.y + half;\n    }\n\n    return {\n      left: x1,\n      top: y1,\n      right: x2,\n      bottom: y2\n    };\n  }\n\n  function swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n  }\n\n  function parseBorderSkipped(vm) {\n    var edge = vm.borderSkipped;\n    var res = {};\n\n    if (!edge) {\n      return res;\n    }\n\n    if (vm.horizontal) {\n      if (vm.base > vm.x) {\n        edge = swap(edge, 'left', 'right');\n      }\n    } else if (vm.base < vm.y) {\n      edge = swap(edge, 'bottom', 'top');\n    }\n\n    res[edge] = true;\n    return res;\n  }\n\n  function parseBorderWidth(vm, maxW, maxH) {\n    var value = vm.borderWidth;\n    var skip = parseBorderSkipped(vm);\n    var t, r, b, l;\n\n    if (helpers$1.isObject(value)) {\n      t = +value.top || 0;\n      r = +value.right || 0;\n      b = +value.bottom || 0;\n      l = +value.left || 0;\n    } else {\n      t = r = b = l = +value || 0;\n    }\n\n    return {\n      t: skip.top || t < 0 ? 0 : t > maxH ? maxH : t,\n      r: skip.right || r < 0 ? 0 : r > maxW ? maxW : r,\n      b: skip.bottom || b < 0 ? 0 : b > maxH ? maxH : b,\n      l: skip.left || l < 0 ? 0 : l > maxW ? maxW : l\n    };\n  }\n\n  function boundingRects(vm) {\n    var bounds = getBarBounds(vm);\n    var width = bounds.right - bounds.left;\n    var height = bounds.bottom - bounds.top;\n    var border = parseBorderWidth(vm, width / 2, height / 2);\n    return {\n      outer: {\n        x: bounds.left,\n        y: bounds.top,\n        w: width,\n        h: height\n      },\n      inner: {\n        x: bounds.left + border.l,\n        y: bounds.top + border.t,\n        w: width - border.l - border.r,\n        h: height - border.t - border.b\n      }\n    };\n  }\n\n  function _inRange(vm, x, y) {\n    var skipX = x === null;\n    var skipY = y === null;\n    var bounds = !vm || skipX && skipY ? false : getBarBounds(vm);\n    return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n  }\n\n  var element_rectangle = core_element.extend({\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var rects = boundingRects(vm);\n      var outer = rects.outer;\n      var inner = rects.inner;\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fillRect(outer.x, outer.y, outer.w, outer.h);\n\n      if (outer.w === inner.w && outer.h === inner.h) {\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(outer.x, outer.y, outer.w, outer.h);\n      ctx.clip();\n      ctx.fillStyle = vm.borderColor;\n      ctx.rect(inner.x, inner.y, inner.w, inner.h);\n      ctx.fill('evenodd');\n      ctx.restore();\n    },\n    height: function height() {\n      var vm = this._view;\n      return vm.base - vm.y;\n    },\n    inRange: function inRange(mouseX, mouseY) {\n      return _inRange(this._view, mouseX, mouseY);\n    },\n    inLabelRange: function inLabelRange(mouseX, mouseY) {\n      var vm = this._view;\n      return isVertical(vm) ? _inRange(vm, mouseX, null) : _inRange(vm, null, mouseY);\n    },\n    inXRange: function inXRange(mouseX) {\n      return _inRange(this._view, mouseX, null);\n    },\n    inYRange: function inYRange(mouseY) {\n      return _inRange(this._view, null, mouseY);\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var x, y;\n\n      if (isVertical(vm)) {\n        x = vm.x;\n        y = (vm.y + vm.base) / 2;\n      } else {\n        x = (vm.x + vm.base) / 2;\n        y = vm.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return isVertical(vm) ? vm.width * Math.abs(vm.y - vm.base) : vm.height * Math.abs(vm.x - vm.base);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    }\n  });\n  var elements = {};\n  var Arc = element_arc;\n  var Line = element_line;\n  var Point = element_point;\n  var Rectangle = element_rectangle;\n  elements.Arc = Arc;\n  elements.Line = Line;\n  elements.Point = Point;\n  elements.Rectangle = Rectangle;\n  var resolve$1 = helpers$1.options.resolve;\n\n  core_defaults._set('bar', {\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }],\n      yAxes: [{\n        type: 'linear'\n      }]\n    }\n  });\n  /**\n   * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n   * @private\n   */\n\n\n  function computeMinSampleSize(scale, pixels) {\n    var min = scale.isHorizontal() ? scale.width : scale.height;\n    var ticks = scale.getTicks();\n    var prev, curr, i, ilen;\n\n    for (i = 1, ilen = pixels.length; i < ilen; ++i) {\n      min = Math.min(min, Math.abs(pixels[i] - pixels[i - 1]));\n    }\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      curr = scale.getPixelForTick(i);\n      min = i > 0 ? Math.min(min, curr - prev) : min;\n      prev = curr;\n    }\n\n    return min;\n  }\n  /**\n   * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n   * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n   * mode currently always generates bars equally sized (until we introduce scriptable options?).\n   * @private\n   */\n\n\n  function computeFitCategoryTraits(index, ruler, options) {\n    var thickness = options.barThickness;\n    var count = ruler.stackCount;\n    var curr = ruler.pixels[index];\n    var size, ratio;\n\n    if (helpers$1.isNullOrUndef(thickness)) {\n      size = ruler.min * options.categoryPercentage;\n      ratio = options.barPercentage;\n    } else {\n      // When bar thickness is enforced, category and bar percentages are ignored.\n      // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n      // and deprecate barPercentage since this value is ignored when thickness is absolute.\n      size = thickness * count;\n      ratio = 1;\n    }\n\n    return {\n      chunk: size / count,\n      ratio: ratio,\n      start: curr - size / 2\n    };\n  }\n  /**\n   * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n   * percentage options are 1), based on the previous and following categories. This mode\n   * generates bars with different widths when data are not evenly spaced.\n   * @private\n   */\n\n\n  function computeFlexCategoryTraits(index, ruler, options) {\n    var pixels = ruler.pixels;\n    var curr = pixels[index];\n    var prev = index > 0 ? pixels[index - 1] : null;\n    var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    var percent = options.categoryPercentage;\n    var start, size;\n\n    if (prev === null) {\n      // first data: its size is double based on the next point or,\n      // if it's also the last data, we use the scale size.\n      prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n\n    if (next === null) {\n      // last data: its size is also double based on the previous point.\n      next = curr + curr - prev;\n    }\n\n    start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    size = Math.abs(next - prev) / 2 * percent;\n    return {\n      chunk: size / ruler.stackCount,\n      ratio: options.barPercentage,\n      start: start\n    };\n  }\n\n  var controller_bar = core_datasetController.extend({\n    dataElementType: elements.Rectangle,\n    initialize: function initialize() {\n      var me = this;\n      var meta;\n      core_datasetController.prototype.initialize.apply(me, arguments);\n      meta = me.getMeta();\n      meta.stack = me.getDataset().stack;\n      meta.bar = true;\n    },\n    update: function update(reset) {\n      var me = this;\n      var rects = me.getMeta().data;\n      var i, ilen;\n      me._ruler = me.getRuler();\n\n      for (i = 0, ilen = rects.length; i < ilen; ++i) {\n        me.updateElement(rects[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(rectangle, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      var options = me._resolveElementOptions(rectangle, index);\n\n      rectangle._xScale = me.getScaleForId(meta.xAxisID);\n      rectangle._yScale = me.getScaleForId(meta.yAxisID);\n      rectangle._datasetIndex = me.index;\n      rectangle._index = index;\n      rectangle._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderSkipped: options.borderSkipped,\n        borderWidth: options.borderWidth,\n        datasetLabel: dataset.label,\n        label: me.chart.data.labels[index]\n      };\n\n      me._updateElementGeometry(rectangle, index, reset);\n\n      rectangle.pivot();\n    },\n\n    /**\n     * @private\n     */\n    _updateElementGeometry: function _updateElementGeometry(rectangle, index, reset) {\n      var me = this;\n      var model = rectangle._model;\n\n      var vscale = me._getValueScale();\n\n      var base = vscale.getBasePixel();\n      var horizontal = vscale.isHorizontal();\n      var ruler = me._ruler || me.getRuler();\n      var vpixels = me.calculateBarValuePixels(me.index, index);\n      var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n      model.horizontal = horizontal;\n      model.base = reset ? base : vpixels.base;\n      model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n      model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n      model.height = horizontal ? ipixels.size : undefined;\n      model.width = horizontal ? undefined : ipixels.size;\n    },\n\n    /**\n     * Returns the stacks based on groups and bar visibility.\n     * @param {number} [last] - The dataset index\n     * @returns {string[]} The list of stack IDs\n     * @private\n     */\n    _getStacks: function _getStacks(last) {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getIndexScale();\n\n      var stacked = scale.options.stacked;\n      var ilen = last === undefined ? chart.data.datasets.length : last + 1;\n      var stacks = [];\n      var i, meta;\n\n      for (i = 0; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n\n        if (meta.bar && chart.isDatasetVisible(i) && (stacked === false || stacked === true && stacks.indexOf(meta.stack) === -1 || stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1))) {\n          stacks.push(meta.stack);\n        }\n      }\n\n      return stacks;\n    },\n\n    /**\n     * Returns the effective number of stacks based on groups and bar visibility.\n     * @private\n     */\n    getStackCount: function getStackCount() {\n      return this._getStacks().length;\n    },\n\n    /**\n     * Returns the stack index for the given dataset based on groups and bar visibility.\n     * @param {number} [datasetIndex] - The dataset index\n     * @param {string} [name] - The stack name to find\n     * @returns {number} The stack index\n     * @private\n     */\n    getStackIndex: function getStackIndex(datasetIndex, name) {\n      var stacks = this._getStacks(datasetIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1; // indexOf returns -1 if element is not present\n\n      return index === -1 ? stacks.length - 1 : index;\n    },\n\n    /**\n     * @private\n     */\n    getRuler: function getRuler() {\n      var me = this;\n\n      var scale = me._getIndexScale();\n\n      var stackCount = me.getStackCount();\n      var datasetIndex = me.index;\n      var isHorizontal = scale.isHorizontal();\n      var start = isHorizontal ? scale.left : scale.top;\n      var end = start + (isHorizontal ? scale.width : scale.height);\n      var pixels = [];\n      var i, ilen, min;\n\n      for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n        pixels.push(scale.getPixelForValue(null, i, datasetIndex));\n      }\n\n      min = helpers$1.isNullOrUndef(scale.options.barThickness) ? computeMinSampleSize(scale, pixels) : -1;\n      return {\n        min: min,\n        pixels: pixels,\n        start: start,\n        end: end,\n        stackCount: stackCount,\n        scale: scale\n      };\n    },\n\n    /**\n     * Note: pixel values are not clamped to the scale area.\n     * @private\n     */\n    calculateBarValuePixels: function calculateBarValuePixels(datasetIndex, index) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n\n      var scale = me._getValueScale();\n\n      var isHorizontal = scale.isHorizontal();\n      var datasets = chart.data.datasets;\n      var value = +scale.getRightValue(datasets[datasetIndex].data[index]);\n      var minBarLength = scale.options.minBarLength;\n      var stacked = scale.options.stacked;\n      var stack = meta.stack;\n      var start = 0;\n      var i, imeta, ivalue, base, head, size;\n\n      if (stacked || stacked === undefined && stack !== undefined) {\n        for (i = 0; i < datasetIndex; ++i) {\n          imeta = chart.getDatasetMeta(i);\n\n          if (imeta.bar && imeta.stack === stack && imeta.controller._getValueScaleId() === scale.id && chart.isDatasetVisible(i)) {\n            ivalue = +scale.getRightValue(datasets[i].data[index]);\n\n            if (value < 0 && ivalue < 0 || value >= 0 && ivalue > 0) {\n              start += ivalue;\n            }\n          }\n        }\n      }\n\n      base = scale.getPixelForValue(start);\n      head = scale.getPixelForValue(start + value);\n      size = head - base;\n\n      if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n        size = minBarLength;\n\n        if (value >= 0 && !isHorizontal || value < 0 && isHorizontal) {\n          head = base - minBarLength;\n        } else {\n          head = base + minBarLength;\n        }\n      }\n\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    calculateBarIndexPixels: function calculateBarIndexPixels(datasetIndex, index, ruler) {\n      var me = this;\n      var options = ruler.scale.options;\n      var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options) : computeFitCategoryTraits(index, ruler, options);\n      var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n      var center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      var size = Math.min(helpers$1.valueOrDefault(options.maxBarThickness, Infinity), range.chunk * range.ratio);\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getValueScale();\n\n      var rects = me.getMeta().data;\n      var dataset = me.getDataset();\n      var ilen = rects.length;\n      var i = 0;\n      helpers$1.canvas.clipArea(chart.ctx, chart.chartArea);\n\n      for (; i < ilen; ++i) {\n        if (!isNaN(scale.getRightValue(dataset.data[i]))) {\n          rects[i].draw();\n        }\n      }\n\n      helpers$1.canvas.unclipArea(chart.ctx);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(rectangle, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = rectangle.custom || {};\n      var options = chart.options.elements.rectangle;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderSkipped', 'borderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$1([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    }\n  });\n  var valueOrDefault$3 = helpers$1.valueOrDefault;\n  var resolve$2 = helpers$1.options.resolve;\n\n  core_defaults._set('bubble', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        // bubble should probably use a linear scale by default\n        position: 'bottom',\n        id: 'x-axis-0' // need an ID so datasets can reference the scale\n\n      }],\n      yAxes: [{\n        type: 'linear',\n        position: 'left',\n        id: 'y-axis-0'\n      }]\n    },\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          // Title doesn't make sense for scatter since we format the data as a point\n          return '';\n        },\n        label: function label(item, data) {\n          var datasetLabel = data.datasets[item.datasetIndex].label || '';\n          var dataPoint = data.datasets[item.datasetIndex].data[item.index];\n          return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n        }\n      }\n    }\n  });\n\n  var controller_bubble = core_datasetController.extend({\n    /**\n     * @protected\n     */\n    dataElementType: elements.Point,\n\n    /**\n     * @protected\n     */\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var points = meta.data; // Update Points\n\n      helpers$1.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      });\n    },\n\n    /**\n     * @protected\n     */\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var yScale = me.getScaleForId(meta.yAxisID);\n\n      var options = me._resolveElementOptions(point, index);\n\n      var data = me.getDataset().data[index];\n      var dsIndex = me.index;\n      var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n      var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = dsIndex;\n      point._index = index;\n      point._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        hitRadius: options.hitRadius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        radius: reset ? 0 : options.radius,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        x: x,\n        y: y\n      };\n      point.pivot();\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$3(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$3(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$3(options.hoverBorderWidth, options.borderWidth);\n      model.radius = options.radius + options.hoverRadius;\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(point, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = point.custom || {};\n      var options = chart.options.elements.point;\n      var data = dataset.data[index];\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth', 'hoverRadius', 'hitRadius', 'pointStyle', 'rotation'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$2([custom[key], dataset[key], options[key]], context, index);\n      } // Custom radius resolution\n\n\n      values.radius = resolve$2([custom.radius, data ? data.r : undefined, dataset.radius, options.radius], context, index);\n      return values;\n    }\n  });\n  var resolve$3 = helpers$1.options.resolve;\n  var valueOrDefault$4 = helpers$1.valueOrDefault;\n\n  core_defaults._set('doughnut', {\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    hover: {\n      mode: 'single'\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc && arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$3([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$3([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$3([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i); // toggle visibility of index if exists\n\n          if (meta.data[index]) {\n            meta.data[index].hidden = !meta.data[index].hidden;\n          }\n        }\n\n        chart.update();\n      }\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutoutPercentage: 50,\n    // The rotation of the chart, where the first data arc begins.\n    rotation: Math.PI * -0.5,\n    // The total circumference of the chart.\n    circumference: Math.PI * 2.0,\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(tooltipItem, data) {\n          var dataLabel = data.labels[tooltipItem.index];\n          var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n          if (helpers$1.isArray(dataLabel)) {\n            // show value on first line of multiline label\n            // need to clone because we are changing the value\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n\n          return dataLabel;\n        }\n      }\n    }\n  });\n\n  var controller_doughnut = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n    getRingIndex: function getRingIndex(datasetIndex) {\n      var ringIndex = 0;\n\n      for (var j = 0; j < datasetIndex; ++j) {\n        if (this.chart.isDatasetVisible(j)) {\n          ++ringIndex;\n        }\n      }\n\n      return ringIndex;\n    },\n    update: function update(reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var availableWidth = chartArea.right - chartArea.left;\n      var availableHeight = chartArea.bottom - chartArea.top;\n      var minSize = Math.min(availableWidth, availableHeight);\n      var offset = {\n        x: 0,\n        y: 0\n      };\n      var meta = me.getMeta();\n      var arcs = meta.data;\n      var cutoutPercentage = opts.cutoutPercentage;\n      var circumference = opts.circumference;\n\n      var chartWeight = me._getRingWeight(me.index);\n\n      var i, ilen; // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\n      if (circumference < Math.PI * 2.0) {\n        var startAngle = opts.rotation % (Math.PI * 2.0);\n        startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n        var endAngle = startAngle + circumference;\n        var start = {\n          x: Math.cos(startAngle),\n          y: Math.sin(startAngle)\n        };\n        var end = {\n          x: Math.cos(endAngle),\n          y: Math.sin(endAngle)\n        };\n        var contains0 = startAngle <= 0 && endAngle >= 0 || startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle;\n        var contains90 = startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle;\n        var contains180 = startAngle <= -Math.PI && -Math.PI <= endAngle || startAngle <= Math.PI && Math.PI <= endAngle;\n        var contains270 = startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle;\n        var cutout = cutoutPercentage / 100.0;\n        var min = {\n          x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)),\n          y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))\n        };\n        var max = {\n          x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)),\n          y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))\n        };\n        var size = {\n          width: (max.x - min.x) * 0.5,\n          height: (max.y - min.y) * 0.5\n        };\n        minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n        offset = {\n          x: (max.x + min.x) * -0.5,\n          y: (max.y + min.y) * -0.5\n        };\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n      }\n\n      chart.borderWidth = me.getMaxBorderWidth();\n      chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n      chart.innerRadius = Math.max(cutoutPercentage ? chart.outerRadius / 100 * cutoutPercentage : 0, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / (me._getVisibleDatasetWeightTotal() || 1);\n      chart.offsetX = offset.x * chart.outerRadius;\n      chart.offsetY = offset.y * chart.outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me._getRingWeightOffset(me.index);\n      me.innerRadius = Math.max(me.outerRadius - chart.radiusLength * chartWeight, 0);\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var startAngle = opts.rotation; // non reset case handled later\n\n      var endAngle = opts.rotation; // non reset case handled later\n\n      var dataset = me.getDataset();\n      var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n      var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n      var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX + chart.offsetX,\n          y: centerY + chart.offsetY,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius,\n          label: helpers$1.valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n        }\n      });\n      var model = arc._model; // Set correct angles if not resetting\n\n      if (!reset || !animationOpts.animateRotate) {\n        if (index === 0) {\n          model.startAngle = opts.rotation;\n        } else {\n          model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n        }\n\n        model.endAngle = model.startAngle + model.circumference;\n      }\n\n      arc.pivot();\n    },\n    calculateTotal: function calculateTotal() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var total = 0;\n      var value;\n      helpers$1.each(meta.data, function (element, index) {\n        value = dataset.data[index];\n\n        if (!isNaN(value) && !element.hidden) {\n          total += Math.abs(value);\n        }\n      });\n      /* if (total === 0) {\n      \ttotal = NaN;\n      }*/\n\n      return total;\n    },\n    calculateCircumference: function calculateCircumference(value) {\n      var total = this.getMeta().total;\n\n      if (total > 0 && !isNaN(value)) {\n        return Math.PI * 2.0 * (Math.abs(value) / total);\n      }\n\n      return 0;\n    },\n    // gets the max border or hover width to properly scale pie charts\n    getMaxBorderWidth: function getMaxBorderWidth(arcs) {\n      var me = this;\n      var max = 0;\n      var chart = me.chart;\n      var i, ilen, meta, arc, controller, options, borderWidth, hoverWidth;\n\n      if (!arcs) {\n        // Find the outmost visible dataset\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n\n            if (i !== me.index) {\n              controller = meta.controller;\n            }\n\n            break;\n          }\n        }\n      }\n\n      if (!arcs) {\n        return 0;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arc = arcs[i];\n        options = controller ? controller._resolveElementOptions(arc, i) : arc._options;\n\n        if (options.borderAlign !== 'inner') {\n          borderWidth = options.borderWidth;\n          hoverWidth = options.hoverBorderWidth;\n          max = borderWidth > max ? borderWidth : max;\n          max = hoverWidth > max ? hoverWidth : max;\n        }\n      }\n\n      return max;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault$4(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$4(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$4(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$3([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n     * @private\n     */\n    _getRingWeightOffset: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n\n      return ringWeightOffset;\n    },\n\n    /**\n     * @private\n     */\n    _getRingWeight: function _getRingWeight(dataSetIndex) {\n      return Math.max(valueOrDefault$4(this.chart.data.datasets[dataSetIndex].weight, 1), 0);\n    },\n\n    /**\n     * Returns the sum of all visibile data set weights.  This value can be 0.\n     * @private\n     */\n    _getVisibleDatasetWeightTotal: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length);\n    }\n  });\n\n  core_defaults._set('horizontalBar', {\n    hover: {\n      mode: 'index',\n      axis: 'y'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        position: 'bottom'\n      }],\n      yAxes: [{\n        type: 'category',\n        position: 'left',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }]\n    },\n    elements: {\n      rectangle: {\n        borderSkipped: 'left'\n      }\n    },\n    tooltips: {\n      mode: 'index',\n      axis: 'y'\n    }\n  });\n\n  var controller_horizontalBar = controller_bar.extend({\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().yAxisID;\n    }\n  });\n  var valueOrDefault$5 = helpers$1.valueOrDefault;\n  var resolve$4 = helpers$1.options.resolve;\n  var isPointInArea = helpers$1.canvas._isPointInArea;\n\n  core_defaults._set('line', {\n    showLines: true,\n    spanGaps: false,\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        id: 'x-axis-0'\n      }],\n      yAxes: [{\n        type: 'linear',\n        id: 'y-axis-0'\n      }]\n    }\n  });\n\n  function lineEnabled(dataset, options) {\n    return valueOrDefault$5(dataset.showLine, options.showLines);\n  }\n\n  var controller_line = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.getScaleForId(meta.yAxisID);\n      var dataset = me.getDataset();\n      var showLine = lineEnabled(dataset, me.chart.options);\n      var i, ilen; // Update Line\n\n      if (showLine) {\n        // Compatibility: If the properties are defined with only the old name, use those values\n        if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n          dataset.lineTension = dataset.tension;\n        } // Utility\n\n\n        line._scale = scale;\n        line._datasetIndex = me.index; // Data\n\n        line._children = points; // Model\n\n        line._model = me._resolveLineOptions(line);\n        line.pivot();\n      } // Update Points\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      }\n\n      if (showLine && line._model.tension !== 0) {\n        me.updateBezierControlPoints();\n      } // Now pivot the point for animation\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var datasetIndex = me.index;\n      var value = dataset.data[index];\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var lineModel = meta.dataset._model;\n      var x, y;\n\n      var options = me._resolvePointOptions(point, index);\n\n      x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n      y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex); // Utility\n\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = datasetIndex;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$5(custom.tension, lineModel ? lineModel.tension : 0),\n        steppedLine: lineModel ? lineModel.steppedLine : false,\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options;\n      var elementOptions = options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill', 'cubicInterpolationMode'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[key], elementOptions[key]]);\n      } // The default behavior of lines is to break at null values, according\n      // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n      // This option gives lines the ability to span gaps\n\n\n      values.spanGaps = valueOrDefault$5(dataset.spanGaps, options.spanGaps);\n      values.tension = valueOrDefault$5(dataset.lineTension, elementOptions.tension);\n      values.steppedLine = resolve$4([custom.steppedLine, dataset.steppedLine, elementOptions.stepped]);\n      return values;\n    },\n    calculatePointY: function calculatePointY(value, index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var sumPos = 0;\n      var sumNeg = 0;\n      var i, ds, dsMeta;\n\n      if (yScale.options.stacked) {\n        for (i = 0; i < datasetIndex; i++) {\n          ds = chart.data.datasets[i];\n          dsMeta = chart.getDatasetMeta(i);\n\n          if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n            var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\n            if (stackedRightValue < 0) {\n              sumNeg += stackedRightValue || 0;\n            } else {\n              sumPos += stackedRightValue || 0;\n            }\n          }\n        }\n\n        var rightValue = Number(yScale.getRightValue(value));\n\n        if (rightValue < 0) {\n          return yScale.getPixelForValue(sumNeg + rightValue);\n        }\n\n        return yScale.getPixelForValue(sumPos + rightValue);\n      }\n\n      return yScale.getPixelForValue(value);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var lineModel = meta.dataset._model;\n      var area = chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints; // Only consider points that are drawn in case the spanGaps option is used\n\n      if (lineModel.spanGaps) {\n        points = points.filter(function (pt) {\n          return !pt._model.skip;\n        });\n      }\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      if (lineModel.cubicInterpolationMode === 'monotone') {\n        helpers$1.splineCurveMonotone(points);\n      } else {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n          controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i)._model, model, helpers$1.nextItem(points, i)._model, lineModel.tension);\n          model.controlPointPreviousX = controlPoints.previous.x;\n          model.controlPointPreviousY = controlPoints.previous.y;\n          model.controlPointNextX = controlPoints.next.x;\n          model.controlPointNextY = controlPoints.next.y;\n        }\n      }\n\n      if (chart.options.elements.line.capBezierPoints) {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n\n          if (isPointInArea(model, area)) {\n            if (i > 0 && isPointInArea(points[i - 1]._model, area)) {\n              model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n              model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n            }\n\n            if (i < points.length - 1 && isPointInArea(points[i + 1]._model, area)) {\n              model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n              model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n            }\n          }\n        }\n      }\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var points = meta.data || [];\n      var area = chart.chartArea;\n      var ilen = points.length;\n      var halfBorderWidth;\n      var i = 0;\n\n      if (lineEnabled(me.getDataset(), chart.options)) {\n        halfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n        helpers$1.canvas.clipArea(chart.ctx, {\n          left: area.left,\n          right: area.right,\n          top: area.top - halfBorderWidth,\n          bottom: area.bottom + halfBorderWidth\n        });\n        meta.dataset.draw();\n        helpers$1.canvas.unclipArea(chart.ctx);\n      } // Draw the points\n\n\n      for (; i < ilen; ++i) {\n        points[i].draw(area);\n      }\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$5(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$5(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$5(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$5(options.hoverRadius, options.radius);\n    }\n  });\n  var resolve$5 = helpers$1.options.resolve;\n\n  core_defaults._set('polarArea', {\n    scale: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      gridLines: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      ticks: {\n        beginAtZero: true\n      }\n    },\n    // Boolean - Whether to animate the rotation of the chart\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    startAngle: -0.5 * Math.PI,\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$5([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$5([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$5([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i);\n          meta.data[index].hidden = !meta.data[index].hidden;\n        }\n\n        chart.update();\n      }\n    },\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(item, data) {\n          return data.labels[item.index] + ': ' + item.yLabel;\n        }\n      }\n    }\n  });\n\n  var controller_polarArea = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n      var start = me.chart.options.startAngle || 0;\n      var starts = me._starts = [];\n      var angles = me._angles = [];\n      var arcs = meta.data;\n      var i, ilen, angle;\n\n      me._updateRadius();\n\n      meta.count = me.countVisibleElements();\n\n      for (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n        starts[i] = start;\n        angle = me._computeAngle(i);\n        angles[i] = angle;\n        start += angle;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateRadius: function _updateRadius() {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      chart.outerRadius = Math.max(minSize / 2, 0);\n      chart.innerRadius = Math.max(opts.cutoutPercentage ? chart.outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.index;\n      me.innerRadius = me.outerRadius - chart.radiusLength;\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = chart.scale;\n      var labels = chart.data.labels;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter; // var negHalfPI = -0.5 * Math.PI;\n\n      var datasetStartAngle = opts.startAngle;\n      var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var startAngle = me._starts[index];\n      var endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n      var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: reset ? resetRadius : distance,\n          startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n          endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n          label: helpers$1.valueAtIndexOrDefault(labels, index, labels[index])\n        }\n      });\n      arc.pivot();\n    },\n    countVisibleElements: function countVisibleElements() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var count = 0;\n      helpers$1.each(meta.data, function (element, index) {\n        if (!isNaN(dataset.data[index]) && !element.hidden) {\n          count++;\n        }\n      });\n      return count;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      var valueOrDefault = helpers$1.valueOrDefault;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$5([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _computeAngle: function _computeAngle(index) {\n      var me = this;\n      var count = this.getMeta().count;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n\n      if (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n        return 0;\n      } // Scriptable options\n\n\n      var context = {\n        chart: me.chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      return resolve$5([me.chart.options.elements.arc.angle, 2 * Math.PI / count], context, index);\n    }\n  });\n\n  core_defaults._set('pie', helpers$1.clone(core_defaults.doughnut));\n\n  core_defaults._set('pie', {\n    cutoutPercentage: 0\n  }); // Pie charts are Doughnut chart with different defaults\n\n\n  var controller_pie = controller_doughnut;\n  var valueOrDefault$6 = helpers$1.valueOrDefault;\n  var resolve$6 = helpers$1.options.resolve;\n\n  core_defaults._set('radar', {\n    scale: {\n      type: 'radialLinear'\n    },\n    elements: {\n      line: {\n        tension: 0 // no bezier in radar\n\n      }\n    }\n  });\n\n  var controller_radar = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.chart.scale;\n      var dataset = me.getDataset();\n      var i, ilen; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n        dataset.lineTension = dataset.tension;\n      } // Utility\n\n\n      line._scale = scale;\n      line._datasetIndex = me.index; // Data\n\n      line._children = points;\n      line._loop = true; // Model\n\n      line._model = me._resolveLineOptions(line);\n      line.pivot(); // Update Points\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      } // Update bezier control points\n\n\n      me.updateBezierControlPoints(); // Now pivot the point for animation\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var scale = me.chart.scale;\n      var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n      var options = me._resolvePointOptions(point, index);\n\n      var lineModel = me.getMeta().dataset._model;\n\n      var x = reset ? scale.xCenter : pointPosition.x;\n      var y = reset ? scale.yCenter : pointPosition.y; // Utility\n\n      point._scale = scale;\n      point._options = options;\n      point._datasetIndex = me.index;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        // value not used in dataset scale, but we want a consistent API between scales\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$6(custom.tension, lineModel ? lineModel.tension : 0),\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[key], options[key]]);\n      }\n\n      values.tension = valueOrDefault$6(dataset.lineTension, options.tension);\n      return values;\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var meta = me.getMeta();\n      var area = me.chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints;\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        model = points[i]._model;\n        controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i, true)._model, model, helpers$1.nextItem(points, i, true)._model, model.tension); // Prevent the bezier going outside of the bounds of the graph\n\n        model.controlPointPreviousX = capControlPoint(controlPoints.previous.x, area.left, area.right);\n        model.controlPointPreviousY = capControlPoint(controlPoints.previous.y, area.top, area.bottom);\n        model.controlPointNextX = capControlPoint(controlPoints.next.x, area.left, area.right);\n        model.controlPointNextY = capControlPoint(controlPoints.next.y, area.top, area.bottom);\n      }\n    },\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$6(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$6(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$6(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$6(options.hoverRadius, options.radius);\n    }\n  });\n\n  core_defaults._set('scatter', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        id: 'x-axis-1',\n        // need an ID so datasets can reference the scale\n        type: 'linear',\n        // scatter should not use a category axis\n        position: 'bottom'\n      }],\n      yAxes: [{\n        id: 'y-axis-1',\n        type: 'linear',\n        position: 'left'\n      }]\n    },\n    showLines: false,\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return ''; // doesn't make sense for scatter since data are formatted as a point\n        },\n        label: function label(item) {\n          return '(' + item.xLabel + ', ' + item.yLabel + ')';\n        }\n      }\n    }\n  }); // Scatter charts use line controllers\n\n\n  var controller_scatter = controller_line; // NOTE export a map in which the key represents the controller type, not\n  // the class, and so must be CamelCase in order to be correctly retrieved\n  // by the controller in core.controller.js (`controllers[meta.type]`).\n\n  var controllers = {\n    bar: controller_bar,\n    bubble: controller_bubble,\n    doughnut: controller_doughnut,\n    horizontalBar: controller_horizontalBar,\n    line: controller_line,\n    polarArea: controller_polarArea,\n    pie: controller_pie,\n    radar: controller_radar,\n    scatter: controller_scatter\n  };\n  /**\n   * Helper function to get relative position for an event\n   * @param {Event|IEvent} event - The event to get the position for\n   * @param {Chart} chart - The chart\n   * @returns {object} the event position\n   */\n\n  function getRelativePosition(e, chart) {\n    if (e.native) {\n      return {\n        x: e.x,\n        y: e.y\n      };\n    }\n\n    return helpers$1.getRelativePosition(e, chart);\n  }\n  /**\n   * Helper function to traverse all of the visible elements in the chart\n   * @param {Chart} chart - the chart\n   * @param {function} handler - the callback to execute for each visible item\n   */\n\n\n  function parseVisibleItems(chart, handler) {\n    var datasets = chart.data.datasets;\n    var meta, i, j, ilen, jlen;\n\n    for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n      if (!chart.isDatasetVisible(i)) {\n        continue;\n      }\n\n      meta = chart.getDatasetMeta(i);\n\n      for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n        var element = meta.data[j];\n\n        if (!element._view.skip) {\n          handler(element);\n        }\n      }\n    }\n  }\n  /**\n   * Helper function to get the items that intersect the event position\n   * @param {ChartElement[]} items - elements to filter\n   * @param {object} position - the point to be nearest to\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getIntersectItems(chart, position) {\n    var elements = [];\n    parseVisibleItems(chart, function (element) {\n      if (element.inRange(position.x, position.y)) {\n        elements.push(element);\n      }\n    });\n    return elements;\n  }\n  /**\n   * Helper function to get the items nearest to the event position considering all visible items in teh chart\n   * @param {Chart} chart - the chart to look at elements from\n   * @param {object} position - the point to be nearest to\n   * @param {boolean} intersect - if true, only consider items that intersect the position\n   * @param {function} distanceMetric - function to provide the distance between points\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getNearestItems(chart, position, intersect, distanceMetric) {\n    var minDistance = Number.POSITIVE_INFINITY;\n    var nearestItems = [];\n    parseVisibleItems(chart, function (element) {\n      if (intersect && !element.inRange(position.x, position.y)) {\n        return;\n      }\n\n      var center = element.getCenterPoint();\n      var distance = distanceMetric(position, center);\n\n      if (distance < minDistance) {\n        nearestItems = [element];\n        minDistance = distance;\n      } else if (distance === minDistance) {\n        // Can have multiple items at the same distance in which case we sort by size\n        nearestItems.push(element);\n      }\n    });\n    return nearestItems;\n  }\n  /**\n   * Get a distance metric function for two points based on the\n   * axis mode setting\n   * @param {string} axis - the axis mode. x|y|xy\n   */\n\n\n  function getDistanceMetricForAxis(axis) {\n    var useX = axis.indexOf('x') !== -1;\n    var useY = axis.indexOf('y') !== -1;\n    return function (pt1, pt2) {\n      var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n      var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n      return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n  }\n\n  function indexMode(chart, e, options) {\n    var position = getRelativePosition(e, chart); // Default axis for index mode is 'x' to match old behaviour\n\n    options.axis = options.axis || 'x';\n    var distanceMetric = getDistanceMetricForAxis(options.axis);\n    var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n    var elements = [];\n\n    if (!items.length) {\n      return [];\n    }\n\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      if (chart.isDatasetVisible(datasetIndex)) {\n        var meta = chart.getDatasetMeta(datasetIndex);\n        var element = meta.data[items[0]._index]; // don't count items that are skipped (null data)\n\n        if (element && !element._view.skip) {\n          elements.push(element);\n        }\n      }\n    });\n    return elements;\n  }\n  /**\n   * @interface IInteractionOptions\n   */\n\n  /**\n   * If true, only consider items that intersect the point\n   * @name IInterfaceOptions#boolean\n   * @type Boolean\n   */\n\n  /**\n   * Contains interaction related functions\n   * @namespace Chart.Interaction\n   */\n\n\n  var core_interaction = {\n    // Helper function for different modes\n    modes: {\n      single: function single(chart, e) {\n        var position = getRelativePosition(e, chart);\n        var elements = [];\n        parseVisibleItems(chart, function (element) {\n          if (element.inRange(position.x, position.y)) {\n            elements.push(element);\n            return elements;\n          }\n        });\n        return elements.slice(0, 1);\n      },\n\n      /**\n       * @function Chart.Interaction.modes.label\n       * @deprecated since version 2.4.0\n       * @todo remove at version 3\n       * @private\n       */\n      label: indexMode,\n\n      /**\n       * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n       * @function Chart.Interaction.modes.index\n       * @since v2.4.0\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      index: indexMode,\n\n      /**\n       * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect is false, we find the nearest item and return the items in that dataset\n       * @function Chart.Interaction.modes.dataset\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      dataset: function dataset(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n        if (items.length > 0) {\n          items = chart.getDatasetMeta(items[0]._datasetIndex).data;\n        }\n\n        return items;\n      },\n\n      /**\n       * @function Chart.Interaction.modes.x-axis\n       * @deprecated since version 2.4.0. Use index mode and intersect == true\n       * @todo remove at version 3\n       * @private\n       */\n      'x-axis': function xAxis(chart, e) {\n        return indexMode(chart, e, {\n          intersect: false\n        });\n      },\n\n      /**\n       * Point mode returns all elements that hit test based on the event position\n       * of the event\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      point: function point(chart, e) {\n        var position = getRelativePosition(e, chart);\n        return getIntersectItems(chart, position);\n      },\n\n      /**\n       * nearest mode returns the element closest to the point\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      nearest: function nearest(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        return getNearestItems(chart, position, options.intersect, distanceMetric);\n      },\n\n      /**\n       * x mode returns the elements that hit-test at the current x coordinate\n       * @function Chart.Interaction.modes.x\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      x: function x(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inXRange(position.x)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      },\n\n      /**\n       * y mode returns the elements that hit-test at the current y coordinate\n       * @function Chart.Interaction.modes.y\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      y: function y(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inYRange(position.y)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      }\n    }\n  };\n\n  function filterByPosition(array, position) {\n    return helpers$1.where(array, function (v) {\n      return v.position === position;\n    });\n  }\n\n  function sortByWeight(array, reverse) {\n    array.forEach(function (v, i) {\n      v._tmpIndex_ = i;\n      return v;\n    });\n    array.sort(function (a, b) {\n      var v0 = reverse ? b : a;\n      var v1 = reverse ? a : b;\n      return v0.weight === v1.weight ? v0._tmpIndex_ - v1._tmpIndex_ : v0.weight - v1.weight;\n    });\n    array.forEach(function (v) {\n      delete v._tmpIndex_;\n    });\n  }\n\n  function findMaxPadding(boxes) {\n    var top = 0;\n    var left = 0;\n    var bottom = 0;\n    var right = 0;\n    helpers$1.each(boxes, function (box) {\n      if (box.getPadding) {\n        var boxPadding = box.getPadding();\n        top = Math.max(top, boxPadding.top);\n        left = Math.max(left, boxPadding.left);\n        bottom = Math.max(bottom, boxPadding.bottom);\n        right = Math.max(right, boxPadding.right);\n      }\n    });\n    return {\n      top: top,\n      left: left,\n      bottom: bottom,\n      right: right\n    };\n  }\n\n  function addSizeByPosition(boxes, size) {\n    helpers$1.each(boxes, function (box) {\n      size[box.position] += box.isHorizontal() ? box.height : box.width;\n    });\n  }\n\n  core_defaults._set('global', {\n    layout: {\n      padding: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      }\n    }\n  });\n  /**\n   * @interface ILayoutItem\n   * @prop {string} position - The position of the item in the chart layout. Possible values are\n   * 'left', 'top', 'right', 'bottom', and 'chartArea'\n   * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n   * @prop {boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n   * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n   * @prop {function} update - Takes two parameters: width and height. Returns size of item\n   * @prop {function} getPadding -  Returns an object with padding on the edges\n   * @prop {number} width - Width of item. Must be valid after update()\n   * @prop {number} height - Height of item. Must be valid after update()\n   * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n   */\n  // The layout service is very self explanatory.  It's responsible for the layout within a chart.\n  // Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n  // It is this service's responsibility of carrying out that layout.\n\n\n  var core_layouts = {\n    defaults: {},\n\n    /**\n     * Register a box to a chart.\n     * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n     * @param {Chart} chart - the chart to use\n     * @param {ILayoutItem} item - the item to add to be layed out\n     */\n    addBox: function addBox(chart, item) {\n      if (!chart.boxes) {\n        chart.boxes = [];\n      } // initialize item with default values\n\n\n      item.fullWidth = item.fullWidth || false;\n      item.position = item.position || 'top';\n      item.weight = item.weight || 0;\n      chart.boxes.push(item);\n    },\n\n    /**\n     * Remove a layoutItem from a chart\n     * @param {Chart} chart - the chart to remove the box from\n     * @param {ILayoutItem} layoutItem - the item to remove from the layout\n     */\n    removeBox: function removeBox(chart, layoutItem) {\n      var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n      if (index !== -1) {\n        chart.boxes.splice(index, 1);\n      }\n    },\n\n    /**\n     * Sets (or updates) options on the given `item`.\n     * @param {Chart} chart - the chart in which the item lives (or will be added to)\n     * @param {ILayoutItem} item - the item to configure with the given options\n     * @param {object} options - the new item options.\n     */\n    configure: function configure(chart, item, options) {\n      var props = ['fullWidth', 'position', 'weight'];\n      var ilen = props.length;\n      var i = 0;\n      var prop;\n\n      for (; i < ilen; ++i) {\n        prop = props[i];\n\n        if (options.hasOwnProperty(prop)) {\n          item[prop] = options[prop];\n        }\n      }\n    },\n\n    /**\n     * Fits boxes of the given chart into the given size by having each box measure itself\n     * then running a fitting algorithm\n     * @param {Chart} chart - the chart\n     * @param {number} width - the width to fit into\n     * @param {number} height - the height to fit into\n     */\n    update: function update(chart, width, height) {\n      if (!chart) {\n        return;\n      }\n\n      var layoutOptions = chart.options.layout || {};\n      var padding = helpers$1.options.toPadding(layoutOptions.padding);\n      var leftPadding = padding.left;\n      var rightPadding = padding.right;\n      var topPadding = padding.top;\n      var bottomPadding = padding.bottom;\n      var leftBoxes = filterByPosition(chart.boxes, 'left');\n      var rightBoxes = filterByPosition(chart.boxes, 'right');\n      var topBoxes = filterByPosition(chart.boxes, 'top');\n      var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n      var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea'); // Sort boxes by weight. A higher weight is further away from the chart area\n\n      sortByWeight(leftBoxes, true);\n      sortByWeight(rightBoxes, false);\n      sortByWeight(topBoxes, true);\n      sortByWeight(bottomBoxes, false);\n      var verticalBoxes = leftBoxes.concat(rightBoxes);\n      var horizontalBoxes = topBoxes.concat(bottomBoxes);\n      var outerBoxes = verticalBoxes.concat(horizontalBoxes); // Essentially we now have any number of boxes on each of the 4 sides.\n      // Our canvas looks like the following.\n      // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n      // B1 is the bottom axis\n      // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n      // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n      // an error will be thrown.\n      //\n      // |----------------------------------------------------|\n      // |                  T1 (Full Width)                   |\n      // |----------------------------------------------------|\n      // |    |    |                 T2                  |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    | C1 |                           | C2 |    |\n      // |    |    |----|                           |----|    |\n      // |    |    |                                     |    |\n      // | L1 | L2 |           ChartArea (C0)            | R1 |\n      // |    |    |                                     |    |\n      // |    |    |----|                           |----|    |\n      // |    |    | C3 |                           | C4 |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    |                 B1                  |    |\n      // |----------------------------------------------------|\n      // |                  B2 (Full Width)                   |\n      // |----------------------------------------------------|\n      //\n      // What we do to find the best sizing, we do the following\n      // 1. Determine the minimum size of the chart area.\n      // 2. Split the remaining width equally between each vertical axis\n      // 3. Split the remaining height equally between each horizontal axis\n      // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n      // 5. Adjust the sizes of each axis based on it's minimum reported size.\n      // 6. Refit each axis\n      // 7. Position each axis in the final location\n      // 8. Tell the chart the final location of the chart area\n      // 9. Tell any axes that overlay the chart area the positions of the chart area\n      // Step 1\n\n      var chartWidth = width - leftPadding - rightPadding;\n      var chartHeight = height - topPadding - bottomPadding;\n      var chartAreaWidth = chartWidth / 2; // min 50%\n      // Step 2\n\n      var verticalBoxWidth = (width - chartAreaWidth) / verticalBoxes.length; // Step 3\n      // TODO re-limit horizontal axis height (this limit has affected only padding calculation since PR 1837)\n      // var horizontalBoxHeight = (height - chartAreaHeight) / horizontalBoxes.length;\n      // Step 4\n\n      var maxChartAreaWidth = chartWidth;\n      var maxChartAreaHeight = chartHeight;\n      var outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      var minBoxSizes = [];\n      var maxPadding;\n\n      function getMinimumBoxSize(box) {\n        var minSize;\n        var isHorizontal = box.isHorizontal();\n\n        if (isHorizontal) {\n          minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2);\n          maxChartAreaHeight -= minSize.height;\n        } else {\n          minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n          maxChartAreaWidth -= minSize.width;\n        }\n\n        minBoxSizes.push({\n          horizontal: isHorizontal,\n          width: minSize.width,\n          box: box\n        });\n      }\n\n      helpers$1.each(outerBoxes, getMinimumBoxSize); // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\n      maxPadding = findMaxPadding(outerBoxes); // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n      // be if the axes are drawn at their minimum sizes.\n      // Steps 5 & 6\n      // Function to fit a box\n\n      function fitBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minBox) {\n          return minBox.box === box;\n        });\n\n        if (minBoxSize) {\n          if (minBoxSize.horizontal) {\n            var scaleMargin = {\n              left: Math.max(outerBoxSizes.left, maxPadding.left),\n              right: Math.max(outerBoxSizes.right, maxPadding.right),\n              top: 0,\n              bottom: 0\n            }; // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n            // on the margin. Sometimes they need to increase in size slightly\n\n            box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n          } else {\n            box.update(minBoxSize.width, maxChartAreaHeight);\n          }\n        }\n      } // Update, and calculate the left and right margins for the horizontal boxes\n\n\n      helpers$1.each(verticalBoxes, fitBox);\n      addSizeByPosition(verticalBoxes, outerBoxSizes); // Set the Left and Right margins for the horizontal boxes\n\n      helpers$1.each(horizontalBoxes, fitBox);\n      addSizeByPosition(horizontalBoxes, outerBoxSizes);\n\n      function finalFitVerticalBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minSize) {\n          return minSize.box === box;\n        });\n        var scaleMargin = {\n          left: 0,\n          right: 0,\n          top: outerBoxSizes.top,\n          bottom: outerBoxSizes.bottom\n        };\n\n        if (minBoxSize) {\n          box.update(minBoxSize.width, maxChartAreaHeight, scaleMargin);\n        }\n      } // Let the left layout know the final margin\n\n\n      helpers$1.each(verticalBoxes, finalFitVerticalBox); // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\n      outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      addSizeByPosition(outerBoxes, outerBoxSizes); // We may be adding some padding to account for rotated x axis labels\n\n      var leftPaddingAddition = Math.max(maxPadding.left - outerBoxSizes.left, 0);\n      outerBoxSizes.left += leftPaddingAddition;\n      outerBoxSizes.right += Math.max(maxPadding.right - outerBoxSizes.right, 0);\n      var topPaddingAddition = Math.max(maxPadding.top - outerBoxSizes.top, 0);\n      outerBoxSizes.top += topPaddingAddition;\n      outerBoxSizes.bottom += Math.max(maxPadding.bottom - outerBoxSizes.bottom, 0); // Figure out if our chart area changed. This would occur if the dataset layout label rotation\n      // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n      // without calling `fit` again\n\n      var newMaxChartAreaHeight = height - outerBoxSizes.top - outerBoxSizes.bottom;\n      var newMaxChartAreaWidth = width - outerBoxSizes.left - outerBoxSizes.right;\n\n      if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n        helpers$1.each(verticalBoxes, function (box) {\n          box.height = newMaxChartAreaHeight;\n        });\n        helpers$1.each(horizontalBoxes, function (box) {\n          if (!box.fullWidth) {\n            box.width = newMaxChartAreaWidth;\n          }\n        });\n        maxChartAreaHeight = newMaxChartAreaHeight;\n        maxChartAreaWidth = newMaxChartAreaWidth;\n      } // Step 7 - Position the boxes\n\n\n      var left = leftPadding + leftPaddingAddition;\n      var top = topPadding + topPaddingAddition;\n\n      function placeBox(box) {\n        if (box.isHorizontal()) {\n          box.left = box.fullWidth ? leftPadding : outerBoxSizes.left;\n          box.right = box.fullWidth ? width - rightPadding : outerBoxSizes.left + maxChartAreaWidth;\n          box.top = top;\n          box.bottom = top + box.height; // Move to next point\n\n          top = box.bottom;\n        } else {\n          box.left = left;\n          box.right = left + box.width;\n          box.top = outerBoxSizes.top;\n          box.bottom = outerBoxSizes.top + maxChartAreaHeight; // Move to next point\n\n          left = box.right;\n        }\n      }\n\n      helpers$1.each(leftBoxes.concat(topBoxes), placeBox); // Account for chart width and height\n\n      left += maxChartAreaWidth;\n      top += maxChartAreaHeight;\n      helpers$1.each(rightBoxes, placeBox);\n      helpers$1.each(bottomBoxes, placeBox); // Step 8\n\n      chart.chartArea = {\n        left: outerBoxSizes.left,\n        top: outerBoxSizes.top,\n        right: outerBoxSizes.left + maxChartAreaWidth,\n        bottom: outerBoxSizes.top + maxChartAreaHeight\n      }; // Step 9\n\n      helpers$1.each(chartAreaBoxes, function (box) {\n        box.left = chart.chartArea.left;\n        box.top = chart.chartArea.top;\n        box.right = chart.chartArea.right;\n        box.bottom = chart.chartArea.bottom;\n        box.update(maxChartAreaWidth, maxChartAreaHeight);\n      });\n    }\n  };\n  /**\n   * Platform fallback implementation (minimal).\n   * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n   */\n\n  var platform_basic = {\n    acquireContext: function acquireContext(item) {\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      }\n\n      return item && item.getContext('2d') || null;\n    }\n  };\n  var platform_dom = \"/*\\n * DOM element rendering detection\\n * https://davidwalsh.name/detect-node-insertion\\n */\\n@keyframes chartjs-render-animation {\\n\\tfrom { opacity: 0.99; }\\n\\tto { opacity: 1; }\\n}\\n\\n.chartjs-render-monitor {\\n\\tanimation: chartjs-render-animation 0.001s;\\n}\\n\\n/*\\n * DOM element resizing detection\\n * https://github.com/marcj/css-element-queries\\n */\\n.chartjs-size-monitor,\\n.chartjs-size-monitor-expand,\\n.chartjs-size-monitor-shrink {\\n\\tposition: absolute;\\n\\tdirection: ltr;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\tright: 0;\\n\\tbottom: 0;\\n\\toverflow: hidden;\\n\\tpointer-events: none;\\n\\tvisibility: hidden;\\n\\tz-index: -1;\\n}\\n\\n.chartjs-size-monitor-expand > div {\\n\\tposition: absolute;\\n\\twidth: 1000000px;\\n\\theight: 1000000px;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\\n.chartjs-size-monitor-shrink > div {\\n\\tposition: absolute;\\n\\twidth: 200%;\\n\\theight: 200%;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\";\n  var platform_dom$1 =\n  /*#__PURE__*/\n  Object.freeze({\n    default: platform_dom\n  });\n\n  function getCjsExportFromNamespace(n) {\n    return n && n.default || n;\n  }\n\n  var stylesheet = getCjsExportFromNamespace(platform_dom$1);\n  var EXPANDO_KEY = '$chartjs';\n  var CSS_PREFIX = 'chartjs-';\n  var CSS_SIZE_MONITOR = CSS_PREFIX + 'size-monitor';\n  var CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\n  var CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\n  var ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n  /**\n   * DOM event types -> Chart.js event types.\n   * Note: only events with different types are mapped.\n   * @see https://developer.mozilla.org/en-US/docs/Web/Events\n   */\n\n  var EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n  };\n  /**\n   * The \"used\" size is the final value of a dimension property after all calculations have\n   * been performed. This method uses the computed style of `element` but returns undefined\n   * if the computed style is not expressed in pixels. That can happen in some cases where\n   * `element` has a size relative to its parent and this last one is not yet displayed,\n   * for example because of `display: none` on a parent node.\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n   * @returns {number} Size in pixels or undefined if unknown.\n   */\n\n  function readUsedSize(element, property) {\n    var value = helpers$1.getStyle(element, property);\n    var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? Number(matches[1]) : undefined;\n  }\n  /**\n   * Initializes the canvas style and render size without modifying the canvas display size,\n   * since responsiveness is handled by the controller.resize() method. The config is used\n   * to determine the aspect ratio to apply in case no explicit height has been specified.\n   */\n\n\n  function initCanvas(canvas, config) {\n    var style = canvas.style; // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n    // returns null or '' if no explicit value has been set to the canvas attribute.\n\n    var renderHeight = canvas.getAttribute('height');\n    var renderWidth = canvas.getAttribute('width'); // Chart.js modifies some canvas values that we want to restore on destroy\n\n    canvas[EXPANDO_KEY] = {\n      initial: {\n        height: renderHeight,\n        width: renderWidth,\n        style: {\n          display: style.display,\n          height: style.height,\n          width: style.width\n        }\n      }\n    }; // Force canvas to display as block to avoid extra space caused by inline\n    // elements, which would interfere with the responsive resize process.\n    // https://github.com/chartjs/Chart.js/issues/2538\n\n    style.display = style.display || 'block';\n\n    if (renderWidth === null || renderWidth === '') {\n      var displayWidth = readUsedSize(canvas, 'width');\n\n      if (displayWidth !== undefined) {\n        canvas.width = displayWidth;\n      }\n    }\n\n    if (renderHeight === null || renderHeight === '') {\n      if (canvas.style.height === '') {\n        // If no explicit render height and style height, let's apply the aspect ratio,\n        // which one can be specified by the user but also by charts as default option\n        // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n        canvas.height = canvas.width / (config.options.aspectRatio || 2);\n      } else {\n        var displayHeight = readUsedSize(canvas, 'height');\n\n        if (displayWidth !== undefined) {\n          canvas.height = displayHeight;\n        }\n      }\n    }\n\n    return canvas;\n  }\n  /**\n   * Detects support for options object argument in addEventListener.\n   * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n   * @private\n   */\n\n\n  var supportsEventListenerOptions = function () {\n    var supports = false;\n\n    try {\n      var options = Object.defineProperty({}, 'passive', {\n        // eslint-disable-next-line getter-return\n        get: function get() {\n          supports = true;\n        }\n      });\n      window.addEventListener('e', null, options);\n    } catch (e) {// continue regardless of error\n    }\n\n    return supports;\n  }(); // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n  // https://github.com/chartjs/Chart.js/issues/4287\n\n\n  var eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n  } : false;\n\n  function addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n\n  function removeListener(node, type, listener) {\n    node.removeEventListener(type, listener, eventListenerOptions);\n  }\n\n  function createEvent(type, chart, x, y, nativeEvent) {\n    return {\n      type: type,\n      chart: chart,\n      native: nativeEvent || null,\n      x: x !== undefined ? x : null,\n      y: y !== undefined ? y : null\n    };\n  }\n\n  function fromNativeEvent(event, chart) {\n    var type = EVENT_TYPES[event.type] || event.type;\n    var pos = helpers$1.getRelativePosition(event, chart);\n    return createEvent(type, chart, pos.x, pos.y, event);\n  }\n\n  function throttled(fn, thisArg) {\n    var ticking = false;\n    var args = [];\n    return function () {\n      args = Array.prototype.slice.call(arguments);\n      thisArg = thisArg || this;\n\n      if (!ticking) {\n        ticking = true;\n        helpers$1.requestAnimFrame.call(window, function () {\n          ticking = false;\n          fn.apply(thisArg, args);\n        });\n      }\n    };\n  }\n\n  function createDiv(cls) {\n    var el = document.createElement('div');\n    el.className = cls || '';\n    return el;\n  } // Implementation based on https://github.com/marcj/css-element-queries\n\n\n  function createResizer(handler) {\n    var maxSize = 1000000; // NOTE(SB) Don't use innerHTML because it could be considered unsafe.\n    // https://github.com/chartjs/Chart.js/issues/5902\n\n    var resizer = createDiv(CSS_SIZE_MONITOR);\n    var expand = createDiv(CSS_SIZE_MONITOR + '-expand');\n    var shrink = createDiv(CSS_SIZE_MONITOR + '-shrink');\n    expand.appendChild(createDiv());\n    shrink.appendChild(createDiv());\n    resizer.appendChild(expand);\n    resizer.appendChild(shrink);\n\n    resizer._reset = function () {\n      expand.scrollLeft = maxSize;\n      expand.scrollTop = maxSize;\n      shrink.scrollLeft = maxSize;\n      shrink.scrollTop = maxSize;\n    };\n\n    var onScroll = function onScroll() {\n      resizer._reset();\n\n      handler();\n    };\n\n    addListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n    addListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n    return resizer;\n  } // https://davidwalsh.name/detect-node-insertion\n\n\n  function watchForRender(node, handler) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n    var proxy = expando.renderProxy = function (e) {\n      if (e.animationName === CSS_RENDER_ANIMATION) {\n        handler();\n      }\n    };\n\n    helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n      addListener(node, type, proxy);\n    }); // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n    // is removed then added back immediately (same animation frame?). Accessing the\n    // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n    // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n    // https://github.com/chartjs/Chart.js/issues/4737\n\n    expando.reflow = !!node.offsetParent;\n    node.classList.add(CSS_RENDER_MONITOR);\n  }\n\n  function unwatchForRender(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var proxy = expando.renderProxy;\n\n    if (proxy) {\n      helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n        removeListener(node, type, proxy);\n      });\n      delete expando.renderProxy;\n    }\n\n    node.classList.remove(CSS_RENDER_MONITOR);\n  }\n\n  function addResizeListener(node, listener, chart) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {}); // Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\n    var resizer = expando.resizer = createResizer(throttled(function () {\n      if (expando.resizer) {\n        var container = chart.options.maintainAspectRatio && node.parentNode;\n        var w = container ? container.clientWidth : 0;\n        listener(createEvent('resize', chart));\n\n        if (container && container.clientWidth < w && chart.canvas) {\n          // If the container size shrank during chart resize, let's assume\n          // scrollbar appeared. So we resize again with the scrollbar visible -\n          // effectively making chart smaller and the scrollbar hidden again.\n          // Because we are inside `throttled`, and currently `ticking`, scroll\n          // events are ignored during this whole 2 resize process.\n          // If we assumed wrong and something else happened, we are resizing\n          // twice in a frame (potential performance issue)\n          listener(createEvent('resize', chart));\n        }\n      }\n    })); // The resizer needs to be attached to the node parent, so we first need to be\n    // sure that `node` is attached to the DOM before injecting the resizer element.\n\n    watchForRender(node, function () {\n      if (expando.resizer) {\n        var container = node.parentNode;\n\n        if (container && container !== resizer.parentNode) {\n          container.insertBefore(resizer, container.firstChild);\n        } // The container size might have changed, let's reset the resizer state.\n\n\n        resizer._reset();\n      }\n    });\n  }\n\n  function removeResizeListener(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var resizer = expando.resizer;\n    delete expando.resizer;\n    unwatchForRender(node);\n\n    if (resizer && resizer.parentNode) {\n      resizer.parentNode.removeChild(resizer);\n    }\n  }\n\n  function injectCSS(platform, css) {\n    // https://stackoverflow.com/q/3922139\n    var style = platform._style || document.createElement('style');\n\n    if (!platform._style) {\n      platform._style = style;\n      css = '/* Chart.js */\\n' + css;\n      style.setAttribute('type', 'text/css');\n      document.getElementsByTagName('head')[0].appendChild(style);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n\n  var platform_dom$2 = {\n    /**\n     * When `true`, prevents the automatic injection of the stylesheet required to\n     * correctly detect when the chart is added to the DOM and then resized. This\n     * switch has been added to allow external stylesheet (`dist/Chart(.min)?.js`)\n     * to be manually imported to make this library compatible with any CSP.\n     * See https://github.com/chartjs/Chart.js/issues/5208\n     */\n    disableCSSInjection: false,\n\n    /**\n     * This property holds whether this platform is enabled for the current environment.\n     * Currently used by platform.js to select the proper implementation.\n     * @private\n     */\n    _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n    /**\n     * @private\n     */\n    _ensureLoaded: function _ensureLoaded() {\n      if (this._loaded) {\n        return;\n      }\n\n      this._loaded = true; // https://github.com/chartjs/Chart.js/issues/5208\n\n      if (!this.disableCSSInjection) {\n        injectCSS(this, stylesheet);\n      }\n    },\n    acquireContext: function acquireContext(item, config) {\n      if (typeof item === 'string') {\n        item = document.getElementById(item);\n      } else if (item.length) {\n        // Support for array based queries (such as jQuery)\n        item = item[0];\n      }\n\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      } // To prevent canvas fingerprinting, some add-ons undefine the getContext\n      // method, for example: https://github.com/kkapsner/CanvasBlocker\n      // https://github.com/chartjs/Chart.js/issues/2807\n\n\n      var context = item && item.getContext && item.getContext('2d'); // Load platform resources on first chart creation, to make possible to change\n      // platform options after importing the library (e.g. `disableCSSInjection`).\n\n      this._ensureLoaded(); // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n      // inside an iframe or when running in a protected environment. We could guess the\n      // types from their toString() value but let's keep things flexible and assume it's\n      // a sufficient condition if the item has a context2D which has item as `canvas`.\n      // https://github.com/chartjs/Chart.js/issues/3887\n      // https://github.com/chartjs/Chart.js/issues/4102\n      // https://github.com/chartjs/Chart.js/issues/4152\n\n\n      if (context && context.canvas === item) {\n        initCanvas(item, config);\n        return context;\n      }\n\n      return null;\n    },\n    releaseContext: function releaseContext(context) {\n      var canvas = context.canvas;\n\n      if (!canvas[EXPANDO_KEY]) {\n        return;\n      }\n\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n\n        if (helpers$1.isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      helpers$1.each(initial.style || {}, function (value, key) {\n        canvas.style[key] = value;\n      }); // The canvas render size might have been changed (and thus the state stack discarded),\n      // we can't use save() and restore() to restore the initial state. So make sure that at\n      // least the canvas context is reset to the default state by setting the canvas width.\n      // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n      // eslint-disable-next-line no-self-assign\n\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n    },\n    addEventListener: function addEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        addResizeListener(canvas, listener, chart);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n      var proxies = expando.proxies || (expando.proxies = {});\n\n      var proxy = proxies[chart.id + '_' + type] = function (event) {\n        listener(fromNativeEvent(event, chart));\n      };\n\n      addListener(canvas, type, proxy);\n    },\n    removeEventListener: function removeEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        removeResizeListener(canvas);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || {};\n      var proxies = expando.proxies || {};\n      var proxy = proxies[chart.id + '_' + type];\n\n      if (!proxy) {\n        return;\n      }\n\n      removeListener(canvas, type, proxy);\n    }\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use EventTarget.addEventListener instead.\n   * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n   * @function Chart.helpers.addEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.addEvent = addListener;\n  /**\n   * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n   * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n   * @function Chart.helpers.removeEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.removeEvent = removeListener; // @TODO Make possible to select another platform at build time.\n\n  var implementation = platform_dom$2._enabled ? platform_dom$2 : platform_basic;\n  /**\n   * @namespace Chart.platform\n   * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n   * @since 2.4.0\n   */\n\n  var platform = helpers$1.extend({\n    /**\n     * @since 2.7.0\n     */\n    initialize: function initialize() {},\n\n    /**\n     * Called at chart construction time, returns a context2d instance implementing\n     * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n     * @param {*} item - The native item from which to acquire context (platform specific)\n     * @param {object} options - The chart options\n     * @returns {CanvasRenderingContext2D} context2d instance\n     */\n    acquireContext: function acquireContext() {},\n\n    /**\n     * Called at chart destruction time, releases any resources associated to the context\n     * previously returned by the acquireContext() method.\n     * @param {CanvasRenderingContext2D} context - The context2d instance\n     * @returns {boolean} true if the method succeeded, else false\n     */\n    releaseContext: function releaseContext() {},\n\n    /**\n     * Registers the specified listener on the given chart.\n     * @param {Chart} chart - Chart from which to listen for event\n     * @param {string} type - The ({@link IEvent}) type to listen for\n     * @param {function} listener - Receives a notification (an object that implements\n     * the {@link IEvent} interface) when an event of the specified type occurs.\n     */\n    addEventListener: function addEventListener() {},\n\n    /**\n     * Removes the specified listener previously registered with addEventListener.\n     * @param {Chart} chart - Chart from which to remove the listener\n     * @param {string} type - The ({@link IEvent}) type to remove\n     * @param {function} listener - The listener function to remove from the event target.\n     */\n    removeEventListener: function removeEventListener() {}\n  }, implementation);\n\n  core_defaults._set('global', {\n    plugins: {}\n  });\n  /**\n   * The plugin service singleton\n   * @namespace Chart.plugins\n   * @since 2.1.0\n   */\n\n\n  var core_plugins = {\n    /**\n     * Globally registered plugins.\n     * @private\n     */\n    _plugins: [],\n\n    /**\n     * This identifier is used to invalidate the descriptors cache attached to each chart\n     * when a global plugin is registered or unregistered. In this case, the cache ID is\n     * incremented and descriptors are regenerated during following API calls.\n     * @private\n     */\n    _cacheId: 0,\n\n    /**\n     * Registers the given plugin(s) if not already registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    register: function register(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        if (p.indexOf(plugin) === -1) {\n          p.push(plugin);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Unregisters the given plugin(s) only if registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    unregister: function unregister(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        var idx = p.indexOf(plugin);\n\n        if (idx !== -1) {\n          p.splice(idx, 1);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Remove all registered plugins.\n     * @since 2.1.5\n     */\n    clear: function clear() {\n      this._plugins = [];\n      this._cacheId++;\n    },\n\n    /**\n     * Returns the number of registered plugins?\n     * @returns {number}\n     * @since 2.1.5\n     */\n    count: function count() {\n      return this._plugins.length;\n    },\n\n    /**\n     * Returns all registered plugin instances.\n     * @returns {IPlugin[]} array of plugin objects.\n     * @since 2.1.5\n     */\n    getAll: function getAll() {\n      return this._plugins;\n    },\n\n    /**\n     * Calls enabled plugins for `chart` on the specified hook and with the given args.\n     * This method immediately returns as soon as a plugin explicitly returns false. The\n     * returned value can be used, for instance, to interrupt the current action.\n     * @param {Chart} chart - The chart instance for which plugins should be called.\n     * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n     * @param {Array} [args] - Extra arguments to apply to the hook call.\n     * @returns {boolean} false if any of the plugins return false, else returns true.\n     */\n    notify: function notify(chart, hook, args) {\n      var descriptors = this.descriptors(chart);\n      var ilen = descriptors.length;\n      var i, descriptor, plugin, params, method;\n\n      for (i = 0; i < ilen; ++i) {\n        descriptor = descriptors[i];\n        plugin = descriptor.plugin;\n        method = plugin[hook];\n\n        if (typeof method === 'function') {\n          params = [chart].concat(args || []);\n          params.push(descriptor.options);\n\n          if (method.apply(plugin, params) === false) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns descriptors of enabled plugins for the given chart.\n     * @returns {object[]} [{ plugin, options }]\n     * @private\n     */\n    descriptors: function descriptors(chart) {\n      var cache = chart.$plugins || (chart.$plugins = {});\n\n      if (cache.id === this._cacheId) {\n        return cache.descriptors;\n      }\n\n      var plugins = [];\n      var descriptors = [];\n      var config = chart && chart.config || {};\n      var options = config.options && config.options.plugins || {};\n\n      this._plugins.concat(config.plugins || []).forEach(function (plugin) {\n        var idx = plugins.indexOf(plugin);\n\n        if (idx !== -1) {\n          return;\n        }\n\n        var id = plugin.id;\n        var opts = options[id];\n\n        if (opts === false) {\n          return;\n        }\n\n        if (opts === true) {\n          opts = helpers$1.clone(core_defaults.global.plugins[id]);\n        }\n\n        plugins.push(plugin);\n        descriptors.push({\n          plugin: plugin,\n          options: opts || {}\n        });\n      });\n\n      cache.descriptors = descriptors;\n      cache.id = this._cacheId;\n      return descriptors;\n    },\n\n    /**\n     * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n     * but in some cases, this reference can be changed by the user when updating options.\n     * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n     * @private\n     */\n    _invalidate: function _invalidate(chart) {\n      delete chart.$plugins;\n    }\n  };\n  var core_scaleService = {\n    // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n    // use the new chart options to grab the correct scale\n    constructors: {},\n    // Use a registration function so that we can move to an ES6 map when we no longer need to support\n    // old browsers\n    // Scale config defaults\n    defaults: {},\n    registerScaleType: function registerScaleType(type, scaleConstructor, scaleDefaults) {\n      this.constructors[type] = scaleConstructor;\n      this.defaults[type] = helpers$1.clone(scaleDefaults);\n    },\n    getScaleConstructor: function getScaleConstructor(type) {\n      return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n    },\n    getScaleDefaults: function getScaleDefaults(type) {\n      // Return the scale defaults merged with the global settings so that we always use the latest ones\n      return this.defaults.hasOwnProperty(type) ? helpers$1.merge({}, [core_defaults.scale, this.defaults[type]]) : {};\n    },\n    updateScaleDefaults: function updateScaleDefaults(type, additions) {\n      var me = this;\n\n      if (me.defaults.hasOwnProperty(type)) {\n        me.defaults[type] = helpers$1.extend(me.defaults[type], additions);\n      }\n    },\n    addScalesToLayout: function addScalesToLayout(chart) {\n      // Adds each scale to the chart.boxes array to be sized accordingly\n      helpers$1.each(chart.scales, function (scale) {\n        // Set ILayoutItem parameters for backwards compatibility\n        scale.fullWidth = scale.options.fullWidth;\n        scale.position = scale.options.position;\n        scale.weight = scale.options.weight;\n        core_layouts.addBox(chart, scale);\n      });\n    }\n  };\n  var valueOrDefault$7 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    tooltips: {\n      enabled: true,\n      custom: null,\n      mode: 'nearest',\n      position: 'average',\n      intersect: true,\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      titleFontStyle: 'bold',\n      titleSpacing: 2,\n      titleMarginBottom: 6,\n      titleFontColor: '#fff',\n      titleAlign: 'left',\n      bodySpacing: 2,\n      bodyFontColor: '#fff',\n      bodyAlign: 'left',\n      footerFontStyle: 'bold',\n      footerSpacing: 2,\n      footerMarginTop: 6,\n      footerFontColor: '#fff',\n      footerAlign: 'left',\n      yPadding: 6,\n      xPadding: 6,\n      caretPadding: 2,\n      caretSize: 5,\n      cornerRadius: 6,\n      multiKeyBackground: '#fff',\n      displayColors: true,\n      borderColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      callbacks: {\n        // Args are: (tooltipItems, data)\n        beforeTitle: helpers$1.noop,\n        title: function title(tooltipItems, data) {\n          var title = '';\n          var labels = data.labels;\n          var labelCount = labels ? labels.length : 0;\n\n          if (tooltipItems.length > 0) {\n            var item = tooltipItems[0];\n\n            if (item.label) {\n              title = item.label;\n            } else if (item.xLabel) {\n              title = item.xLabel;\n            } else if (labelCount > 0 && item.index < labelCount) {\n              title = labels[item.index];\n            }\n          }\n\n          return title;\n        },\n        afterTitle: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeBody: helpers$1.noop,\n        // Args are: (tooltipItem, data)\n        beforeLabel: helpers$1.noop,\n        label: function label(tooltipItem, data) {\n          var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n          if (label) {\n            label += ': ';\n          }\n\n          if (!helpers$1.isNullOrUndef(tooltipItem.value)) {\n            label += tooltipItem.value;\n          } else {\n            label += tooltipItem.yLabel;\n          }\n\n          return label;\n        },\n        labelColor: function labelColor(tooltipItem, chart) {\n          var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n          var activeElement = meta.data[tooltipItem.index];\n          var view = activeElement._view;\n          return {\n            borderColor: view.borderColor,\n            backgroundColor: view.backgroundColor\n          };\n        },\n        labelTextColor: function labelTextColor() {\n          return this._options.bodyFontColor;\n        },\n        afterLabel: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        afterBody: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeFooter: helpers$1.noop,\n        footer: helpers$1.noop,\n        afterFooter: helpers$1.noop\n      }\n    }\n  });\n\n  var positioners = {\n    /**\n     * Average mode places the tooltip at the average position of the elements shown\n     * @function Chart.Tooltip.positioners.average\n     * @param elements {ChartElement[]} the elements being displayed in the tooltip\n     * @returns {object} tooltip position\n     */\n    average: function average(elements) {\n      if (!elements.length) {\n        return false;\n      }\n\n      var i, len;\n      var x = 0;\n      var y = 0;\n      var count = 0;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var pos = el.tooltipPosition();\n          x += pos.x;\n          y += pos.y;\n          ++count;\n        }\n      }\n\n      return {\n        x: x / count,\n        y: y / count\n      };\n    },\n\n    /**\n     * Gets the tooltip position nearest of the item nearest to the event position\n     * @function Chart.Tooltip.positioners.nearest\n     * @param elements {Chart.Element[]} the tooltip elements\n     * @param eventPosition {object} the position of the event in canvas coordinates\n     * @returns {object} the tooltip position\n     */\n    nearest: function nearest(elements, eventPosition) {\n      var x = eventPosition.x;\n      var y = eventPosition.y;\n      var minDistance = Number.POSITIVE_INFINITY;\n      var i, len, nearestElement;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var center = el.getCenterPoint();\n          var d = helpers$1.distanceBetweenPoints(eventPosition, center);\n\n          if (d < minDistance) {\n            minDistance = d;\n            nearestElement = el;\n          }\n        }\n      }\n\n      if (nearestElement) {\n        var tp = nearestElement.tooltipPosition();\n        x = tp.x;\n        y = tp.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }; // Helper to push or concat based on if the 2nd parameter is an array or not\n\n  function pushOrConcat(base, toPush) {\n    if (toPush) {\n      if (helpers$1.isArray(toPush)) {\n        // base = base.concat(toPush);\n        Array.prototype.push.apply(base, toPush);\n      } else {\n        base.push(toPush);\n      }\n    }\n\n    return base;\n  }\n  /**\n   * Returns array of strings split by newline\n   * @param {string} value - The value to split by newline.\n   * @returns {string[]} value if newline present - Returned from String split() method\n   * @function\n   */\n\n\n  function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n      return str.split('\\n');\n    }\n\n    return str;\n  }\n  /**\n   * Private helper to create a tooltip item model\n   * @param element - the chart element (point, arc, bar) to create the tooltip item for\n   * @return new tooltip item\n   */\n\n\n  function createTooltipItem(element) {\n    var xScale = element._xScale;\n    var yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\n    var index = element._index;\n    var datasetIndex = element._datasetIndex;\n\n    var controller = element._chart.getDatasetMeta(datasetIndex).controller;\n\n    var indexScale = controller._getIndexScale();\n\n    var valueScale = controller._getValueScale();\n\n    return {\n      xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n      yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n      label: indexScale ? '' + indexScale.getLabelForIndex(index, datasetIndex) : '',\n      value: valueScale ? '' + valueScale.getLabelForIndex(index, datasetIndex) : '',\n      index: index,\n      datasetIndex: datasetIndex,\n      x: element._model.x,\n      y: element._model.y\n    };\n  }\n  /**\n   * Helper to get the reset model for the tooltip\n   * @param tooltipOpts {object} the tooltip options\n   */\n\n\n  function getBaseModel(tooltipOpts) {\n    var globalDefaults = core_defaults.global;\n    return {\n      // Positioning\n      xPadding: tooltipOpts.xPadding,\n      yPadding: tooltipOpts.yPadding,\n      xAlign: tooltipOpts.xAlign,\n      yAlign: tooltipOpts.yAlign,\n      // Body\n      bodyFontColor: tooltipOpts.bodyFontColor,\n      _bodyFontFamily: valueOrDefault$7(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n      _bodyFontStyle: valueOrDefault$7(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n      _bodyAlign: tooltipOpts.bodyAlign,\n      bodyFontSize: valueOrDefault$7(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n      bodySpacing: tooltipOpts.bodySpacing,\n      // Title\n      titleFontColor: tooltipOpts.titleFontColor,\n      _titleFontFamily: valueOrDefault$7(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n      _titleFontStyle: valueOrDefault$7(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n      titleFontSize: valueOrDefault$7(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n      _titleAlign: tooltipOpts.titleAlign,\n      titleSpacing: tooltipOpts.titleSpacing,\n      titleMarginBottom: tooltipOpts.titleMarginBottom,\n      // Footer\n      footerFontColor: tooltipOpts.footerFontColor,\n      _footerFontFamily: valueOrDefault$7(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n      _footerFontStyle: valueOrDefault$7(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n      footerFontSize: valueOrDefault$7(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n      _footerAlign: tooltipOpts.footerAlign,\n      footerSpacing: tooltipOpts.footerSpacing,\n      footerMarginTop: tooltipOpts.footerMarginTop,\n      // Appearance\n      caretSize: tooltipOpts.caretSize,\n      cornerRadius: tooltipOpts.cornerRadius,\n      backgroundColor: tooltipOpts.backgroundColor,\n      opacity: 0,\n      legendColorBackground: tooltipOpts.multiKeyBackground,\n      displayColors: tooltipOpts.displayColors,\n      borderColor: tooltipOpts.borderColor,\n      borderWidth: tooltipOpts.borderWidth\n    };\n  }\n  /**\n   * Get the size of the tooltip\n   */\n\n\n  function getTooltipSize(tooltip, model) {\n    var ctx = tooltip._chart.ctx;\n    var height = model.yPadding * 2; // Tooltip Padding\n\n    var width = 0; // Count of all lines in the body\n\n    var body = model.body;\n    var combinedBodyLength = body.reduce(function (count, bodyItem) {\n      return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n    }, 0);\n    combinedBodyLength += model.beforeBody.length + model.afterBody.length;\n    var titleLineCount = model.title.length;\n    var footerLineCount = model.footer.length;\n    var titleFontSize = model.titleFontSize;\n    var bodyFontSize = model.bodyFontSize;\n    var footerFontSize = model.footerFontSize;\n    height += titleLineCount * titleFontSize; // Title Lines\n\n    height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\n    height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\n    height += combinedBodyLength * bodyFontSize; // Body Lines\n\n    height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\n    height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\n    height += footerLineCount * footerFontSize; // Footer Lines\n\n    height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n    // Title width\n\n    var widthPadding = 0;\n\n    var maxLineWidth = function maxLineWidth(line) {\n      width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n\n    ctx.font = helpers$1.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n    helpers$1.each(model.title, maxLineWidth); // Body width\n\n    ctx.font = helpers$1.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n    helpers$1.each(model.beforeBody.concat(model.afterBody), maxLineWidth); // Body lines may include some extra width due to the color box\n\n    widthPadding = model.displayColors ? bodyFontSize + 2 : 0;\n    helpers$1.each(body, function (bodyItem) {\n      helpers$1.each(bodyItem.before, maxLineWidth);\n      helpers$1.each(bodyItem.lines, maxLineWidth);\n      helpers$1.each(bodyItem.after, maxLineWidth);\n    }); // Reset back to 0\n\n    widthPadding = 0; // Footer width\n\n    ctx.font = helpers$1.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n    helpers$1.each(model.footer, maxLineWidth); // Add padding\n\n    width += 2 * model.xPadding;\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Helper to get the alignment of a tooltip given the size\n   */\n\n\n  function determineAlignment(tooltip, size) {\n    var model = tooltip._model;\n    var chart = tooltip._chart;\n    var chartArea = tooltip._chart.chartArea;\n    var xAlign = 'center';\n    var yAlign = 'center';\n\n    if (model.y < size.height) {\n      yAlign = 'top';\n    } else if (model.y > chart.height - size.height) {\n      yAlign = 'bottom';\n    }\n\n    var lf, rf; // functions to determine left, right alignment\n\n    var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\n    var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\n    var midX = (chartArea.left + chartArea.right) / 2;\n    var midY = (chartArea.top + chartArea.bottom) / 2;\n\n    if (yAlign === 'center') {\n      lf = function lf(x) {\n        return x <= midX;\n      };\n\n      rf = function rf(x) {\n        return x > midX;\n      };\n    } else {\n      lf = function lf(x) {\n        return x <= size.width / 2;\n      };\n\n      rf = function rf(x) {\n        return x >= chart.width - size.width / 2;\n      };\n    }\n\n    olf = function olf(x) {\n      return x + size.width + model.caretSize + model.caretPadding > chart.width;\n    };\n\n    orf = function orf(x) {\n      return x - size.width - model.caretSize - model.caretPadding < 0;\n    };\n\n    yf = function yf(y) {\n      return y <= midY ? 'top' : 'bottom';\n    };\n\n    if (lf(model.x)) {\n      xAlign = 'left'; // Is tooltip too wide and goes over the right side of the chart.?\n\n      if (olf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    } else if (rf(model.x)) {\n      xAlign = 'right'; // Is tooltip too wide and goes outside left edge of canvas?\n\n      if (orf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    }\n\n    var opts = tooltip._options;\n    return {\n      xAlign: opts.xAlign ? opts.xAlign : xAlign,\n      yAlign: opts.yAlign ? opts.yAlign : yAlign\n    };\n  }\n  /**\n   * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n   */\n\n\n  function getBackgroundPoint(vm, size, alignment, chart) {\n    // Background Position\n    var x = vm.x;\n    var y = vm.y;\n    var caretSize = vm.caretSize;\n    var caretPadding = vm.caretPadding;\n    var cornerRadius = vm.cornerRadius;\n    var xAlign = alignment.xAlign;\n    var yAlign = alignment.yAlign;\n    var paddingAndSize = caretSize + caretPadding;\n    var radiusAndPadding = cornerRadius + caretPadding;\n\n    if (xAlign === 'right') {\n      x -= size.width;\n    } else if (xAlign === 'center') {\n      x -= size.width / 2;\n\n      if (x + size.width > chart.width) {\n        x = chart.width - size.width;\n      }\n\n      if (x < 0) {\n        x = 0;\n      }\n    }\n\n    if (yAlign === 'top') {\n      y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n      y -= size.height + paddingAndSize;\n    } else {\n      y -= size.height / 2;\n    }\n\n    if (yAlign === 'center') {\n      if (xAlign === 'left') {\n        x += paddingAndSize;\n      } else if (xAlign === 'right') {\n        x -= paddingAndSize;\n      }\n    } else if (xAlign === 'left') {\n      x -= radiusAndPadding;\n    } else if (xAlign === 'right') {\n      x += radiusAndPadding;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n\n  function getAlignedX(vm, align) {\n    return align === 'center' ? vm.x + vm.width / 2 : align === 'right' ? vm.x + vm.width - vm.xPadding : vm.x + vm.xPadding;\n  }\n  /**\n   * Helper to build before and after body lines\n   */\n\n\n  function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n  }\n\n  var exports$3 = core_element.extend({\n    initialize: function initialize() {\n      this._model = getBaseModel(this._options);\n      this._lastActive = [];\n    },\n    // Get the title\n    // Args are: (tooltipItem, data)\n    getTitle: function getTitle() {\n      var me = this;\n      var opts = me._options;\n      var callbacks = opts.callbacks;\n      var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n      var title = callbacks.title.apply(me, arguments);\n      var afterTitle = callbacks.afterTitle.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    },\n    // Args are: (tooltipItem, data)\n    getBeforeBody: function getBeforeBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n    },\n    // Args are: (tooltipItem, data)\n    getBody: function getBody(tooltipItems, data) {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var bodyItems = [];\n      helpers$1.each(tooltipItems, function (tooltipItem) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        pushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n        pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n        pushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    },\n    // Args are: (tooltipItem, data)\n    getAfterBody: function getAfterBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n    },\n    // Get the footer and beforeFooter and afterFooter lines\n    // Args are: (tooltipItem, data)\n    getFooter: function getFooter() {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n      var footer = callbacks.footer.apply(me, arguments);\n      var afterFooter = callbacks.afterFooter.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    },\n    update: function update(changed) {\n      var me = this;\n      var opts = me._options; // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n      // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n      // which breaks any animations.\n\n      var existingModel = me._model;\n      var model = me._model = getBaseModel(opts);\n      var active = me._active;\n      var data = me._data; // In the case where active.length === 0 we need to keep these at existing values for good animations\n\n      var alignment = {\n        xAlign: existingModel.xAlign,\n        yAlign: existingModel.yAlign\n      };\n      var backgroundPoint = {\n        x: existingModel.x,\n        y: existingModel.y\n      };\n      var tooltipSize = {\n        width: existingModel.width,\n        height: existingModel.height\n      };\n      var tooltipPosition = {\n        x: existingModel.caretX,\n        y: existingModel.caretY\n      };\n      var i, len;\n\n      if (active.length) {\n        model.opacity = 1;\n        var labelColors = [];\n        var labelTextColors = [];\n        tooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n        var tooltipItems = [];\n\n        for (i = 0, len = active.length; i < len; ++i) {\n          tooltipItems.push(createTooltipItem(active[i]));\n        } // If the user provided a filter function, use it to modify the tooltip items\n\n\n        if (opts.filter) {\n          tooltipItems = tooltipItems.filter(function (a) {\n            return opts.filter(a, data);\n          });\n        } // If the user provided a sorting function, use it to modify the tooltip items\n\n\n        if (opts.itemSort) {\n          tooltipItems = tooltipItems.sort(function (a, b) {\n            return opts.itemSort(a, b, data);\n          });\n        } // Determine colors for boxes\n\n\n        helpers$1.each(tooltipItems, function (tooltipItem) {\n          labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n          labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n        }); // Build the Text Lines\n\n        model.title = me.getTitle(tooltipItems, data);\n        model.beforeBody = me.getBeforeBody(tooltipItems, data);\n        model.body = me.getBody(tooltipItems, data);\n        model.afterBody = me.getAfterBody(tooltipItems, data);\n        model.footer = me.getFooter(tooltipItems, data); // Initial positioning and colors\n\n        model.x = tooltipPosition.x;\n        model.y = tooltipPosition.y;\n        model.caretPadding = opts.caretPadding;\n        model.labelColors = labelColors;\n        model.labelTextColors = labelTextColors; // data points\n\n        model.dataPoints = tooltipItems; // We need to determine alignment of the tooltip\n\n        tooltipSize = getTooltipSize(this, model);\n        alignment = determineAlignment(this, tooltipSize); // Final Size and Position\n\n        backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n      } else {\n        model.opacity = 0;\n      }\n\n      model.xAlign = alignment.xAlign;\n      model.yAlign = alignment.yAlign;\n      model.x = backgroundPoint.x;\n      model.y = backgroundPoint.y;\n      model.width = tooltipSize.width;\n      model.height = tooltipSize.height; // Point where the caret on the tooltip points to\n\n      model.caretX = tooltipPosition.x;\n      model.caretY = tooltipPosition.y;\n      me._model = model;\n\n      if (changed && opts.custom) {\n        opts.custom.call(me, model);\n      }\n\n      return me;\n    },\n    drawCaret: function drawCaret(tooltipPoint, size) {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    },\n    getCaretPosition: function getCaretPosition(tooltipPoint, size, vm) {\n      var x1, x2, x3, y1, y2, y3;\n      var caretSize = vm.caretSize;\n      var cornerRadius = vm.cornerRadius;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var ptX = tooltipPoint.x;\n      var ptY = tooltipPoint.y;\n      var width = size.width;\n      var height = size.height;\n\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          x3 = x1;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          x3 = x1;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + cornerRadius + caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - cornerRadius - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          x2 = vm.caretX;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        }\n\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          y3 = y1;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          y3 = y1; // invert drawing order\n\n          var tmp = x3;\n          x3 = x1;\n          x1 = tmp;\n        }\n      }\n\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    },\n    drawTitle: function drawTitle(pt, vm, ctx) {\n      var title = vm.title;\n\n      if (title.length) {\n        pt.x = getAlignedX(vm, vm._titleAlign);\n        ctx.textAlign = vm._titleAlign;\n        ctx.textBaseline = 'top';\n        var titleFontSize = vm.titleFontSize;\n        var titleSpacing = vm.titleSpacing;\n        ctx.fillStyle = vm.titleFontColor;\n        ctx.font = helpers$1.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n        var i, len;\n\n        for (i = 0, len = title.length; i < len; ++i) {\n          ctx.fillText(title[i], pt.x, pt.y);\n          pt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n          if (i + 1 === title.length) {\n            pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n          }\n        }\n      }\n    },\n    drawBody: function drawBody(pt, vm, ctx) {\n      var bodyFontSize = vm.bodyFontSize;\n      var bodySpacing = vm.bodySpacing;\n      var bodyAlign = vm._bodyAlign;\n      var body = vm.body;\n      var drawColorBoxes = vm.displayColors;\n      var labelColors = vm.labelColors;\n      var xLinePadding = 0;\n      var colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\n      var textColor;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'top';\n      ctx.font = helpers$1.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n      pt.x = getAlignedX(vm, bodyAlign); // Before Body\n\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, pt.x + xLinePadding, pt.y);\n        pt.y += bodyFontSize + bodySpacing;\n      }; // Before body lines\n\n\n      ctx.fillStyle = vm.bodyFontColor;\n      helpers$1.each(vm.beforeBody, fillLineOfText);\n      xLinePadding = drawColorBoxes && bodyAlign !== 'right' ? bodyAlign === 'center' ? bodyFontSize / 2 + 1 : bodyFontSize + 2 : 0; // Draw body lines now\n\n      helpers$1.each(body, function (bodyItem, i) {\n        textColor = vm.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        helpers$1.each(bodyItem.before, fillLineOfText);\n        helpers$1.each(bodyItem.lines, function (line) {\n          // Draw Legend-like boxes if needed\n          if (drawColorBoxes) {\n            // Fill a white rect so that colours merge nicely if the opacity is < 1\n            ctx.fillStyle = vm.legendColorBackground;\n            ctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Border\n\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = labelColors[i].borderColor;\n            ctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Inner square\n\n            ctx.fillStyle = labelColors[i].backgroundColor;\n            ctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n            ctx.fillStyle = textColor;\n          }\n\n          fillLineOfText(line);\n        });\n        helpers$1.each(bodyItem.after, fillLineOfText);\n      }); // Reset back to 0 for after body\n\n      xLinePadding = 0; // After body lines\n\n      helpers$1.each(vm.afterBody, fillLineOfText);\n      pt.y -= bodySpacing; // Remove last body spacing\n    },\n    drawFooter: function drawFooter(pt, vm, ctx) {\n      var footer = vm.footer;\n\n      if (footer.length) {\n        pt.x = getAlignedX(vm, vm._footerAlign);\n        pt.y += vm.footerMarginTop;\n        ctx.textAlign = vm._footerAlign;\n        ctx.textBaseline = 'top';\n        ctx.fillStyle = vm.footerFontColor;\n        ctx.font = helpers$1.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n        helpers$1.each(footer, function (line) {\n          ctx.fillText(line, pt.x, pt.y);\n          pt.y += vm.footerFontSize + vm.footerSpacing;\n        });\n      }\n    },\n    drawBackground: function drawBackground(pt, vm, ctx, tooltipSize) {\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.strokeStyle = vm.borderColor;\n      ctx.lineWidth = vm.borderWidth;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var x = pt.x;\n      var y = pt.y;\n      var width = tooltipSize.width;\n      var height = tooltipSize.height;\n      var radius = vm.cornerRadius;\n      ctx.beginPath();\n      ctx.moveTo(x + radius, y);\n\n      if (yAlign === 'top') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n      ctx.closePath();\n      ctx.fill();\n\n      if (vm.borderWidth > 0) {\n        ctx.stroke();\n      }\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n\n      if (vm.opacity === 0) {\n        return;\n      }\n\n      var tooltipSize = {\n        width: vm.width,\n        height: vm.height\n      };\n      var pt = {\n        x: vm.x,\n        y: vm.y\n      }; // IE11/Edge does not like very small opacities, so snap to 0\n\n      var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity; // Truthy/falsey value for empty tooltip\n\n      var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n      if (this._options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity; // Draw Background\n\n        this.drawBackground(pt, vm, ctx, tooltipSize); // Draw Title, Body, and Footer\n\n        pt.y += vm.yPadding; // Titles\n\n        this.drawTitle(pt, vm, ctx); // Body\n\n        this.drawBody(pt, vm, ctx); // Footer\n\n        this.drawFooter(pt, vm, ctx);\n        ctx.restore();\n      }\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     * @returns {boolean} true if the tooltip changed\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me._options;\n      var changed = false;\n      me._lastActive = me._lastActive || []; // Find Active Elements for tooltips\n\n      if (e.type === 'mouseout') {\n        me._active = [];\n      } else {\n        me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n      } // Remember Last Actives\n\n\n      changed = !helpers$1.arrayEquals(me._active, me._lastActive); // Only handle target event on tooltip change\n\n      if (changed) {\n        me._lastActive = me._active;\n\n        if (options.enabled || options.custom) {\n          me._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          me.update(true);\n          me.pivot();\n        }\n      }\n\n      return changed;\n    }\n  });\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n\n  var positioners_1 = positioners;\n  var core_tooltip = exports$3;\n  core_tooltip.positioners = positioners_1;\n  var valueOrDefault$8 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    elements: {},\n    events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n    hover: {\n      onHover: null,\n      mode: 'nearest',\n      intersect: true,\n      animationDuration: 400\n    },\n    onClick: null,\n    maintainAspectRatio: true,\n    responsive: true,\n    responsiveAnimationDuration: 0\n  });\n  /**\n   * Recursively merge the given config objects representing the `scales` option\n   * by incorporating scale defaults in `xAxes` and `yAxes` array items, then\n   * returns a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeScaleConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        if (key === 'xAxes' || key === 'yAxes') {\n          var slen = source[key].length;\n          var i, type, scale;\n\n          if (!target[key]) {\n            target[key] = [];\n          }\n\n          for (i = 0; i < slen; ++i) {\n            scale = source[key][i];\n            type = valueOrDefault$8(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n            if (i >= target[key].length) {\n              target[key].push({});\n            }\n\n            if (!target[key][i].type || scale.type && scale.type !== target[key][i].type) {\n              // new/untyped scale or type changed: let's apply the new defaults\n              // then merge source scale to correctly overwrite the defaults.\n              helpers$1.merge(target[key][i], [core_scaleService.getScaleDefaults(type), scale]);\n            } else {\n              // scales type are the same\n              helpers$1.merge(target[key][i], scale);\n            }\n          }\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n  /**\n   * Recursively merge the given config objects as the root options by handling\n   * default scale options for the `scales` and `scale` properties, then returns\n   * a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        var tval = target[key] || {};\n        var sval = source[key];\n\n        if (key === 'scales') {\n          // scale config merging is complex. Add our own function here for that\n          target[key] = mergeScaleConfig(tval, sval);\n        } else if (key === 'scale') {\n          // used in polar area & radar charts since there is only one scale\n          target[key] = helpers$1.merge(tval, [core_scaleService.getScaleDefaults(sval.type), sval]);\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n\n  function initConfig(config) {\n    config = config || {}; // Do NOT use mergeConfig for the data object because this method merges arrays\n    // and so would change references to labels and datasets, preventing data updates.\n\n    var data = config.data = config.data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    config.options = mergeConfig(core_defaults.global, core_defaults[config.type], config.options || {});\n    return config;\n  }\n\n  function updateConfig(chart) {\n    var newOptions = chart.options;\n    helpers$1.each(chart.scales, function (scale) {\n      core_layouts.removeBox(chart, scale);\n    });\n    newOptions = mergeConfig(core_defaults.global, core_defaults[chart.config.type], newOptions);\n    chart.options = chart.config.options = newOptions;\n    chart.ensureScalesHaveIDs();\n    chart.buildOrUpdateScales(); // Tooltip\n\n    chart.tooltip._options = newOptions.tooltips;\n    chart.tooltip.initialize();\n  }\n\n  function positionIsHorizontal(position) {\n    return position === 'top' || position === 'bottom';\n  }\n\n  var Chart = function Chart(item, config) {\n    this.construct(item, config);\n    return this;\n  };\n\n  helpers$1.extend(Chart.prototype,\n  /** @lends Chart */\n  {\n    /**\n     * @private\n     */\n    construct: function construct(item, config) {\n      var me = this;\n      config = initConfig(config);\n      var context = platform.acquireContext(item, config);\n      var canvas = context && context.canvas;\n      var height = canvas && canvas.height;\n      var width = canvas && canvas.width;\n      me.id = helpers$1.uid();\n      me.ctx = context;\n      me.canvas = canvas;\n      me.config = config;\n      me.width = width;\n      me.height = height;\n      me.aspectRatio = height ? width / height : null;\n      me.options = config.options;\n      me._bufferedRender = false;\n      /**\n       * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n       * the \"instance\" still need to be defined since it might be called from plugins.\n       * @prop Chart#chart\n       * @deprecated since version 2.6.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      me.chart = me;\n      me.controller = me; // chart.chart.controller #inception\n      // Add the chart instance to the global namespace\n\n      Chart.instances[me.id] = me; // Define alias to the config data: `chart.data === chart.config.data`\n\n      Object.defineProperty(me, 'data', {\n        get: function get() {\n          return me.config.data;\n        },\n        set: function set(value) {\n          me.config.data = value;\n        }\n      });\n\n      if (!context || !canvas) {\n        // The given item is not a compatible context2d element, let's return before finalizing\n        // the chart initialization but after setting basic chart / controller properties that\n        // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n        // https://github.com/chartjs/Chart.js/issues/2807\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n\n      me.initialize();\n      me.update();\n    },\n\n    /**\n     * @private\n     */\n    initialize: function initialize() {\n      var me = this; // Before init plugin notification\n\n      core_plugins.notify(me, 'beforeInit');\n      helpers$1.retinaScale(me, me.options.devicePixelRatio);\n      me.bindEvents();\n\n      if (me.options.responsive) {\n        // Initial resize before chart draws (must be silent to preserve initial animations).\n        me.resize(true);\n      } // Make sure scales have IDs and are built before we build any controllers.\n\n\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      me.initToolTip(); // After init plugin notification\n\n      core_plugins.notify(me, 'afterInit');\n      return me;\n    },\n    clear: function clear() {\n      helpers$1.canvas.clear(this);\n      return this;\n    },\n    stop: function stop() {\n      // Stops any current animation loop occurring\n      core_animations.cancelAnimation(this);\n      return this;\n    },\n    resize: function resize(silent) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio || null; // the canvas render width and height will be casted to integers so make sure that\n      // the canvas display style uses the same integer values to avoid blurring effect.\n      // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\n      var newWidth = Math.max(0, Math.floor(helpers$1.getMaximumWidth(canvas)));\n      var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers$1.getMaximumHeight(canvas)));\n\n      if (me.width === newWidth && me.height === newHeight) {\n        return;\n      }\n\n      canvas.width = me.width = newWidth;\n      canvas.height = me.height = newHeight;\n      canvas.style.width = newWidth + 'px';\n      canvas.style.height = newHeight + 'px';\n      helpers$1.retinaScale(me, options.devicePixelRatio);\n\n      if (!silent) {\n        // Notify any plugins about the resize\n        var newSize = {\n          width: newWidth,\n          height: newHeight\n        };\n        core_plugins.notify(me, 'resize', [newSize]); // Notify of resize\n\n        if (options.onResize) {\n          options.onResize(me, newSize);\n        }\n\n        me.stop();\n        me.update({\n          duration: options.responsiveAnimationDuration\n        });\n      }\n    },\n    ensureScalesHaveIDs: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      var scaleOptions = options.scale;\n      helpers$1.each(scalesOptions.xAxes, function (xAxisOptions, index) {\n        xAxisOptions.id = xAxisOptions.id || 'x-axis-' + index;\n      });\n      helpers$1.each(scalesOptions.yAxes, function (yAxisOptions, index) {\n        yAxisOptions.id = yAxisOptions.id || 'y-axis-' + index;\n      });\n\n      if (scaleOptions) {\n        scaleOptions.id = scaleOptions.id || 'scale';\n      }\n    },\n\n    /**\n     * Builds a map of scale ID to scale object for future lookup.\n     */\n    buildOrUpdateScales: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scales = me.scales || {};\n      var items = [];\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n\n      if (options.scales) {\n        items = items.concat((options.scales.xAxes || []).map(function (xAxisOptions) {\n          return {\n            options: xAxisOptions,\n            dtype: 'category',\n            dposition: 'bottom'\n          };\n        }), (options.scales.yAxes || []).map(function (yAxisOptions) {\n          return {\n            options: yAxisOptions,\n            dtype: 'linear',\n            dposition: 'left'\n          };\n        }));\n      }\n\n      if (options.scale) {\n        items.push({\n          options: options.scale,\n          dtype: 'radialLinear',\n          isDefault: true,\n          dposition: 'chartArea'\n        });\n      }\n\n      helpers$1.each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var scaleType = valueOrDefault$8(scaleOptions.type, item.dtype);\n\n        if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n          scale.options = scaleOptions;\n          scale.ctx = me.ctx;\n          scale.chart = me;\n        } else {\n          var scaleClass = core_scaleService.getScaleConstructor(scaleType);\n\n          if (!scaleClass) {\n            return;\n          }\n\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            options: scaleOptions,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.mergeTicksOptions(); // TODO(SB): I think we should be able to remove this custom case (options.scale)\n        // and consider it as a regular scale part of the \"scales\"\" map only! This would\n        // make the logic easier and remove some useless? custom code.\n\n        if (item.isDefault) {\n          me.scale = scale;\n        }\n      }); // clear up discarded scales\n\n      helpers$1.each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      me.scales = scales;\n      core_scaleService.addScalesToLayout(this);\n    },\n    buildOrUpdateControllers: function buildOrUpdateControllers() {\n      var me = this;\n      var newControllers = [];\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        var meta = me.getDatasetMeta(datasetIndex);\n        var type = dataset.type || me.config.type;\n\n        if (meta.type && meta.type !== type) {\n          me.destroyDatasetMeta(datasetIndex);\n          meta = me.getDatasetMeta(datasetIndex);\n        }\n\n        meta.type = type;\n\n        if (meta.controller) {\n          meta.controller.updateIndex(datasetIndex);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = controllers[meta.type];\n\n          if (ControllerClass === undefined) {\n            throw new Error('\"' + meta.type + '\" is not a chart type.');\n          }\n\n          meta.controller = new ControllerClass(me, datasetIndex);\n          newControllers.push(meta.controller);\n        }\n      }, me);\n      return newControllers;\n    },\n\n    /**\n     * Reset the elements of all datasets\n     * @private\n     */\n    resetElements: function resetElements() {\n      var me = this;\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    },\n\n    /**\n    * Resets the chart back to it's state before the initial animation\n    */\n    reset: function reset() {\n      this.resetElements();\n      this.tooltip.initialize();\n    },\n    update: function update(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      updateConfig(me); // plugins options references might have change, let's invalidate the cache\n      // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\n      core_plugins._invalidate(me);\n\n      if (core_plugins.notify(me, 'beforeUpdate') === false) {\n        return;\n      } // In case the entire data object changed\n\n\n      me.tooltip._data = me.data; // Make sure dataset controllers are updated and new controllers are reset\n\n      var newControllers = me.buildOrUpdateControllers(); // Make sure all dataset controllers have correct meta data counts\n\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n      }, me);\n      me.updateLayout(); // Can only reset the new controllers after the scales have been updated\n\n      if (me.options.animation && me.options.animation.duration) {\n        helpers$1.each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      me.updateDatasets(); // Need to reset tooltip in case it is displayed with elements that are removed\n      // after update.\n\n      me.tooltip.initialize(); // Last active contains items that were previously in the tooltip.\n      // When we reset the tooltip, we need to clear it\n\n      me.lastActive = []; // Do this before render so that any plugins that need final scale updates can use it\n\n      core_plugins.notify(me, 'afterUpdate');\n\n      if (me._bufferedRender) {\n        me._bufferedRequest = {\n          duration: config.duration,\n          easing: config.easing,\n          lazy: config.lazy\n        };\n      } else {\n        me.render(config);\n      }\n    },\n\n    /**\n     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n     * hook, in which case, plugins will not be called on `afterLayout`.\n     * @private\n     */\n    updateLayout: function updateLayout() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeLayout') === false) {\n        return;\n      }\n\n      core_layouts.update(this, this.width, this.height);\n      /**\n       * Provided for backward compatibility, use `afterLayout` instead.\n       * @method IPlugin#afterScaleUpdate\n       * @deprecated since version 2.5.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      core_plugins.notify(me, 'afterScaleUpdate');\n      core_plugins.notify(me, 'afterLayout');\n    },\n\n    /**\n     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n     * @private\n     */\n    updateDatasets: function updateDatasets() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.updateDataset(i);\n      }\n\n      core_plugins.notify(me, 'afterDatasetsUpdate');\n    },\n\n    /**\n     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n     * @private\n     */\n    updateDataset: function updateDataset(index) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n        return;\n      }\n\n      meta.controller.update();\n      core_plugins.notify(me, 'afterDatasetUpdate', [args]);\n    },\n    render: function render(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      var animationOptions = me.options.animation;\n      var duration = valueOrDefault$8(config.duration, animationOptions && animationOptions.duration);\n      var lazy = config.lazy;\n\n      if (core_plugins.notify(me, 'beforeRender') === false) {\n        return;\n      }\n\n      var onComplete = function onComplete(animation) {\n        core_plugins.notify(me, 'afterRender');\n        helpers$1.callback(animationOptions && animationOptions.onComplete, [animation], me);\n      };\n\n      if (animationOptions && duration) {\n        var animation = new core_animation({\n          numSteps: duration / 16.66,\n          // 60 fps\n          easing: config.easing || animationOptions.easing,\n          render: function render(chart, animationObject) {\n            var easingFunction = helpers$1.easing.effects[animationObject.easing];\n            var currentStep = animationObject.currentStep;\n            var stepDecimal = currentStep / animationObject.numSteps;\n            chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n          },\n          onAnimationProgress: animationOptions.onProgress,\n          onAnimationComplete: onComplete\n        });\n        core_animations.addAnimation(me, animation, duration, lazy);\n      } else {\n        me.draw(); // See https://github.com/chartjs/Chart.js/issues/3781\n\n        onComplete(new core_animation({\n          numSteps: 0,\n          chart: me\n        }));\n      }\n\n      return me;\n    },\n    draw: function draw(easingValue) {\n      var me = this;\n      me.clear();\n\n      if (helpers$1.isNullOrUndef(easingValue)) {\n        easingValue = 1;\n      }\n\n      me.transition(easingValue);\n\n      if (me.width <= 0 || me.height <= 0) {\n        return;\n      }\n\n      if (core_plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n        return;\n      } // Draw all the scales\n\n\n      helpers$1.each(me.boxes, function (box) {\n        box.draw(me.chartArea);\n      }, me);\n      me.drawDatasets(easingValue);\n\n      me._drawTooltip(easingValue);\n\n      core_plugins.notify(me, 'afterDraw', [easingValue]);\n    },\n\n    /**\n     * @private\n     */\n    transition: function transition(easingValue) {\n      var me = this;\n\n      for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n        if (me.isDatasetVisible(i)) {\n          me.getDatasetMeta(i).controller.transition(easingValue);\n        }\n      }\n\n      me.tooltip.transition(easingValue);\n    },\n\n    /**\n     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n     * @private\n     */\n    drawDatasets: function drawDatasets(easingValue) {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n        return;\n      } // Draw datasets reversed to support proper line stacking\n\n\n      for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n        if (me.isDatasetVisible(i)) {\n          me.drawDataset(i, easingValue);\n        }\n      }\n\n      core_plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n    },\n\n    /**\n     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n     * @private\n     */\n    drawDataset: function drawDataset(index, easingValue) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n        return;\n      }\n\n      meta.controller.draw(easingValue);\n      core_plugins.notify(me, 'afterDatasetDraw', [args]);\n    },\n\n    /**\n     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n     * @private\n     */\n    _drawTooltip: function _drawTooltip(easingValue) {\n      var me = this;\n      var tooltip = me.tooltip;\n      var args = {\n        tooltip: tooltip,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n        return;\n      }\n\n      tooltip.draw();\n      core_plugins.notify(me, 'afterTooltipDraw', [args]);\n    },\n\n    /**\n     * Get the single element that was clicked on\n     * @return An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n     */\n    getElementAtEvent: function getElementAtEvent(e) {\n      return core_interaction.modes.single(this, e);\n    },\n    getElementsAtEvent: function getElementsAtEvent(e) {\n      return core_interaction.modes.label(this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtXAxis: function getElementsAtXAxis(e) {\n      return core_interaction.modes['x-axis'](this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtEventForMode: function getElementsAtEventForMode(e, mode, options) {\n      var method = core_interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options);\n      }\n\n      return [];\n    },\n    getDatasetAtEvent: function getDatasetAtEvent(e) {\n      return core_interaction.modes.dataset(this, e, {\n        intersect: true\n      });\n    },\n    getDatasetMeta: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n\n      if (!dataset._meta) {\n        dataset._meta = {};\n      }\n\n      var meta = dataset._meta[me.id];\n\n      if (!meta) {\n        meta = dataset._meta[me.id] = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          // See isDatasetVisible() comment\n          xAxisID: null,\n          yAxisID: null\n        };\n      }\n\n      return meta;\n    },\n    getVisibleDatasetCount: function getVisibleDatasetCount() {\n      var count = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        if (this.isDatasetVisible(i)) {\n          count++;\n        }\n      }\n\n      return count;\n    },\n    isDatasetVisible: function isDatasetVisible(datasetIndex) {\n      var meta = this.getDatasetMeta(datasetIndex); // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n      // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n    },\n    generateLegend: function generateLegend() {\n      return this.options.legendCallback(this);\n    },\n\n    /**\n     * @private\n     */\n    destroyDatasetMeta: function destroyDatasetMeta(datasetIndex) {\n      var id = this.id;\n      var dataset = this.data.datasets[datasetIndex];\n      var meta = dataset._meta && dataset._meta[id];\n\n      if (meta) {\n        meta.controller.destroy();\n        delete dataset._meta[id];\n      }\n    },\n    destroy: function destroy() {\n      var me = this;\n      var canvas = me.canvas;\n      var i, ilen;\n      me.stop(); // dataset controllers need to cleanup associated data\n\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.destroyDatasetMeta(i);\n      }\n\n      if (canvas) {\n        me.unbindEvents();\n        helpers$1.canvas.clear(me);\n        platform.releaseContext(me.ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n\n      core_plugins.notify(me, 'destroy');\n      delete Chart.instances[me.id];\n    },\n    toBase64Image: function toBase64Image() {\n      return this.canvas.toDataURL.apply(this.canvas, arguments);\n    },\n    initToolTip: function initToolTip() {\n      var me = this;\n      me.tooltip = new core_tooltip({\n        _chart: me,\n        _chartInstance: me,\n        // deprecated, backward compatibility\n        _data: me.data,\n        _options: me.options.tooltips\n      }, me);\n    },\n\n    /**\n     * @private\n     */\n    bindEvents: function bindEvents() {\n      var me = this;\n      var listeners = me._listeners = {};\n\n      var listener = function listener() {\n        me.eventHandler.apply(me, arguments);\n      };\n\n      helpers$1.each(me.options.events, function (type) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      }); // Elements used to detect size change should not be injected for non responsive charts.\n      // See https://github.com/chartjs/Chart.js/issues/2210\n\n      if (me.options.responsive) {\n        listener = function listener() {\n          me.resize();\n        };\n\n        platform.addEventListener(me, 'resize', listener);\n        listeners.resize = listener;\n      }\n    },\n\n    /**\n     * @private\n     */\n    unbindEvents: function unbindEvents() {\n      var me = this;\n      var listeners = me._listeners;\n\n      if (!listeners) {\n        return;\n      }\n\n      delete me._listeners;\n      helpers$1.each(listeners, function (listener, type) {\n        platform.removeEventListener(me, type, listener);\n      });\n    },\n    updateHoverStyle: function updateHoverStyle(elements, mode, enabled) {\n      var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n      var element, i, ilen;\n\n      for (i = 0, ilen = elements.length; i < ilen; ++i) {\n        element = elements[i];\n\n        if (element) {\n          this.getDatasetMeta(element._datasetIndex).controller[method](element);\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    eventHandler: function eventHandler(e) {\n      var me = this;\n      var tooltip = me.tooltip;\n\n      if (core_plugins.notify(me, 'beforeEvent', [e]) === false) {\n        return;\n      } // Buffer any update calls so that renders do not occur\n\n\n      me._bufferedRender = true;\n      me._bufferedRequest = null;\n      var changed = me.handleEvent(e); // for smooth tooltip animations issue #4989\n      // the tooltip should be the source of change\n      // Animation check workaround:\n      // tooltip._start will be null when tooltip isn't animating\n\n      if (tooltip) {\n        changed = tooltip._start ? tooltip.handleEvent(e) : changed | tooltip.handleEvent(e);\n      }\n\n      core_plugins.notify(me, 'afterEvent', [e]);\n      var bufferedRequest = me._bufferedRequest;\n\n      if (bufferedRequest) {\n        // If we have an update that was triggered, we need to do a normal render\n        me.render(bufferedRequest);\n      } else if (changed && !me.animating) {\n        // If entering, leaving, or changing elements, animate the change via pivot\n        me.stop(); // We only need to render at this point. Updating will cause scales to be\n        // recomputed generating flicker & using more memory than necessary.\n\n        me.render({\n          duration: me.options.hover.animationDuration,\n          lazy: true\n        });\n      }\n\n      me._bufferedRender = false;\n      me._bufferedRequest = null;\n      return me;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event the event to handle\n     * @return {boolean} true if the chart needs to re-render\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me.options || {};\n      var hoverOptions = options.hover;\n      var changed = false;\n      me.lastActive = me.lastActive || []; // Find Active Elements for hover and tooltips\n\n      if (e.type === 'mouseout') {\n        me.active = [];\n      } else {\n        me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n      } // Invoke onHover hook\n      // Need to call with native event here to not break backwards compatibility\n\n\n      helpers$1.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n      if (e.type === 'mouseup' || e.type === 'click') {\n        if (options.onClick) {\n          // Use e.native here for backwards compatibility\n          options.onClick.call(me, e.native, me.active);\n        }\n      } // Remove styling for last active (even if it may still be active)\n\n\n      if (me.lastActive.length) {\n        me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n      } // Built in hover styling\n\n\n      if (me.active.length && hoverOptions.mode) {\n        me.updateHoverStyle(me.active, hoverOptions.mode, true);\n      }\n\n      changed = !helpers$1.arrayEquals(me.active, me.lastActive); // Remember Last Actives\n\n      me.lastActive = me.active;\n      return changed;\n    }\n  });\n  /**\n   * NOTE(SB) We actually don't use this container anymore but we need to keep it\n   * for backward compatibility. Though, it can still be useful for plugins that\n   * would need to work on multiple charts?!\n   */\n\n  Chart.instances = {};\n  var core_controller = Chart; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart instead.\n   * @class Chart.Controller\n   * @deprecated since version 2.6\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.Controller = Chart;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.types = {};\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.configMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.configMerge = mergeConfig;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.scaleMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.scaleMerge = mergeScaleConfig;\n\n  var core_helpers = function core_helpers() {\n    // -- Basic js utility methods\n    helpers$1.where = function (collection, filterCallback) {\n      if (helpers$1.isArray(collection) && Array.prototype.filter) {\n        return collection.filter(filterCallback);\n      }\n\n      var filtered = [];\n      helpers$1.each(collection, function (item) {\n        if (filterCallback(item)) {\n          filtered.push(item);\n        }\n      });\n      return filtered;\n    };\n\n    helpers$1.findIndex = Array.prototype.findIndex ? function (array, callback, scope) {\n      return array.findIndex(callback, scope);\n    } : function (array, callback, scope) {\n      scope = scope === undefined ? array : scope;\n\n      for (var i = 0, ilen = array.length; i < ilen; ++i) {\n        if (callback.call(scope, array[i], i, array)) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n\n    helpers$1.findNextWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to start of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = -1;\n      }\n\n      for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    };\n\n    helpers$1.findPreviousWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to end of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = arrayToSearch.length;\n      }\n\n      for (var i = startIndex - 1; i >= 0; i--) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    }; // -- Math methods\n\n\n    helpers$1.isNumber = function (n) {\n      return !isNaN(parseFloat(n)) && isFinite(n);\n    };\n\n    helpers$1.almostEquals = function (x, y, epsilon) {\n      return Math.abs(x - y) < epsilon;\n    };\n\n    helpers$1.almostWhole = function (x, epsilon) {\n      var rounded = Math.round(x);\n      return rounded - epsilon < x && rounded + epsilon > x;\n    };\n\n    helpers$1.max = function (array) {\n      return array.reduce(function (max, value) {\n        if (!isNaN(value)) {\n          return Math.max(max, value);\n        }\n\n        return max;\n      }, Number.NEGATIVE_INFINITY);\n    };\n\n    helpers$1.min = function (array) {\n      return array.reduce(function (min, value) {\n        if (!isNaN(value)) {\n          return Math.min(min, value);\n        }\n\n        return min;\n      }, Number.POSITIVE_INFINITY);\n    };\n\n    helpers$1.sign = Math.sign ? function (x) {\n      return Math.sign(x);\n    } : function (x) {\n      x = +x; // convert to a number\n\n      if (x === 0 || isNaN(x)) {\n        return x;\n      }\n\n      return x > 0 ? 1 : -1;\n    };\n    helpers$1.log10 = Math.log10 ? function (x) {\n      return Math.log10(x);\n    } : function (x) {\n      var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n      // Check for whole powers of 10,\n      // which due to floating point rounding error should be corrected.\n\n      var powerOf10 = Math.round(exponent);\n      var isPowerOf10 = x === Math.pow(10, powerOf10);\n      return isPowerOf10 ? powerOf10 : exponent;\n    };\n\n    helpers$1.toRadians = function (degrees) {\n      return degrees * (Math.PI / 180);\n    };\n\n    helpers$1.toDegrees = function (radians) {\n      return radians * (180 / Math.PI);\n    };\n    /**\n     * Returns the number of decimal places\n     * i.e. the number of digits after the decimal point, of the value of this Number.\n     * @param {number} x - A number.\n     * @returns {number} The number of decimal places.\n     * @private\n     */\n\n\n    helpers$1._decimalPlaces = function (x) {\n      if (!helpers$1.isFinite(x)) {\n        return;\n      }\n\n      var e = 1;\n      var p = 0;\n\n      while (Math.round(x * e) / e !== x) {\n        e *= 10;\n        p++;\n      }\n\n      return p;\n    }; // Gets the angle from vertical upright to the point about a centre.\n\n\n    helpers$1.getAngleFromPoint = function (centrePoint, anglePoint) {\n      var distanceFromXCenter = anglePoint.x - centrePoint.x;\n      var distanceFromYCenter = anglePoint.y - centrePoint.y;\n      var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n      var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n      if (angle < -0.5 * Math.PI) {\n        angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n      }\n\n      return {\n        angle: angle,\n        distance: radialDistanceFromCenter\n      };\n    };\n\n    helpers$1.distanceBetweenPoints = function (pt1, pt2) {\n      return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**\n     * Provided for backward compatibility, not available anymore\n     * @function Chart.helpers.aliasPixel\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     */\n\n\n    helpers$1.aliasPixel = function (pixelWidth) {\n      return pixelWidth % 2 === 0 ? 0 : 0.5;\n    };\n    /**\n     * Returns the aligned pixel value to avoid anti-aliasing blur\n     * @param {Chart} chart - The chart instance.\n     * @param {number} pixel - A pixel value.\n     * @param {number} width - The width of the element.\n     * @returns {number} The aligned pixel value.\n     * @private\n     */\n\n\n    helpers$1._alignPixel = function (chart, pixel, width) {\n      var devicePixelRatio = chart.currentDevicePixelRatio;\n      var halfWidth = width / 2;\n      return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n    };\n\n    helpers$1.splineCurve = function (firstPoint, middlePoint, afterPoint, t) {\n      // Props to Rob Spencer at scaled innovation for his post on splining between points\n      // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n      // This function must also respect \"skipped\" points\n      var previous = firstPoint.skip ? middlePoint : firstPoint;\n      var current = middlePoint;\n      var next = afterPoint.skip ? middlePoint : afterPoint;\n      var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n      var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n      var s01 = d01 / (d01 + d12);\n      var s12 = d12 / (d01 + d12); // If all points are the same, s01 & s02 will be inf\n\n      s01 = isNaN(s01) ? 0 : s01;\n      s12 = isNaN(s12) ? 0 : s12;\n      var fa = t * s01; // scaling factor for triangle Ta\n\n      var fb = t * s12;\n      return {\n        previous: {\n          x: current.x - fa * (next.x - previous.x),\n          y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n          x: current.x + fb * (next.x - previous.x),\n          y: current.y + fb * (next.y - previous.y)\n        }\n      };\n    };\n\n    helpers$1.EPSILON = Number.EPSILON || 1e-14;\n\n    helpers$1.splineCurveMonotone = function (points) {\n      // This function calculates Bézier control points in a similar way than |splineCurve|,\n      // but preserves monotonicity of the provided data and ensures no local extremums are added\n      // between the dataset discrete points due to the interpolation.\n      // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n      var pointsWithTangents = (points || []).map(function (point) {\n        return {\n          model: point._model,\n          deltaK: 0,\n          mK: 0\n        };\n      }); // Calculate slopes (deltaK) and initialize tangents (mK)\n\n      var pointsLen = pointsWithTangents.length;\n      var i, pointBefore, pointCurrent, pointAfter;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointAfter && !pointAfter.model.skip) {\n          var slopeDeltaX = pointAfter.model.x - pointCurrent.model.x; // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\n          pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n        }\n\n        if (!pointBefore || pointBefore.model.skip) {\n          pointCurrent.mK = pointCurrent.deltaK;\n        } else if (!pointAfter || pointAfter.model.skip) {\n          pointCurrent.mK = pointBefore.deltaK;\n        } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n          pointCurrent.mK = 0;\n        } else {\n          pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n        }\n      } // Adjust tangents to ensure monotonic properties\n\n\n      var alphaK, betaK, tauK, squaredMagnitude;\n\n      for (i = 0; i < pointsLen - 1; ++i) {\n        pointCurrent = pointsWithTangents[i];\n        pointAfter = pointsWithTangents[i + 1];\n\n        if (pointCurrent.model.skip || pointAfter.model.skip) {\n          continue;\n        }\n\n        if (helpers$1.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n          pointCurrent.mK = pointAfter.mK = 0;\n          continue;\n        }\n\n        alphaK = pointCurrent.mK / pointCurrent.deltaK;\n        betaK = pointAfter.mK / pointCurrent.deltaK;\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\n        if (squaredMagnitude <= 9) {\n          continue;\n        }\n\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n        pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n      } // Compute control points\n\n\n      var deltaX;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointBefore && !pointBefore.model.skip) {\n          deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n          pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n          pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n        }\n\n        if (pointAfter && !pointAfter.model.skip) {\n          deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n          pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n          pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n        }\n      }\n    };\n\n    helpers$1.nextItem = function (collection, index, loop) {\n      if (loop) {\n        return index >= collection.length - 1 ? collection[0] : collection[index + 1];\n      }\n\n      return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n    };\n\n    helpers$1.previousItem = function (collection, index, loop) {\n      if (loop) {\n        return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n      }\n\n      return index <= 0 ? collection[0] : collection[index - 1];\n    }; // Implementation of the nice number algorithm used in determining where axis labels will go\n\n\n    helpers$1.niceNum = function (range, round) {\n      var exponent = Math.floor(helpers$1.log10(range));\n      var fraction = range / Math.pow(10, exponent);\n      var niceFraction;\n\n      if (round) {\n        if (fraction < 1.5) {\n          niceFraction = 1;\n        } else if (fraction < 3) {\n          niceFraction = 2;\n        } else if (fraction < 7) {\n          niceFraction = 5;\n        } else {\n          niceFraction = 10;\n        }\n      } else if (fraction <= 1.0) {\n        niceFraction = 1;\n      } else if (fraction <= 2) {\n        niceFraction = 2;\n      } else if (fraction <= 5) {\n        niceFraction = 5;\n      } else {\n        niceFraction = 10;\n      }\n\n      return niceFraction * Math.pow(10, exponent);\n    }; // Request animation polyfill - https://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\n    helpers$1.requestAnimFrame = function () {\n      if (typeof window === 'undefined') {\n        return function (callback) {\n          callback();\n        };\n      }\n\n      return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n        return window.setTimeout(callback, 1000 / 60);\n      };\n    }(); // -- DOM methods\n\n\n    helpers$1.getRelativePosition = function (evt, chart) {\n      var mouseX, mouseY;\n      var e = evt.originalEvent || evt;\n      var canvas = evt.target || evt.srcElement;\n      var boundingRect = canvas.getBoundingClientRect();\n      var touches = e.touches;\n\n      if (touches && touches.length > 0) {\n        mouseX = touches[0].clientX;\n        mouseY = touches[0].clientY;\n      } else {\n        mouseX = e.clientX;\n        mouseY = e.clientY;\n      } // Scale mouse coordinates into canvas coordinates\n      // by following the pattern laid out by 'jerryj' in the comments of\n      // https://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\n\n      var paddingLeft = parseFloat(helpers$1.getStyle(canvas, 'padding-left'));\n      var paddingTop = parseFloat(helpers$1.getStyle(canvas, 'padding-top'));\n      var paddingRight = parseFloat(helpers$1.getStyle(canvas, 'padding-right'));\n      var paddingBottom = parseFloat(helpers$1.getStyle(canvas, 'padding-bottom'));\n      var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n      var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom; // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n      // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\n      mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / width * canvas.width / chart.currentDevicePixelRatio);\n      mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / height * canvas.height / chart.currentDevicePixelRatio);\n      return {\n        x: mouseX,\n        y: mouseY\n      };\n    }; // Private helper function to convert max-width/max-height values that may be percentages into a number\n\n\n    function parseMaxStyle(styleValue, node, parentProperty) {\n      var valueInPixels;\n\n      if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n\n        if (styleValue.indexOf('%') !== -1) {\n          // percentage * size in dimension\n          valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n      } else {\n        valueInPixels = styleValue;\n      }\n\n      return valueInPixels;\n    }\n    /**\n     * Returns if the given value contains an effective constraint.\n     * @private\n     */\n\n\n    function isConstrainedValue(value) {\n      return value !== undefined && value !== null && value !== 'none';\n    }\n    /**\n     * Returns the max width or height of the given DOM node in a cross-browser compatible fashion\n     * @param {HTMLElement} domNode - the node to check the constraint on\n     * @param {string} maxStyle - the style that defines the maximum for the direction we are using ('max-width' / 'max-height')\n     * @param {string} percentageProperty - property of parent to use when calculating width as a percentage\n     * @see {@link https://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser}\n     */\n\n\n    function getConstraintDimension(domNode, maxStyle, percentageProperty) {\n      var view = document.defaultView;\n\n      var parentNode = helpers$1._getParentNode(domNode);\n\n      var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n      var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n      var hasCNode = isConstrainedValue(constrainedNode);\n      var hasCContainer = isConstrainedValue(constrainedContainer);\n      var infinity = Number.POSITIVE_INFINITY;\n\n      if (hasCNode || hasCContainer) {\n        return Math.min(hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity, hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n      }\n\n      return 'none';\n    } // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintWidth = function (domNode) {\n      return getConstraintDimension(domNode, 'max-width', 'clientWidth');\n    }; // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintHeight = function (domNode) {\n      return getConstraintDimension(domNode, 'max-height', 'clientHeight');\n    };\n    /**\n     * @private\n    \t */\n\n\n    helpers$1._calculatePadding = function (container, padding, parentDimension) {\n      padding = helpers$1.getStyle(container, padding);\n      return padding.indexOf('%') > -1 ? parentDimension * parseInt(padding, 10) / 100 : parseInt(padding, 10);\n    };\n    /**\n     * @private\n     */\n\n\n    helpers$1._getParentNode = function (domNode) {\n      var parent = domNode.parentNode;\n\n      if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n      }\n\n      return parent;\n    };\n\n    helpers$1.getMaximumWidth = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientWidth;\n      }\n\n      var clientWidth = container.clientWidth;\n\n      var paddingLeft = helpers$1._calculatePadding(container, 'padding-left', clientWidth);\n\n      var paddingRight = helpers$1._calculatePadding(container, 'padding-right', clientWidth);\n\n      var w = clientWidth - paddingLeft - paddingRight;\n      var cw = helpers$1.getConstraintWidth(domNode);\n      return isNaN(cw) ? w : Math.min(w, cw);\n    };\n\n    helpers$1.getMaximumHeight = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientHeight;\n      }\n\n      var clientHeight = container.clientHeight;\n\n      var paddingTop = helpers$1._calculatePadding(container, 'padding-top', clientHeight);\n\n      var paddingBottom = helpers$1._calculatePadding(container, 'padding-bottom', clientHeight);\n\n      var h = clientHeight - paddingTop - paddingBottom;\n      var ch = helpers$1.getConstraintHeight(domNode);\n      return isNaN(ch) ? h : Math.min(h, ch);\n    };\n\n    helpers$1.getStyle = function (el, property) {\n      return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n    };\n\n    helpers$1.retinaScale = function (chart, forceRatio) {\n      var pixelRatio = chart.currentDevicePixelRatio = forceRatio || typeof window !== 'undefined' && window.devicePixelRatio || 1;\n\n      if (pixelRatio === 1) {\n        return;\n      }\n\n      var canvas = chart.canvas;\n      var height = chart.height;\n      var width = chart.width;\n      canvas.height = height * pixelRatio;\n      canvas.width = width * pixelRatio;\n      chart.ctx.scale(pixelRatio, pixelRatio); // If no style has been set on the canvas, the render size is used as display size,\n      // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n      // See https://github.com/chartjs/Chart.js/issues/3575\n\n      if (!canvas.style.height && !canvas.style.width) {\n        canvas.style.height = height + 'px';\n        canvas.style.width = width + 'px';\n      }\n    }; // -- Canvas methods\n\n\n    helpers$1.fontString = function (pixelSize, fontStyle, fontFamily) {\n      return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n    };\n\n    helpers$1.longestText = function (ctx, font, arrayOfThings, cache) {\n      cache = cache || {};\n      var data = cache.data = cache.data || {};\n      var gc = cache.garbageCollect = cache.garbageCollect || [];\n\n      if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n      }\n\n      ctx.font = font;\n      var longest = 0;\n      helpers$1.each(arrayOfThings, function (thing) {\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && helpers$1.isArray(thing) !== true) {\n          longest = helpers$1.measureText(ctx, data, gc, longest, thing);\n        } else if (helpers$1.isArray(thing)) {\n          // if it is an array lets measure each element\n          // to do maybe simplify this function a bit so we can do this more recursively?\n          helpers$1.each(thing, function (nestedThing) {\n            // Undefined strings and arrays should not be measured\n            if (nestedThing !== undefined && nestedThing !== null && !helpers$1.isArray(nestedThing)) {\n              longest = helpers$1.measureText(ctx, data, gc, longest, nestedThing);\n            }\n          });\n        }\n      });\n      var gcLen = gc.length / 2;\n\n      if (gcLen > arrayOfThings.length) {\n        for (var i = 0; i < gcLen; i++) {\n          delete data[gc[i]];\n        }\n\n        gc.splice(0, gcLen);\n      }\n\n      return longest;\n    };\n\n    helpers$1.measureText = function (ctx, data, gc, longest, string) {\n      var textWidth = data[string];\n\n      if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n      }\n\n      if (textWidth > longest) {\n        longest = textWidth;\n      }\n\n      return longest;\n    };\n\n    helpers$1.numberOfLabelLines = function (arrayOfThings) {\n      var numberOfLines = 1;\n      helpers$1.each(arrayOfThings, function (thing) {\n        if (helpers$1.isArray(thing)) {\n          if (thing.length > numberOfLines) {\n            numberOfLines = thing.length;\n          }\n        }\n      });\n      return numberOfLines;\n    };\n\n    helpers$1.color = !chartjsColor ? function (value) {\n      console.error('Color.js not found!');\n      return value;\n    } : function (value) {\n      /* global CanvasGradient */\n      if (value instanceof CanvasGradient) {\n        value = core_defaults.global.defaultColor;\n      }\n\n      return chartjsColor(value);\n    };\n\n    helpers$1.getHoverColor = function (colorValue) {\n      /* global CanvasPattern */\n      return colorValue instanceof CanvasPattern || colorValue instanceof CanvasGradient ? colorValue : helpers$1.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n    };\n  };\n\n  function abstract() {\n    throw new Error('This method is not implemented: either no adapter can ' + 'be found or an incomplete integration was provided.');\n  }\n  /**\n   * Date adapter (current used by the time scale)\n   * @namespace Chart._adapters._date\n   * @memberof Chart._adapters\n   * @private\n   */\n\n  /**\n   * Currently supported unit string values.\n   * @typedef {('millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year')}\n   * @memberof Chart._adapters._date\n   * @name Unit\n   */\n\n  /**\n   * @class\n   */\n\n\n  function DateAdapter(options) {\n    this.options = options || {};\n  }\n\n  helpers$1.extend(DateAdapter.prototype,\n  /** @lends DateAdapter */\n  {\n    /**\n     * Returns a map of time formats for the supported formatting units defined\n     * in Unit as well as 'datetime' representing a detailed date/time string.\n     * @returns {{string: string}}\n     */\n    formats: abstract,\n\n    /**\n     * Parses the given `value` and return the associated timestamp.\n     * @param {any} value - the value to parse (usually comes from the data)\n     * @param {string} [format] - the expected data format\n     * @returns {(number|null)}\n     * @function\n     */\n    parse: abstract,\n\n    /**\n     * Returns the formatted date in the specified `format` for a given `timestamp`.\n     * @param {number} timestamp - the timestamp to format\n     * @param {string} format - the date/time token\n     * @return {string}\n     * @function\n     */\n    format: abstract,\n\n    /**\n     * Adds the specified `amount` of `unit` to the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {number} amount - the amount to add\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    add: abstract,\n\n    /**\n     * Returns the number of `unit` between the given timestamps.\n     * @param {number} max - the input timestamp (reference)\n     * @param {number} min - the timestamp to substract\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    diff: abstract,\n\n    /**\n     * Returns start of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @param {number} [weekday] - the ISO day of the week with 1 being Monday\n     * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n     * @function\n     */\n    startOf: abstract,\n\n    /**\n     * Returns end of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @function\n     */\n    endOf: abstract,\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility for scale.getValueForPixel(),\n     * this method should be overridden only by the moment adapter.\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(value) {\n      return value;\n    }\n  });\n\n  DateAdapter.override = function (members) {\n    helpers$1.extend(DateAdapter.prototype, members);\n  };\n\n  var _date = DateAdapter;\n  var core_adapters = {\n    _date: _date\n  };\n  /**\n   * Namespace to hold static tick generation functions\n   * @namespace Chart.Ticks\n   */\n\n  var core_ticks = {\n    /**\n     * Namespace to hold formatters for different types of ticks\n     * @namespace Chart.Ticks.formatters\n     */\n    formatters: {\n      /**\n       * Formatter for value labels\n       * @method Chart.Ticks.formatters.values\n       * @param value the value to display\n       * @return {string|string[]} the label to display\n       */\n      values: function values(value) {\n        return helpers$1.isArray(value) ? value : '' + value;\n      },\n\n      /**\n       * Formatter for linear numeric ticks\n       * @method Chart.Ticks.formatters.linear\n       * @param tickValue {number} the value to be formatted\n       * @param index {number} the position of the tickValue parameter in the ticks array\n       * @param ticks {number[]} the list of ticks being converted\n       * @return {string} string representation of the tickValue parameter\n       */\n      linear: function linear(tickValue, index, ticks) {\n        // If we have lots of ticks, don't use the ones\n        var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0]; // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\n        if (Math.abs(delta) > 1) {\n          if (tickValue !== Math.floor(tickValue)) {\n            // not an integer\n            delta = tickValue - Math.floor(tickValue);\n          }\n        }\n\n        var logDelta = helpers$1.log10(Math.abs(delta));\n        var tickString = '';\n\n        if (tickValue !== 0) {\n          var maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\n          if (maxTick < 1e-4) {\n            // all ticks are small numbers; use scientific notation\n            var logTick = helpers$1.log10(Math.abs(tickValue));\n            tickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n          } else {\n            var numDecimal = -1 * Math.floor(logDelta);\n            numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\n            tickString = tickValue.toFixed(numDecimal);\n          }\n        } else {\n          tickString = '0'; // never show decimal places for 0\n        }\n\n        return tickString;\n      },\n      logarithmic: function logarithmic(tickValue, index, ticks) {\n        var remain = tickValue / Math.pow(10, Math.floor(helpers$1.log10(tickValue)));\n\n        if (tickValue === 0) {\n          return '0';\n        } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n          return tickValue.toExponential();\n        }\n\n        return '';\n      }\n    }\n  };\n  var valueOrDefault$9 = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault = helpers$1.valueAtIndexOrDefault;\n\n  core_defaults._set('scale', {\n    display: true,\n    position: 'left',\n    offset: false,\n    // grid line settings\n    gridLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      drawBorder: true,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickMarkLength: 10,\n      zeroLineWidth: 1,\n      zeroLineColor: 'rgba(0,0,0,0.25)',\n      zeroLineBorderDash: [],\n      zeroLineBorderDashOffset: 0.0,\n      offsetGridLines: false,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    // scale label\n    scaleLabel: {\n      // display property\n      display: false,\n      // actual label\n      labelString: '',\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n    // label settings\n    ticks: {\n      beginAtZero: false,\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      padding: 0,\n      reverse: false,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 0,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: core_ticks.formatters.values,\n      minor: {},\n      major: {}\n    }\n  });\n\n  function labelsFromTicks(ticks) {\n    var labels = [];\n    var i, ilen;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      labels.push(ticks[i].label);\n    }\n\n    return labels;\n  }\n\n  function getPixelForGridLine(scale, index, offsetGridLines) {\n    var lineValue = scale.getPixelForTick(index);\n\n    if (offsetGridLines) {\n      if (scale.getTicks().length === 1) {\n        lineValue -= scale.isHorizontal() ? Math.max(lineValue - scale.left, scale.right - lineValue) : Math.max(lineValue - scale.top, scale.bottom - lineValue);\n      } else if (index === 0) {\n        lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n      } else {\n        lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n      }\n    }\n\n    return lineValue;\n  }\n\n  function computeTextSize(context, tick, font) {\n    return helpers$1.isArray(tick) ? helpers$1.longestText(context, font, tick) : context.measureText(tick).width;\n  }\n\n  var core_scale = core_element.extend({\n    /**\n     * Get the padding needed for the scale\n     * @method getPadding\n     * @private\n     * @returns {Padding} the necessary padding\n     */\n    getPadding: function getPadding() {\n      var me = this;\n      return {\n        left: me.paddingLeft || 0,\n        top: me.paddingTop || 0,\n        right: me.paddingRight || 0,\n        bottom: me.paddingBottom || 0\n      };\n    },\n\n    /**\n     * Returns the scale tick objects ({label, major})\n     * @since 2.7\n     */\n    getTicks: function getTicks() {\n      return this._ticks;\n    },\n    // These methods are ordered by lifecyle. Utilities then follow.\n    // Any function defined here is inherited by all scale types.\n    // Any function can be extended by the scale type\n    mergeTicksOptions: function mergeTicksOptions() {\n      var ticks = this.options.ticks;\n\n      if (ticks.minor === false) {\n        ticks.minor = {\n          display: false\n        };\n      }\n\n      if (ticks.major === false) {\n        ticks.major = {\n          display: false\n        };\n      }\n\n      for (var key in ticks) {\n        if (key !== 'major' && key !== 'minor') {\n          if (typeof ticks.minor[key] === 'undefined') {\n            ticks.minor[key] = ticks[key];\n          }\n\n          if (typeof ticks.major[key] === 'undefined') {\n            ticks.major[key] = ticks[key];\n          }\n        }\n      }\n    },\n    beforeUpdate: function beforeUpdate() {\n      helpers$1.callback(this.options.beforeUpdate, [this]);\n    },\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this;\n      var i, ilen, labels, label, ticks, tick; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = helpers$1.extend({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      me._maxLabelLines = 0;\n      me.longestLabelWidth = 0;\n      me.longestTextCache = me.longestTextCache || {}; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Data min/max\n\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits(); // Ticks - `this.ticks` is now DEPRECATED!\n      // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n      // and must not be accessed directly from outside this class. `this.ticks` being\n      // around for long time and not marked as private, we can't change its structure\n      // without unexpected breaking changes. If you need to access the scale ticks,\n      // use scale.getTicks() instead.\n\n      me.beforeBuildTicks(); // New implementations should return an array of objects but for BACKWARD COMPAT,\n      // we still support no return (`this.ticks` internally set by calling this method).\n\n      ticks = me.buildTicks() || []; // Allow modification of ticks in callback.\n\n      ticks = me.afterBuildTicks(ticks) || ticks;\n      me.beforeTickToLabelConversion(); // New implementations should return the formatted tick labels but for BACKWARD\n      // COMPAT, we still support no return (`this.ticks` internally changed by calling\n      // this method and supposed to contain only string values).\n\n      labels = me.convertTicksToLabels(ticks) || me.ticks;\n      me.afterTickToLabelConversion();\n      me.ticks = labels; // BACKWARD COMPATIBILITY\n      // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n      // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        label = labels[i];\n        tick = ticks[i];\n\n        if (!tick) {\n          ticks.push(tick = {\n            label: label,\n            major: false\n          });\n        } else {\n          tick.label = label;\n        }\n      }\n\n      me._ticks = ticks; // Tick Rotation\n\n      me.beforeCalculateTickRotation();\n      me.calculateTickRotation();\n      me.afterCalculateTickRotation(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: function afterUpdate() {\n      helpers$1.callback(this.options.afterUpdate, [this]);\n    },\n    //\n    beforeSetDimensions: function beforeSetDimensions() {\n      helpers$1.callback(this.options.beforeSetDimensions, [this]);\n    },\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0;\n    },\n    afterSetDimensions: function afterSetDimensions() {\n      helpers$1.callback(this.options.afterSetDimensions, [this]);\n    },\n    // Data limits\n    beforeDataLimits: function beforeDataLimits() {\n      helpers$1.callback(this.options.beforeDataLimits, [this]);\n    },\n    determineDataLimits: helpers$1.noop,\n    afterDataLimits: function afterDataLimits() {\n      helpers$1.callback(this.options.afterDataLimits, [this]);\n    },\n    //\n    beforeBuildTicks: function beforeBuildTicks() {\n      helpers$1.callback(this.options.beforeBuildTicks, [this]);\n    },\n    buildTicks: helpers$1.noop,\n    afterBuildTicks: function afterBuildTicks(ticks) {\n      var me = this; // ticks is empty for old axis implementations here\n\n      if (helpers$1.isArray(ticks) && ticks.length) {\n        return helpers$1.callback(me.options.afterBuildTicks, [me, ticks]);\n      } // Support old implementations (that modified `this.ticks` directly in buildTicks)\n\n\n      me.ticks = helpers$1.callback(me.options.afterBuildTicks, [me, me.ticks]) || me.ticks;\n      return ticks;\n    },\n    beforeTickToLabelConversion: function beforeTickToLabelConversion() {\n      helpers$1.callback(this.options.beforeTickToLabelConversion, [this]);\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this; // Convert ticks to strings\n\n      var tickOpts = me.options.ticks;\n      me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n    },\n    afterTickToLabelConversion: function afterTickToLabelConversion() {\n      helpers$1.callback(this.options.afterTickToLabelConversion, [this]);\n    },\n    //\n    beforeCalculateTickRotation: function beforeCalculateTickRotation() {\n      helpers$1.callback(this.options.beforeCalculateTickRotation, [this]);\n    },\n    calculateTickRotation: function calculateTickRotation() {\n      var me = this;\n      var context = me.ctx;\n      var tickOpts = me.options.ticks;\n      var labels = labelsFromTicks(me._ticks); // Get the width of each grid by calculating the difference\n      // between x offsets between 0 and 1.\n\n      var tickFont = helpers$1.options._parseFont(tickOpts);\n\n      context.font = tickFont.string;\n      var labelRotation = tickOpts.minRotation || 0;\n\n      if (labels.length && me.options.display && me.isHorizontal()) {\n        var originalLabelWidth = helpers$1.longestText(context, tickFont.string, labels, me.longestTextCache);\n        var labelWidth = originalLabelWidth;\n        var cosRotation, sinRotation; // Allow 3 pixels x2 padding either side for label readability\n\n        var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6; // Max label rotation can be set or default to 90 - also act as a loop counter\n\n        while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n          var angleRadians = helpers$1.toRadians(labelRotation);\n          cosRotation = Math.cos(angleRadians);\n          sinRotation = Math.sin(angleRadians);\n\n          if (sinRotation * originalLabelWidth > me.maxHeight) {\n            // go back one step\n            labelRotation--;\n            break;\n          }\n\n          labelRotation++;\n          labelWidth = cosRotation * originalLabelWidth;\n        }\n      }\n\n      me.labelRotation = labelRotation;\n    },\n    afterCalculateTickRotation: function afterCalculateTickRotation() {\n      helpers$1.callback(this.options.afterCalculateTickRotation, [this]);\n    },\n    //\n    beforeFit: function beforeFit() {\n      helpers$1.callback(this.options.beforeFit, [this]);\n    },\n    fit: function fit() {\n      var me = this; // Reset\n\n      var minSize = me.minSize = {\n        width: 0,\n        height: 0\n      };\n      var labels = labelsFromTicks(me._ticks);\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var scaleLabelOpts = opts.scaleLabel;\n      var gridLineOpts = opts.gridLines;\n\n      var display = me._isVisible();\n\n      var position = opts.position;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var tickFont = parseFont(tickOpts);\n      var tickMarkLength = opts.gridLines.tickMarkLength; // Width\n\n      if (isHorizontal) {\n        // subtract the margins to line up with the chartArea if we are a full width scale\n        minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n      } else {\n        minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } // height\n\n\n      if (isHorizontal) {\n        minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } else {\n        minSize.height = me.maxHeight; // fill all the height\n      } // Are we showing a title for the scale?\n\n\n      if (scaleLabelOpts.display && display) {\n        var scaleLabelFont = parseFont(scaleLabelOpts);\n        var scaleLabelPadding = helpers$1.options.toPadding(scaleLabelOpts.padding);\n        var deltaHeight = scaleLabelFont.lineHeight + scaleLabelPadding.height;\n\n        if (isHorizontal) {\n          minSize.height += deltaHeight;\n        } else {\n          minSize.width += deltaHeight;\n        }\n      } // Don't bother fitting the ticks if we are not showing the labels\n\n\n      if (tickOpts.display && display) {\n        var largestTextWidth = helpers$1.longestText(me.ctx, tickFont.string, labels, me.longestTextCache);\n        var tallestLabelHeightInLines = helpers$1.numberOfLabelLines(labels);\n        var lineSpace = tickFont.size * 0.5;\n        var tickPadding = me.options.ticks.padding; // Store max number of lines and widest label for _autoSkip\n\n        me._maxLabelLines = tallestLabelHeightInLines;\n        me.longestLabelWidth = largestTextWidth;\n\n        if (isHorizontal) {\n          var angleRadians = helpers$1.toRadians(me.labelRotation);\n          var cosRotation = Math.cos(angleRadians);\n          var sinRotation = Math.sin(angleRadians); // TODO - improve this calculation\n\n          var labelHeight = sinRotation * largestTextWidth + tickFont.lineHeight * tallestLabelHeightInLines + lineSpace; // padding\n\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n          me.ctx.font = tickFont.string;\n          var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.string);\n          var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.string);\n          var offsetLeft = me.getPixelForTick(0) - me.left;\n          var offsetRight = me.right - me.getPixelForTick(labels.length - 1);\n          var paddingLeft, paddingRight; // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n          // which means that the right padding is dominated by the font height\n\n          if (me.labelRotation !== 0) {\n            paddingLeft = position === 'bottom' ? cosRotation * firstLabelWidth : cosRotation * lineSpace;\n            paddingRight = position === 'bottom' ? cosRotation * lineSpace : cosRotation * lastLabelWidth;\n          } else {\n            paddingLeft = firstLabelWidth / 2;\n            paddingRight = lastLabelWidth / 2;\n          }\n\n          me.paddingLeft = Math.max(paddingLeft - offsetLeft, 0) + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = Math.max(paddingRight - offsetRight, 0) + 3;\n        } else {\n          // A vertical axis is more constrained by the width. Labels are the\n          // dominant factor here, so get that length first and account for padding\n          if (tickOpts.mirror) {\n            largestTextWidth = 0;\n          } else {\n            // use lineSpace for consistency with horizontal axis\n            // tickPadding is not implemented for horizontal\n            largestTextWidth += tickPadding + lineSpace;\n          }\n\n          minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n          me.paddingTop = tickFont.size / 2;\n          me.paddingBottom = tickFont.size / 2;\n        }\n      }\n\n      me.handleMargins();\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n\n    /**\n     * Handle margins and padding interactions\n     * @private\n     */\n    handleMargins: function handleMargins() {\n      var me = this;\n\n      if (me.margins) {\n        me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n        me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n        me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n        me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n      }\n    },\n    afterFit: function afterFit() {\n      helpers$1.callback(this.options.afterFit, [this]);\n    },\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    isFullWidth: function isFullWidth() {\n      return this.options.fullWidth;\n    },\n    // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n    getRightValue: function getRightValue(rawValue) {\n      // Null and undefined values first\n      if (helpers$1.isNullOrUndef(rawValue)) {\n        return NaN;\n      } // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\n\n      if ((typeof rawValue === 'number' || rawValue instanceof Number) && !isFinite(rawValue)) {\n        return NaN;\n      } // If it is in fact an object, dive in one more level\n\n\n      if (rawValue) {\n        if (this.isHorizontal()) {\n          if (rawValue.x !== undefined) {\n            return this.getRightValue(rawValue.x);\n          }\n        } else if (rawValue.y !== undefined) {\n          return this.getRightValue(rawValue.y);\n        }\n      } // Value is good, return it\n\n\n      return rawValue;\n    },\n\n    /**\n     * Used to get the value to display in the tooltip for the data at the given index\n     * @param index\n     * @param datasetIndex\n     */\n    getLabelForIndex: helpers$1.noop,\n\n    /**\n     * Returns the location of the given data point. Value can either be an index or a numerical value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param value\n     * @param index\n     * @param datasetIndex\n     */\n    getPixelForValue: helpers$1.noop,\n\n    /**\n     * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param pixel\n     */\n    getValueForPixel: helpers$1.noop,\n\n    /**\n     * Returns the location of the tick at the given index\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForTick: function getPixelForTick(index) {\n      var me = this;\n      var offset = me.options.offset;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var tickWidth = innerWidth / Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n        var pixel = tickWidth * index + me.paddingLeft;\n\n        if (offset) {\n          pixel += tickWidth / 2;\n        }\n\n        var finalVal = me.left + pixel;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n      return me.top + index * (innerHeight / (me._ticks.length - 1));\n    },\n\n    /**\n     * Utility for getting the pixel location of a percentage of scale\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForDecimal: function getPixelForDecimal(decimal) {\n      var me = this;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var valueOffset = innerWidth * decimal + me.paddingLeft;\n        var finalVal = me.left + valueOffset;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      return me.top + decimal * me.height;\n    },\n\n    /**\n     * Returns the pixel for the minimum chart value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getBasePixel: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    },\n    getBaseValue: function getBaseValue() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    },\n\n    /**\n     * Returns a subset of ticks to be plotted to avoid overlapping labels.\n     * @private\n     */\n    _autoSkip: function _autoSkip(ticks) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor;\n      var tickCount = ticks.length;\n      var skipRatio = false;\n      var maxTicks = optionTicks.maxTicksLimit; // Total space needed to display all ticks. First and last ticks are\n      // drawn as their center at end of axis, so tickCount-1\n\n      var ticksLength = me._tickSize() * (tickCount - 1); // Axis length\n\n      var axisLength = isHorizontal ? me.width - (me.paddingLeft + me.paddingRight) : me.height - (me.paddingTop + me.PaddingBottom);\n      var result = [];\n      var i, tick;\n\n      if (ticksLength > axisLength) {\n        skipRatio = 1 + Math.floor(ticksLength / axisLength);\n      } // if they defined a max number of optionTicks,\n      // increase skipRatio until that number is met\n\n\n      if (tickCount > maxTicks) {\n        skipRatio = Math.max(skipRatio, 1 + Math.floor(tickCount / maxTicks));\n      }\n\n      for (i = 0; i < tickCount; i++) {\n        tick = ticks[i];\n\n        if (skipRatio > 1 && i % skipRatio > 0) {\n          // leave tick in place but make sure it's not displayed (#4635)\n          delete tick.label;\n        }\n\n        result.push(tick);\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _tickSize: function _tickSize() {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor; // Calculate space needed by label in axis direction.\n\n      var rot = helpers$1.toRadians(me.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = me.longestLabelWidth + padding || 0;\n\n      var tickFont = helpers$1.options._parseFont(optionTicks);\n\n      var h = me._maxLabelLines * tickFont.lineHeight + padding || 0; // Calculate space needed for 1 tick in axis direction.\n\n      return isHorizontal ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    },\n\n    /**\n     * @private\n     */\n    _isVisible: function _isVisible() {\n      var me = this;\n      var chart = me.chart;\n      var display = me.options.display;\n      var i, ilen, meta;\n\n      if (display !== 'auto') {\n        return !!display;\n      } // When 'auto', the scale is visible if at least one associated dataset is visible.\n\n\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n\n          if (meta.xAxisID === me.id || meta.yAxisID === me.id) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Actually draw the scale on the canvas\n     * @param {object} chartArea - the area of the chart to draw full grid lines on\n     */\n    draw: function draw(chartArea) {\n      var me = this;\n      var options = me.options;\n\n      if (!me._isVisible()) {\n        return;\n      }\n\n      var chart = me.chart;\n      var context = me.ctx;\n      var globalDefaults = core_defaults.global;\n      var defaultFontColor = globalDefaults.defaultFontColor;\n      var optionTicks = options.ticks.minor;\n      var optionMajorTicks = options.ticks.major || optionTicks;\n      var gridLines = options.gridLines;\n      var scaleLabel = options.scaleLabel;\n      var position = options.position;\n      var isRotated = me.labelRotation !== 0;\n      var isMirrored = optionTicks.mirror;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var ticks = optionTicks.display && optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n      var tickFontColor = valueOrDefault$9(optionTicks.fontColor, defaultFontColor);\n      var tickFont = parseFont(optionTicks);\n      var lineHeight = tickFont.lineHeight;\n      var majorTickFontColor = valueOrDefault$9(optionMajorTicks.fontColor, defaultFontColor);\n      var majorTickFont = parseFont(optionMajorTicks);\n      var tickPadding = optionTicks.padding;\n      var labelOffset = optionTicks.labelOffset;\n      var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n      var scaleLabelFontColor = valueOrDefault$9(scaleLabel.fontColor, defaultFontColor);\n      var scaleLabelFont = parseFont(scaleLabel);\n      var scaleLabelPadding = helpers$1.options.toPadding(scaleLabel.padding);\n      var labelRotationRadians = helpers$1.toRadians(me.labelRotation);\n      var itemsToDraw = [];\n      var axisWidth = gridLines.drawBorder ? valueAtIndexOrDefault(gridLines.lineWidth, 0, 0) : 0;\n      var alignPixel = helpers$1._alignPixel;\n      var borderValue, tickStart, tickEnd;\n\n      if (position === 'top') {\n        borderValue = alignPixel(chart, me.bottom, axisWidth);\n        tickStart = me.bottom - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else if (position === 'bottom') {\n        borderValue = alignPixel(chart, me.top, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignPixel(chart, me.right, axisWidth);\n        tickStart = me.right - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else {\n        borderValue = alignPixel(chart, me.left, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.left + tl;\n      }\n\n      var epsilon = 0.0000001; // 0.0000001 is margin in pixels for Accumulated error.\n\n      helpers$1.each(ticks, function (tick, index) {\n        // autoskipper skipped this tick (#4635)\n        if (helpers$1.isNullOrUndef(tick.label)) {\n          return;\n        }\n\n        var label = tick.label;\n        var lineWidth, lineColor, borderDash, borderDashOffset;\n\n        if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n          // Draw the first index specially\n          lineWidth = gridLines.zeroLineWidth;\n          lineColor = gridLines.zeroLineColor;\n          borderDash = gridLines.zeroLineBorderDash || [];\n          borderDashOffset = gridLines.zeroLineBorderDashOffset || 0.0;\n        } else {\n          lineWidth = valueAtIndexOrDefault(gridLines.lineWidth, index);\n          lineColor = valueAtIndexOrDefault(gridLines.color, index);\n          borderDash = gridLines.borderDash || [];\n          borderDashOffset = gridLines.borderDashOffset || 0.0;\n        } // Common properties\n\n\n        var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY, textOffset, textAlign;\n        var labelCount = helpers$1.isArray(label) ? label.length : 1;\n        var lineValue = getPixelForGridLine(me, index, gridLines.offsetGridLines);\n\n        if (isHorizontal) {\n          var labelYOffset = tl + tickPadding;\n\n          if (lineValue < me.left - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tx2 = x1 = x2 = alignPixel(chart, lineValue, lineWidth);\n          ty1 = tickStart;\n          ty2 = tickEnd;\n          labelX = me.getPixelForTick(index) + labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n          if (position === 'top') {\n            y1 = alignPixel(chart, chartArea.top, axisWidth) + axisWidth / 2;\n            y2 = chartArea.bottom;\n            textOffset = ((!isRotated ? 0.5 : 1) - labelCount) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'left';\n            labelY = me.bottom - labelYOffset;\n          } else {\n            y1 = chartArea.top;\n            y2 = alignPixel(chart, chartArea.bottom, axisWidth) - axisWidth / 2;\n            textOffset = (!isRotated ? 0.5 : 0) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'right';\n            labelY = me.top + labelYOffset;\n          }\n        } else {\n          var labelXOffset = (isMirrored ? 0 : tl) + tickPadding;\n\n          if (lineValue < me.top - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tickStart;\n          tx2 = tickEnd;\n          ty1 = ty2 = y1 = y2 = alignPixel(chart, lineValue, lineWidth);\n          labelY = me.getPixelForTick(index) + labelOffset;\n          textOffset = (1 - labelCount) * lineHeight / 2;\n\n          if (position === 'left') {\n            x1 = alignPixel(chart, chartArea.left, axisWidth) + axisWidth / 2;\n            x2 = chartArea.right;\n            textAlign = isMirrored ? 'left' : 'right';\n            labelX = me.right - labelXOffset;\n          } else {\n            x1 = chartArea.left;\n            x2 = alignPixel(chart, chartArea.right, axisWidth) - axisWidth / 2;\n            textAlign = isMirrored ? 'right' : 'left';\n            labelX = me.left + labelXOffset;\n          }\n        }\n\n        itemsToDraw.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          labelX: labelX,\n          labelY: labelY,\n          glWidth: lineWidth,\n          glColor: lineColor,\n          glBorderDash: borderDash,\n          glBorderDashOffset: borderDashOffset,\n          rotation: -1 * labelRotationRadians,\n          label: label,\n          major: tick.major,\n          textOffset: textOffset,\n          textAlign: textAlign\n        });\n      }); // Draw all of the tick labels, tick marks, and grid lines at the correct places\n\n      helpers$1.each(itemsToDraw, function (itemToDraw) {\n        var glWidth = itemToDraw.glWidth;\n        var glColor = itemToDraw.glColor;\n\n        if (gridLines.display && glWidth && glColor) {\n          context.save();\n          context.lineWidth = glWidth;\n          context.strokeStyle = glColor;\n\n          if (context.setLineDash) {\n            context.setLineDash(itemToDraw.glBorderDash);\n            context.lineDashOffset = itemToDraw.glBorderDashOffset;\n          }\n\n          context.beginPath();\n\n          if (gridLines.drawTicks) {\n            context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n            context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n          }\n\n          if (gridLines.drawOnChartArea) {\n            context.moveTo(itemToDraw.x1, itemToDraw.y1);\n            context.lineTo(itemToDraw.x2, itemToDraw.y2);\n          }\n\n          context.stroke();\n          context.restore();\n        }\n\n        if (optionTicks.display) {\n          // Make sure we draw text in the correct color and font\n          context.save();\n          context.translate(itemToDraw.labelX, itemToDraw.labelY);\n          context.rotate(itemToDraw.rotation);\n          context.font = itemToDraw.major ? majorTickFont.string : tickFont.string;\n          context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n          context.textBaseline = 'middle';\n          context.textAlign = itemToDraw.textAlign;\n          var label = itemToDraw.label;\n          var y = itemToDraw.textOffset;\n\n          if (helpers$1.isArray(label)) {\n            for (var i = 0; i < label.length; ++i) {\n              // We just make sure the multiline element is a string here..\n              context.fillText('' + label[i], 0, y);\n              y += lineHeight;\n            }\n          } else {\n            context.fillText(label, 0, y);\n          }\n\n          context.restore();\n        }\n      });\n\n      if (scaleLabel.display) {\n        // Draw the scale label\n        var scaleLabelX;\n        var scaleLabelY;\n        var rotation = 0;\n        var halfLineHeight = scaleLabelFont.lineHeight / 2;\n\n        if (isHorizontal) {\n          scaleLabelX = me.left + (me.right - me.left) / 2; // midpoint of the width\n\n          scaleLabelY = position === 'bottom' ? me.bottom - halfLineHeight - scaleLabelPadding.bottom : me.top + halfLineHeight + scaleLabelPadding.top;\n        } else {\n          var isLeft = position === 'left';\n          scaleLabelX = isLeft ? me.left + halfLineHeight + scaleLabelPadding.top : me.right - halfLineHeight - scaleLabelPadding.top;\n          scaleLabelY = me.top + (me.bottom - me.top) / 2;\n          rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n        }\n\n        context.save();\n        context.translate(scaleLabelX, scaleLabelY);\n        context.rotate(rotation);\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.fillStyle = scaleLabelFontColor; // render in correct colour\n\n        context.font = scaleLabelFont.string;\n        context.fillText(scaleLabel.labelString, 0, 0);\n        context.restore();\n      }\n\n      if (axisWidth) {\n        // Draw the line at the edge of the axis\n        var firstLineWidth = axisWidth;\n        var lastLineWidth = valueAtIndexOrDefault(gridLines.lineWidth, ticks.length - 1, 0);\n        var x1, x2, y1, y2;\n\n        if (isHorizontal) {\n          x1 = alignPixel(chart, me.left, firstLineWidth) - firstLineWidth / 2;\n          x2 = alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n          y1 = y2 = borderValue;\n        } else {\n          y1 = alignPixel(chart, me.top, firstLineWidth) - firstLineWidth / 2;\n          y2 = alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n          x1 = x2 = borderValue;\n        }\n\n        context.lineWidth = axisWidth;\n        context.strokeStyle = valueAtIndexOrDefault(gridLines.color, 0);\n        context.beginPath();\n        context.moveTo(x1, y1);\n        context.lineTo(x2, y2);\n        context.stroke();\n      }\n    }\n  });\n  var defaultConfig = {\n    position: 'bottom'\n  };\n  var scale_category = core_scale.extend({\n    /**\n    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n    * else fall back to data.labels\n    * @private\n    */\n    getLabels: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var labels = me.getLabels();\n      me.minIndex = 0;\n      me.maxIndex = labels.length - 1;\n      var findIndex;\n\n      if (me.options.ticks.min !== undefined) {\n        // user specified min value\n        findIndex = labels.indexOf(me.options.ticks.min);\n        me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n      }\n\n      if (me.options.ticks.max !== undefined) {\n        // user specified max value\n        findIndex = labels.indexOf(me.options.ticks.max);\n        me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n      }\n\n      me.min = labels[me.minIndex];\n      me.max = labels[me.maxIndex];\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var labels = me.getLabels(); // If we are viewing some subset of labels, slice the original array\n\n      me.ticks = me.minIndex === 0 && me.maxIndex === labels.length - 1 ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n\n      if (chart.getDatasetMeta(datasetIndex).controller._getValueScaleId() === me.id) {\n        return me.getRightValue(chart.data.datasets[datasetIndex].data[index]);\n      }\n\n      return me.ticks[index - me.minIndex];\n    },\n    // Used to get data value locations.  Value can either be an index or a numerical value\n    getPixelForValue: function getPixelForValue(value, index) {\n      var me = this;\n      var offset = me.options.offset; // 1 is added because we need the length but we have the indexes\n\n      var offsetAmt = Math.max(me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1), 1); // If value is a data object, then index is the index in the data array,\n      // not the index of the scale. We need to change that.\n\n      var valueCategory;\n\n      if (value !== undefined && value !== null) {\n        valueCategory = me.isHorizontal() ? value.x : value.y;\n      }\n\n      if (valueCategory !== undefined || value !== undefined && isNaN(index)) {\n        var labels = me.getLabels();\n        value = valueCategory || value;\n        var idx = labels.indexOf(value);\n        index = idx !== -1 ? idx : index;\n      }\n\n      if (me.isHorizontal()) {\n        var valueWidth = me.width / offsetAmt;\n        var widthOffset = valueWidth * (index - me.minIndex);\n\n        if (offset) {\n          widthOffset += valueWidth / 2;\n        }\n\n        return me.left + widthOffset;\n      }\n\n      var valueHeight = me.height / offsetAmt;\n      var heightOffset = valueHeight * (index - me.minIndex);\n\n      if (offset) {\n        heightOffset += valueHeight / 2;\n      }\n\n      return me.top + heightOffset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var offset = me.options.offset;\n      var value;\n      var offsetAmt = Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var horz = me.isHorizontal();\n      var valueDimension = (horz ? me.width : me.height) / offsetAmt;\n      pixel -= horz ? me.left : me.top;\n\n      if (offset) {\n        pixel -= valueDimension / 2;\n      }\n\n      if (pixel <= 0) {\n        value = 0;\n      } else {\n        value = Math.round(pixel / valueDimension);\n      }\n\n      return value + me.minIndex;\n    },\n    getBasePixel: function getBasePixel() {\n      return this.bottom;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults = defaultConfig;\n  scale_category._defaults = _defaults;\n  var noop = helpers$1.noop;\n  var isNullOrUndef = helpers$1.isNullOrUndef;\n  /**\n   * Generate a set of linear ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks(generationOptions, dataRange) {\n    var ticks = []; // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n    // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n    // for details.\n\n    var MIN_SPACING = 1e-14;\n    var stepSize = generationOptions.stepSize;\n    var unit = stepSize || 1;\n    var maxNumSpaces = generationOptions.maxTicks - 1;\n    var min = generationOptions.min;\n    var max = generationOptions.max;\n    var precision = generationOptions.precision;\n    var rmin = dataRange.min;\n    var rmax = dataRange.max;\n    var spacing = helpers$1.niceNum((rmax - rmin) / maxNumSpaces / unit) * unit;\n    var factor, niceMin, niceMax, numSpaces; // Beyond MIN_SPACING floating point numbers being to lose precision\n    // such that we can't do the math necessary to generate ticks\n\n    if (spacing < MIN_SPACING && isNullOrUndef(min) && isNullOrUndef(max)) {\n      return [rmin, rmax];\n    }\n\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n    if (numSpaces > maxNumSpaces) {\n      // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n      spacing = helpers$1.niceNum(numSpaces * spacing / maxNumSpaces / unit) * unit;\n    }\n\n    if (stepSize || isNullOrUndef(precision)) {\n      // If a precision is not specified, calculate factor based on spacing\n      factor = Math.pow(10, helpers$1._decimalPlaces(spacing));\n    } else {\n      // If the user specified a precision, round to that number of decimal places\n      factor = Math.pow(10, precision);\n      spacing = Math.ceil(spacing * factor) / factor;\n    }\n\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing; // If min, max and stepSize is set and they make an evenly spaced scale use it.\n\n    if (stepSize) {\n      // If very close to our whole number, use it.\n      if (!isNullOrUndef(min) && helpers$1.almostWhole(min / spacing, spacing / 1000)) {\n        niceMin = min;\n      }\n\n      if (!isNullOrUndef(max) && helpers$1.almostWhole(max / spacing, spacing / 1000)) {\n        niceMax = max;\n      }\n    }\n\n    numSpaces = (niceMax - niceMin) / spacing; // If very close to our rounded value, use it.\n\n    if (helpers$1.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    ticks.push(isNullOrUndef(min) ? niceMin : min);\n\n    for (var j = 1; j < numSpaces; ++j) {\n      ticks.push(Math.round((niceMin + j * spacing) * factor) / factor);\n    }\n\n    ticks.push(isNullOrUndef(max) ? niceMax : max);\n    return ticks;\n  }\n\n  var scale_linearbase = core_scale.extend({\n    getRightValue: function getRightValue(value) {\n      if (typeof value === 'string') {\n        return +value;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, value);\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n      // do nothing since that would make the chart weird. If the user really wants a weird chart\n      // axis, they can manually override it\n\n      if (tickOpts.beginAtZero) {\n        var minSign = helpers$1.sign(me.min);\n        var maxSign = helpers$1.sign(me.max);\n\n        if (minSign < 0 && maxSign < 0) {\n          // move the top up to 0\n          me.max = 0;\n        } else if (minSign > 0 && maxSign > 0) {\n          // move the bottom down to 0\n          me.min = 0;\n        }\n      }\n\n      var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n      var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n      if (tickOpts.min !== undefined) {\n        me.min = tickOpts.min;\n      } else if (tickOpts.suggestedMin !== undefined) {\n        if (me.min === null) {\n          me.min = tickOpts.suggestedMin;\n        } else {\n          me.min = Math.min(me.min, tickOpts.suggestedMin);\n        }\n      }\n\n      if (tickOpts.max !== undefined) {\n        me.max = tickOpts.max;\n      } else if (tickOpts.suggestedMax !== undefined) {\n        if (me.max === null) {\n          me.max = tickOpts.suggestedMax;\n        } else {\n          me.max = Math.max(me.max, tickOpts.suggestedMax);\n        }\n      }\n\n      if (setMin !== setMax) {\n        // We set the min or the max but not both.\n        // So ensure that our range is good\n        // Inverted or 0 length range can happen when\n        // ticks.min is set, and no datasets are visible\n        if (me.min >= me.max) {\n          if (setMin) {\n            me.max = me.min + 1;\n          } else {\n            me.min = me.max - 1;\n          }\n        }\n      }\n\n      if (me.min === me.max) {\n        me.max++;\n\n        if (!tickOpts.beginAtZero) {\n          me.min--;\n        }\n      }\n    },\n    getTickLimit: function getTickLimit() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var stepSize = tickOpts.stepSize;\n      var maxTicksLimit = tickOpts.maxTicksLimit;\n      var maxTicks;\n\n      if (stepSize) {\n        maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n      } else {\n        maxTicks = me._computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n\n      return maxTicks;\n    },\n    _computeTickLimit: function _computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    },\n    handleDirectionalChanges: noop,\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Figure out what the max number of ticks we can support it is based on the size of\n      // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n      // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n      // the graph. Make sure we always have at least 2 ticks\n\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        min: tickOpts.min,\n        max: tickOpts.max,\n        precision: tickOpts.precision,\n        stepSize: helpers$1.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n      };\n      var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n      me.handleDirectionalChanges(); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      me.ticksAsNumbers = me.ticks.slice();\n      me.zeroLineIndex = me.ticks.indexOf(0);\n      core_scale.prototype.convertTicksToLabels.call(me);\n    }\n  });\n  var defaultConfig$1 = {\n    position: 'left',\n    ticks: {\n      callback: core_ticks.formatters.linear\n    }\n  };\n  var scale_linear = scale_linearbase.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n      var DEFAULT_MIN = 0;\n      var DEFAULT_MAX = 1;\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // First Calculate the range\n\n\n      me.min = null;\n      me.max = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (valuesPerStack[key] === undefined) {\n            valuesPerStack[key] = {\n              positiveValues: [],\n              negativeValues: []\n            };\n          } // Store these per type\n\n\n          var positiveValues = valuesPerStack[key].positiveValues;\n          var negativeValues = valuesPerStack[key].negativeValues;\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              positiveValues[index] = positiveValues[index] || 0;\n              negativeValues[index] = negativeValues[index] || 0;\n\n              if (opts.relativePoints) {\n                positiveValues[index] = 100;\n              } else if (value < 0) {\n                negativeValues[index] += value;\n              } else {\n                positiveValues[index] += value;\n              }\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n          var minVal = helpers$1.min(values);\n          var maxVal = helpers$1.max(values);\n          me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n          me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n            });\n          }\n        });\n      }\n\n      me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n      me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      this.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      var me = this;\n      var tickFont;\n\n      if (me.isHorizontal()) {\n        return Math.ceil(me.width / 40);\n      }\n\n      tickFont = helpers$1.options._parseFont(me.options.ticks);\n      return Math.ceil(me.height / tickFont.lineHeight);\n    },\n    // Called after the ticks are built. We need\n    handleDirectionalChanges: function handleDirectionalChanges() {\n      if (!this.isHorizontal()) {\n        // We are in a vertical orientation. The top value is the highest. So reverse the array\n        this.ticks.reverse();\n      }\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    // Utils\n    getPixelForValue: function getPixelForValue(value) {\n      // This must be called after fit has been run so that\n      // this.left, this.top, this.right, and this.bottom have been defined\n      var me = this;\n      var start = me.start;\n      var rightValue = +me.getRightValue(value);\n      var pixel;\n      var range = me.end - start;\n\n      if (me.isHorizontal()) {\n        pixel = me.left + me.width / range * (rightValue - start);\n      } else {\n        pixel = me.bottom - me.height / range * (rightValue - start);\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var innerDimension = isHorizontal ? me.width : me.height;\n      var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n      return me.start + (me.end - me.start) * offset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticksAsNumbers[index]);\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$1 = defaultConfig$1;\n  scale_linear._defaults = _defaults$1;\n  var valueOrDefault$a = helpers$1.valueOrDefault;\n  /**\n   * Generate a set of logarithmic ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks$1(generationOptions, dataRange) {\n    var ticks = [];\n    var tickVal = valueOrDefault$a(generationOptions.min, Math.pow(10, Math.floor(helpers$1.log10(dataRange.min))));\n    var endExp = Math.floor(helpers$1.log10(dataRange.max));\n    var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n    var exp, significand;\n\n    if (tickVal === 0) {\n      exp = Math.floor(helpers$1.log10(dataRange.minNotZero));\n      significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n      ticks.push(tickVal);\n      tickVal = significand * Math.pow(10, exp);\n    } else {\n      exp = Math.floor(helpers$1.log10(tickVal));\n      significand = Math.floor(tickVal / Math.pow(10, exp));\n    }\n\n    var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n    do {\n      ticks.push(tickVal);\n      ++significand;\n\n      if (significand === 10) {\n        significand = 1;\n        ++exp;\n        precision = exp >= 0 ? 1 : precision;\n      }\n\n      tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n    } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n    var lastTick = valueOrDefault$a(generationOptions.max, tickVal);\n    ticks.push(lastTick);\n    return ticks;\n  }\n\n  var defaultConfig$2 = {\n    position: 'left',\n    // label settings\n    ticks: {\n      callback: core_ticks.formatters.logarithmic\n    }\n  }; // TODO(v3): change this to positiveOrDefault\n\n  function nonNegativeOrDefault(value, defaultValue) {\n    return helpers$1.isFinite(value) && value >= 0 ? value : defaultValue;\n  }\n\n  var scale_logarithmic = core_scale.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // Calculate Range\n\n\n      me.min = null;\n      me.max = null;\n      me.minNotZero = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            if (valuesPerStack[key] === undefined) {\n              valuesPerStack[key] = [];\n            }\n\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var values = valuesPerStack[key];\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              values[index] = values[index] || 0;\n              values[index] += value;\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          if (valuesForType.length > 0) {\n            var minVal = helpers$1.min(valuesForType);\n            var maxVal = helpers$1.max(valuesForType);\n            me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n            me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n          }\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n\n              if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n                me.minNotZero = value;\n              }\n            });\n          }\n        });\n      } // Common base implementation to handle ticks.min, ticks.max\n\n\n      this.handleTickRangeOptions();\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var DEFAULT_MIN = 1;\n      var DEFAULT_MAX = 10;\n      me.min = nonNegativeOrDefault(tickOpts.min, me.min);\n      me.max = nonNegativeOrDefault(tickOpts.max, me.max);\n\n      if (me.min === me.max) {\n        if (me.min !== 0 && me.min !== null) {\n          me.min = Math.pow(10, Math.floor(helpers$1.log10(me.min)) - 1);\n          me.max = Math.pow(10, Math.floor(helpers$1.log10(me.max)) + 1);\n        } else {\n          me.min = DEFAULT_MIN;\n          me.max = DEFAULT_MAX;\n        }\n      }\n\n      if (me.min === null) {\n        me.min = Math.pow(10, Math.floor(helpers$1.log10(me.max)) - 1);\n      }\n\n      if (me.max === null) {\n        me.max = me.min !== 0 ? Math.pow(10, Math.floor(helpers$1.log10(me.min)) + 1) : DEFAULT_MAX;\n      }\n\n      if (me.minNotZero === null) {\n        if (me.min > 0) {\n          me.minNotZero = me.min;\n        } else if (me.max < 1) {\n          me.minNotZero = Math.pow(10, Math.floor(helpers$1.log10(me.max)));\n        } else {\n          me.minNotZero = DEFAULT_MIN;\n        }\n      }\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = !me.isHorizontal();\n      var generationOptions = {\n        min: nonNegativeOrDefault(tickOpts.min),\n        max: nonNegativeOrDefault(tickOpts.max)\n      };\n      var ticks = me.ticks = generateTicks$1(generationOptions, me); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        reverse = !reverse;\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      if (reverse) {\n        ticks.reverse();\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      this.tickValues = this.ticks.slice();\n      core_scale.prototype.convertTicksToLabels.call(this);\n    },\n    // Get the correct tooltip label\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.tickValues[index]);\n    },\n\n    /**\n     * Returns the value of the first tick.\n     * @param {number} value - The minimum not zero value.\n     * @return {number} The first tick value.\n     * @private\n     */\n    _getFirstTickValue: function _getFirstTickValue(value) {\n      var exp = Math.floor(helpers$1.log10(value));\n      var significand = Math.floor(value / Math.pow(10, exp));\n      return significand * Math.pow(10, exp);\n    },\n    getPixelForValue: function getPixelForValue(value) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var offset = 0;\n      var innerDimension, pixel, start, end, sign;\n      value = +me.getRightValue(value);\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n        sign = -1;\n      } else {\n        start = me.start;\n        end = me.end;\n        sign = 1;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        pixel = reverse ? me.right : me.left;\n      } else {\n        innerDimension = me.height;\n        sign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\n        pixel = reverse ? me.top : me.bottom;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        if (value !== 0) {\n          offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n        }\n\n        pixel += sign * offset;\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var innerDimension, start, end, value;\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n      } else {\n        start = me.start;\n        end = me.end;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        value = reverse ? me.right - pixel : pixel - me.left;\n      } else {\n        innerDimension = me.height;\n        value = reverse ? pixel - me.top : me.bottom - pixel;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          var offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          value -= offset;\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        value *= log10(end) - log10(start);\n        value /= innerDimension;\n        value = Math.pow(10, log10(start) + value);\n      }\n\n      return value;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$2 = defaultConfig$2;\n  scale_logarithmic._defaults = _defaults$2;\n  var valueOrDefault$b = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault$1 = helpers$1.valueAtIndexOrDefault;\n  var resolve$7 = helpers$1.options.resolve;\n  var defaultConfig$3 = {\n    display: true,\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    gridLines: {\n      circular: false\n    },\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n      // String - The colour of the label backdrop\n      backdropColor: 'rgba(255,255,255,0.75)',\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPaddingY: 2,\n      // Number - The backdrop padding to the side of the label in pixels\n      backdropPaddingX: 2,\n      callback: core_ticks.formatters.linear\n    },\n    pointLabels: {\n      // Boolean - if true, show point labels\n      display: true,\n      // Number - Point label font size in pixels\n      fontSize: 10,\n      // Function - Used to convert point labels\n      callback: function callback(label) {\n        return label;\n      }\n    }\n  };\n\n  function getValueCount(scale) {\n    var opts = scale.options;\n    return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n  }\n\n  function getTickBackdropHeight(opts) {\n    var tickOpts = opts.ticks;\n\n    if (tickOpts.display && opts.display) {\n      return valueOrDefault$b(tickOpts.fontSize, core_defaults.global.defaultFontSize) + tickOpts.backdropPaddingY * 2;\n    }\n\n    return 0;\n  }\n\n  function measureLabelSize(ctx, lineHeight, label) {\n    if (helpers$1.isArray(label)) {\n      return {\n        w: helpers$1.longestText(ctx, ctx.font, label),\n        h: label.length * lineHeight\n      };\n    }\n\n    return {\n      w: ctx.measureText(label).width,\n      h: lineHeight\n    };\n  }\n\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size,\n        end: pos\n      };\n    }\n\n    return {\n      start: pos,\n      end: pos + size\n    };\n  }\n  /**\n   * Helper function to fit a radial linear scale with point labels\n   */\n\n\n  function fitWithPointLabels(scale) {\n    // Right, this is really confusing and there is a lot of maths going on here\n    // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n    //\n    // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n    //\n    // Solution:\n    //\n    // We assume the radius of the polygon is half the size of the canvas at first\n    // at each index we check if the text overlaps.\n    //\n    // Where it does, we store that angle and that index.\n    //\n    // After finding the largest index and angle we calculate how much we need to remove\n    // from the shape radius to move the point inwards by that x.\n    //\n    // We average the left and right distances to get the maximum shape radius that can fit in the box\n    // along with labels.\n    //\n    // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n    // on each side, removing that from the size, halving it and adding the left x protrusion width.\n    //\n    // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n    // and position it in the most space efficient manner\n    //\n    // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n    var plFont = helpers$1.options._parseFont(scale.options.pointLabels); // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n    // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\n\n    var furthestLimits = {\n      l: 0,\n      r: scale.width,\n      t: 0,\n      b: scale.height - scale.paddingTop\n    };\n    var furthestAngles = {};\n    var i, textSize, pointPosition;\n    scale.ctx.font = plFont.string;\n    scale._pointLabelSizes = [];\n    var valueCount = getValueCount(scale);\n\n    for (i = 0; i < valueCount; i++) {\n      pointPosition = scale.getPointPosition(i, scale.drawingArea + 5);\n      textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale.pointLabels[i] || '');\n      scale._pointLabelSizes[i] = textSize; // Add quarter circle to make degree 0 mean top of circle\n\n      var angleRadians = scale.getIndexAngle(i);\n      var angle = helpers$1.toDegrees(angleRadians) % 360;\n      var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n      if (hLimits.start < furthestLimits.l) {\n        furthestLimits.l = hLimits.start;\n        furthestAngles.l = angleRadians;\n      }\n\n      if (hLimits.end > furthestLimits.r) {\n        furthestLimits.r = hLimits.end;\n        furthestAngles.r = angleRadians;\n      }\n\n      if (vLimits.start < furthestLimits.t) {\n        furthestLimits.t = vLimits.start;\n        furthestAngles.t = angleRadians;\n      }\n\n      if (vLimits.end > furthestLimits.b) {\n        furthestLimits.b = vLimits.end;\n        furthestAngles.b = angleRadians;\n      }\n    }\n\n    scale.setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  }\n\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n\n    return 'right';\n  }\n\n  function fillText(ctx, text, position, lineHeight) {\n    var y = position.y + lineHeight / 2;\n    var i, ilen;\n\n    if (helpers$1.isArray(text)) {\n      for (i = 0, ilen = text.length; i < ilen; ++i) {\n        ctx.fillText(text[i], position.x, y);\n        y += lineHeight;\n      }\n    } else {\n      ctx.fillText(text, position.x, y);\n    }\n  }\n\n  function adjustPointPositionForLabelHeight(angle, textSize, position) {\n    if (angle === 90 || angle === 270) {\n      position.y -= textSize.h / 2;\n    } else if (angle > 270 || angle < 90) {\n      position.y -= textSize.h;\n    }\n  }\n\n  function drawPointLabels(scale) {\n    var ctx = scale.ctx;\n    var opts = scale.options;\n    var angleLineOpts = opts.angleLines;\n    var gridLineOpts = opts.gridLines;\n    var pointLabelOpts = opts.pointLabels;\n    var lineWidth = valueOrDefault$b(angleLineOpts.lineWidth, gridLineOpts.lineWidth);\n    var lineColor = valueOrDefault$b(angleLineOpts.color, gridLineOpts.color);\n    var tickBackdropHeight = getTickBackdropHeight(opts);\n    ctx.save();\n    ctx.lineWidth = lineWidth;\n    ctx.strokeStyle = lineColor;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(resolve$7([angleLineOpts.borderDash, gridLineOpts.borderDash, []]));\n      ctx.lineDashOffset = resolve$7([angleLineOpts.borderDashOffset, gridLineOpts.borderDashOffset, 0.0]);\n    }\n\n    var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max); // Point Label Font\n\n    var plFont = helpers$1.options._parseFont(pointLabelOpts);\n\n    ctx.font = plFont.string;\n    ctx.textBaseline = 'middle';\n\n    for (var i = getValueCount(scale) - 1; i >= 0; i--) {\n      if (angleLineOpts.display && lineWidth && lineColor) {\n        var outerPosition = scale.getPointPosition(i, outerDistance);\n        ctx.beginPath();\n        ctx.moveTo(scale.xCenter, scale.yCenter);\n        ctx.lineTo(outerPosition.x, outerPosition.y);\n        ctx.stroke();\n      }\n\n      if (pointLabelOpts.display) {\n        // Extra pixels out for some label spacing\n        var extra = i === 0 ? tickBackdropHeight / 2 : 0;\n        var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + 5); // Keep this in loop since we may support array properties here\n\n        var pointLabelFontColor = valueAtIndexOrDefault$1(pointLabelOpts.fontColor, i, core_defaults.global.defaultFontColor);\n        ctx.fillStyle = pointLabelFontColor;\n        var angleRadians = scale.getIndexAngle(i);\n        var angle = helpers$1.toDegrees(angleRadians);\n        ctx.textAlign = getTextAlignForAngle(angle);\n        adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n        fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.lineHeight);\n      }\n    }\n\n    ctx.restore();\n  }\n\n  function drawRadiusLine(scale, gridLineOpts, radius, index) {\n    var ctx = scale.ctx;\n    var circular = gridLineOpts.circular;\n    var valueCount = getValueCount(scale);\n    var lineColor = valueAtIndexOrDefault$1(gridLineOpts.color, index - 1);\n    var lineWidth = valueAtIndexOrDefault$1(gridLineOpts.lineWidth, index - 1);\n    var pointPosition;\n\n    if (!circular && !valueCount || !lineColor || !lineWidth) {\n      return;\n    }\n\n    ctx.save();\n    ctx.strokeStyle = lineColor;\n    ctx.lineWidth = lineWidth;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(gridLineOpts.borderDash || []);\n      ctx.lineDashOffset = gridLineOpts.borderDashOffset || 0.0;\n    }\n\n    ctx.beginPath();\n\n    if (circular) {\n      // Draw circular arcs between the points\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n    } else {\n      // Draw straight lines connecting each index\n      pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n\n      for (var i = 1; i < valueCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n    }\n\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  function numberOrZero(param) {\n    return helpers$1.isNumber(param) ? param : 0;\n  }\n\n  var scale_radialLinear = scale_linearbase.extend({\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.paddingTop = getTickBackdropHeight(me.options) / 2;\n      me.xCenter = Math.floor(me.width / 2);\n      me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n      me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      helpers$1.each(chart.data.datasets, function (dataset, datasetIndex) {\n        if (chart.isDatasetVisible(datasetIndex)) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          helpers$1.each(dataset.data, function (rawValue, index) {\n            var value = +me.getRightValue(rawValue);\n\n            if (isNaN(value) || meta.data[index].hidden) {\n              return;\n            }\n\n            min = Math.min(value, min);\n            max = Math.max(value, max);\n          });\n        }\n      });\n      me.min = min === Number.POSITIVE_INFINITY ? 0 : min;\n      me.max = max === Number.NEGATIVE_INFINITY ? 0 : max; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      me.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      scale_linearbase.prototype.convertTicksToLabels.call(me); // Point labels\n\n      me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(me);\n      } else {\n        me.setCenterPoint(0, 0, 0, 0);\n      }\n    },\n\n    /**\n     * Set radius reductions and determine new radius and center point\n     * @private\n     */\n    setReductions: function setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    },\n    setCenterPoint: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n      me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n    },\n    getIndexAngle: function getIndexAngle(index) {\n      var angleMultiplier = Math.PI * 2 / getValueCount(this);\n      var startAngle = this.chart.options && this.chart.options.startAngle ? this.chart.options.startAngle : 0;\n      var startAngleRadians = startAngle * Math.PI * 2 / 360; // Start from the top instead of right, so remove a quarter of the circle\n\n      return index * angleMultiplier + startAngleRadians;\n    },\n    getDistanceFromCenterForValue: function getDistanceFromCenterForValue(value) {\n      var me = this;\n\n      if (value === null) {\n        return 0; // null always in center\n      } // Take into account half font size + the yPadding of the top value\n\n\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n\n      if (me.options.ticks.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n\n      return (value - me.min) * scalingFactor;\n    },\n    getPointPosition: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var thisAngle = me.getIndexAngle(index) - Math.PI / 2;\n      return {\n        x: Math.cos(thisAngle) * distanceFromCenter + me.xCenter,\n        y: Math.sin(thisAngle) * distanceFromCenter + me.yCenter\n      };\n    },\n    getPointPositionForValue: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    },\n    getBasePosition: function getBasePosition() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.getPointPositionForValue(0, me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0);\n    },\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var gridLineOpts = opts.gridLines;\n      var tickOpts = opts.ticks;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var startAngle = this.getIndexAngle(0);\n\n        var tickFont = helpers$1.options._parseFont(tickOpts);\n\n        if (opts.angleLines.display || opts.pointLabels.display) {\n          drawPointLabels(me);\n        }\n\n        helpers$1.each(me.ticks, function (label, index) {\n          // Don't draw a centre value (if it is minimum)\n          if (index > 0 || tickOpts.reverse) {\n            var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]); // Draw circular lines around the scale\n\n            if (gridLineOpts.display && index !== 0) {\n              drawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n            }\n\n            if (tickOpts.display) {\n              var tickFontColor = valueOrDefault$b(tickOpts.fontColor, core_defaults.global.defaultFontColor);\n              ctx.font = tickFont.string;\n              ctx.save();\n              ctx.translate(me.xCenter, me.yCenter);\n              ctx.rotate(startAngle);\n\n              if (tickOpts.showLabelBackdrop) {\n                var labelWidth = ctx.measureText(label).width;\n                ctx.fillStyle = tickOpts.backdropColor;\n                ctx.fillRect(-labelWidth / 2 - tickOpts.backdropPaddingX, -yCenterOffset - tickFont.size / 2 - tickOpts.backdropPaddingY, labelWidth + tickOpts.backdropPaddingX * 2, tickFont.size + tickOpts.backdropPaddingY * 2);\n              }\n\n              ctx.textAlign = 'center';\n              ctx.textBaseline = 'middle';\n              ctx.fillStyle = tickFontColor;\n              ctx.fillText(label, 0, -yCenterOffset);\n              ctx.restore();\n            }\n          }\n        });\n      }\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$3 = defaultConfig$3;\n  scale_radialLinear._defaults = _defaults$3;\n  var valueOrDefault$c = helpers$1.valueOrDefault; // Integer constants are from the ES6 spec.\n\n  var MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\n  var MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n  var INTERVALS = {\n    millisecond: {\n      common: true,\n      size: 1,\n      steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n    },\n    second: {\n      common: true,\n      size: 1000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    minute: {\n      common: true,\n      size: 60000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    hour: {\n      common: true,\n      size: 3600000,\n      steps: [1, 2, 3, 6, 12]\n    },\n    day: {\n      common: true,\n      size: 86400000,\n      steps: [1, 2, 5]\n    },\n    week: {\n      common: false,\n      size: 604800000,\n      steps: [1, 2, 3, 4]\n    },\n    month: {\n      common: true,\n      size: 2.628e9,\n      steps: [1, 2, 3]\n    },\n    quarter: {\n      common: false,\n      size: 7.884e9,\n      steps: [1, 2, 3, 4]\n    },\n    year: {\n      common: true,\n      size: 3.154e10\n    }\n  };\n  var UNITS = Object.keys(INTERVALS);\n\n  function sorter(a, b) {\n    return a - b;\n  }\n\n  function arrayUnique(items) {\n    var hash = {};\n    var out = [];\n    var i, ilen, item;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n\n      if (!hash[item]) {\n        hash[item] = true;\n        out.push(item);\n      }\n    }\n\n    return out;\n  }\n  /**\n   * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n   * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n   * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n   * extremity (left + width or top + height). Note that it would be more optimized to directly\n   * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n   * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n   *\n   * @param {number[]} timestamps - timestamps sorted from lowest to highest.\n   * @param {string} distribution - If 'linear', timestamps will be spread linearly along the min\n   * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n   * If 'series', timestamps will be positioned at the same distance from each other. In this\n   * case, only timestamps that break the time linearity are registered, meaning that in the\n   * best case, all timestamps are linear, the table contains only min and max.\n   */\n\n\n  function buildLookupTable(timestamps, min, max, distribution) {\n    if (distribution === 'linear' || !timestamps.length) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n\n    var table = [];\n    var items = [min];\n    var i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n\n    items.push(max);\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i]; // only add points that breaks the scale linearity\n\n      if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n        table.push({\n          time: curr,\n          pos: i / (ilen - 1)\n        });\n      }\n    }\n\n    return table;\n  } // @see adapted from https://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\n\n\n  function lookup(table, key, value) {\n    var lo = 0;\n    var hi = table.length - 1;\n    var mid, i0, i1;\n\n    while (lo >= 0 && lo <= hi) {\n      mid = lo + hi >> 1;\n      i0 = table[mid - 1] || null;\n      i1 = table[mid];\n\n      if (!i0) {\n        // given value is outside table (before first item)\n        return {\n          lo: null,\n          hi: i1\n        };\n      } else if (i1[key] < value) {\n        lo = mid + 1;\n      } else if (i0[key] > value) {\n        hi = mid - 1;\n      } else {\n        return {\n          lo: i0,\n          hi: i1\n        };\n      }\n    } // given value is outside table (after last item)\n\n\n    return {\n      lo: i1,\n      hi: null\n    };\n  }\n  /**\n   * Linearly interpolates the given source `value` using the table items `skey` values and\n   * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n   * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n   * index [0, 1] or [n - 1, n] are used for the interpolation.\n   */\n\n\n  function interpolate$1(table, skey, sval, tkey) {\n    var range = lookup(table, skey, sval); // Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\n    var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n    var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n    var span = next[skey] - prev[skey];\n    var ratio = span ? (sval - prev[skey]) / span : 0;\n    var offset = (next[tkey] - prev[tkey]) * ratio;\n    return prev[tkey] + offset;\n  }\n\n  function toTimestamp(scale, input) {\n    var adapter = scale._adapter;\n    var options = scale.options.time;\n    var parser = options.parser;\n    var format = parser || options.format;\n    var value = input;\n\n    if (typeof parser === 'function') {\n      value = parser(value);\n    } // Only parse if its not a timestamp already\n\n\n    if (!helpers$1.isFinite(value)) {\n      value = typeof format === 'string' ? adapter.parse(value, format) : adapter.parse(value);\n    }\n\n    if (value !== null) {\n      return +value;\n    } // Labels are in an incompatible format and no `parser` has been provided.\n    // The user might still use the deprecated `format` option for parsing.\n\n\n    if (!parser && typeof format === 'function') {\n      value = format(input); // `format` could return something else than a timestamp, if so, parse it\n\n      if (!helpers$1.isFinite(value)) {\n        value = adapter.parse(value);\n      }\n    }\n\n    return value;\n  }\n\n  function parse(scale, input) {\n    if (helpers$1.isNullOrUndef(input)) {\n      return null;\n    }\n\n    var options = scale.options.time;\n    var value = toTimestamp(scale, scale.getRightValue(input));\n\n    if (value === null) {\n      return value;\n    }\n\n    if (options.round) {\n      value = +scale._adapter.startOf(value, options.round);\n    }\n\n    return value;\n  }\n  /**\n   * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n   * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n   */\n\n\n  function determineStepSize(min, max, unit, capacity) {\n    var range = max - min;\n    var interval = INTERVALS[unit];\n    var milliseconds = interval.size;\n    var steps = interval.steps;\n    var i, ilen, factor;\n\n    if (!steps) {\n      return Math.ceil(range / (capacity * milliseconds));\n    }\n\n    for (i = 0, ilen = steps.length; i < ilen; ++i) {\n      factor = steps[i];\n\n      if (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n        break;\n      }\n    }\n\n    return factor;\n  }\n  /**\n   * Figures out what unit results in an appropriate number of auto-generated ticks\n   */\n\n\n  function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    var ilen = UNITS.length;\n    var i, interval, factor;\n\n    for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n      interval = INTERVALS[UNITS[i]];\n      factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n      if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n        return UNITS[i];\n      }\n    }\n\n    return UNITS[ilen - 1];\n  }\n  /**\n   * Figures out what unit to format a set of ticks with\n   */\n\n\n  function determineUnitForFormatting(scale, ticks, minUnit, min, max) {\n    var ilen = UNITS.length;\n    var i, unit;\n\n    for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n      unit = UNITS[i];\n\n      if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= ticks.length) {\n        return unit;\n      }\n    }\n\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n  }\n\n  function determineMajorUnit(unit) {\n    for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n      if (INTERVALS[UNITS[i]].common) {\n        return UNITS[i];\n      }\n    }\n  }\n  /**\n   * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n   * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n   * Important: this method can return ticks outside the min and max range, it's the\n   * responsibility of the calling code to clamp values if needed.\n   */\n\n\n  function generate(scale, min, max, capacity) {\n    var adapter = scale._adapter;\n    var options = scale.options;\n    var timeOpts = options.time;\n    var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n    var major = determineMajorUnit(minor);\n    var stepSize = valueOrDefault$c(timeOpts.stepSize, timeOpts.unitStepSize);\n    var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    var majorTicksEnabled = options.ticks.major.enabled;\n    var interval = INTERVALS[minor];\n    var first = min;\n    var last = max;\n    var ticks = [];\n    var time;\n\n    if (!stepSize) {\n      stepSize = determineStepSize(min, max, minor, capacity);\n    } // For 'week' unit, handle the first day of week option\n\n\n    if (weekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n      last = +adapter.startOf(last, 'isoWeek', weekday);\n    } // Align first/last ticks on unit\n\n\n    first = +adapter.startOf(first, weekday ? 'day' : minor);\n    last = +adapter.startOf(last, weekday ? 'day' : minor); // Make sure that the last tick include max\n\n    if (last < max) {\n      last = +adapter.add(last, 1, minor);\n    }\n\n    time = first;\n\n    if (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n      // Align the first tick on the previous `minor` unit aligned on the `major` unit:\n      // we first aligned time on the previous `major` unit then add the number of full\n      // stepSize there is between first and the previous major time.\n      time = +adapter.startOf(time, major);\n      time = +adapter.add(time, ~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n    }\n\n    for (; time < last; time = +adapter.add(time, stepSize, minor)) {\n      ticks.push(+time);\n    }\n\n    ticks.push(+time);\n    return ticks;\n  }\n  /**\n   * Returns the start and end offsets from edges in the form of {start, end}\n   * where each value is a relative width to the scale and ranges between 0 and 1.\n   * They add extra margins on the both sides by scaling down the original scale.\n   * Offsets are added when the `offset` option is true.\n   */\n\n\n  function computeOffsets(table, ticks, min, max, options) {\n    var start = 0;\n    var end = 0;\n    var first, last;\n\n    if (options.offset && ticks.length) {\n      if (!options.time.min) {\n        first = interpolate$1(table, 'time', ticks[0], 'pos');\n\n        if (ticks.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (interpolate$1(table, 'time', ticks[1], 'pos') - first) / 2;\n        }\n      }\n\n      if (!options.time.max) {\n        last = interpolate$1(table, 'time', ticks[ticks.length - 1], 'pos');\n\n        if (ticks.length === 1) {\n          end = last;\n        } else {\n          end = (last - interpolate$1(table, 'time', ticks[ticks.length - 2], 'pos')) / 2;\n        }\n      }\n    }\n\n    return {\n      start: start,\n      end: end\n    };\n  }\n\n  function ticksFromTimestamps(scale, values, majorUnit) {\n    var ticks = [];\n    var i, ilen, value, major;\n\n    for (i = 0, ilen = values.length; i < ilen; ++i) {\n      value = values[i];\n      major = majorUnit ? value === +scale._adapter.startOf(value, majorUnit) : false;\n      ticks.push({\n        value: value,\n        major: major\n      });\n    }\n\n    return ticks;\n  }\n\n  var defaultConfig$4 = {\n    position: 'bottom',\n\n    /**\n     * Data distribution along the scale:\n     * - 'linear': data are spread according to their time (distances can vary),\n     * - 'series': data are spread at the same distance from each other.\n     * @see https://github.com/chartjs/Chart.js/pull/4507\n     * @since 2.7.0\n     */\n    distribution: 'linear',\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n    adapters: {},\n    time: {\n      parser: false,\n      // false == a pattern string from https://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n      format: false,\n      // DEPRECATED false == date objects, moment object, callback or a pattern string from https://momentjs.com/docs/#/parsing/string-format/\n      unit: false,\n      // false == automatic or override with week, month, year, etc.\n      round: false,\n      // none, or override with week, month, year, etc.\n      displayFormat: false,\n      // DEPRECATED\n      isoWeekday: false,\n      // override week start day - see https://momentjs.com/docs/#/get-set/iso-weekday/\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      autoSkip: false,\n\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n  var scale_time = core_scale.extend({\n    initialize: function initialize() {\n      this.mergeTicksOptions();\n      core_scale.prototype.initialize.call(this);\n    },\n    update: function update() {\n      var me = this;\n      var options = me.options;\n      var time = options.time || (options.time = {});\n      var adapter = me._adapter = new core_adapters._date(options.adapters.date); // DEPRECATIONS: output a message only one time per update\n\n      if (time.format) {\n        console.warn('options.time.format is deprecated and replaced by options.time.parser.');\n      } // Backward compatibility: before introducing adapter, `displayFormats` was\n      // supposed to contain *all* unit/string pairs but this can't be resolved\n      // when loading the scale (adapters are loaded afterward), so let's populate\n      // missing formats on update\n\n\n      helpers$1.mergeIf(time.displayFormats, adapter.formats());\n      return core_scale.prototype.update.apply(me, arguments);\n    },\n\n    /**\n     * Allows data to be referenced via 't' attribute\n     */\n    getRightValue: function getRightValue(rawValue) {\n      if (rawValue && rawValue.t !== undefined) {\n        rawValue = rawValue.t;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, rawValue);\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var adapter = me._adapter;\n      var timeOpts = me.options.time;\n      var unit = timeOpts.unit || 'day';\n      var min = MAX_INTEGER;\n      var max = MIN_INTEGER;\n      var timestamps = [];\n      var datasets = [];\n      var labels = [];\n      var i, j, ilen, jlen, data, timestamp;\n      var dataLabels = chart.data.labels || []; // Convert labels to timestamps\n\n      for (i = 0, ilen = dataLabels.length; i < ilen; ++i) {\n        labels.push(parse(me, dataLabels[i]));\n      } // Convert data to timestamps\n\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          data = chart.data.datasets[i].data; // Let's consider that all data have the same format.\n\n          if (helpers$1.isObject(data[0])) {\n            datasets[i] = [];\n\n            for (j = 0, jlen = data.length; j < jlen; ++j) {\n              timestamp = parse(me, data[j]);\n              timestamps.push(timestamp);\n              datasets[i][j] = timestamp;\n            }\n          } else {\n            for (j = 0, jlen = labels.length; j < jlen; ++j) {\n              timestamps.push(labels[j]);\n            }\n\n            datasets[i] = labels.slice(0);\n          }\n        } else {\n          datasets[i] = [];\n        }\n      }\n\n      if (labels.length) {\n        // Sort labels **after** data have been converted\n        labels = arrayUnique(labels).sort(sorter);\n        min = Math.min(min, labels[0]);\n        max = Math.max(max, labels[labels.length - 1]);\n      }\n\n      if (timestamps.length) {\n        timestamps = arrayUnique(timestamps).sort(sorter);\n        min = Math.min(min, timestamps[0]);\n        max = Math.max(max, timestamps[timestamps.length - 1]);\n      }\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // In case there is no valid min/max, set limits based on unit time option\n\n      min = min === MAX_INTEGER ? +adapter.startOf(Date.now(), unit) : min;\n      max = max === MIN_INTEGER ? +adapter.endOf(Date.now(), unit) + 1 : max; // Make sure that max is strictly higher than min (required by the lookup table)\n\n      me.min = Math.min(min, max);\n      me.max = Math.max(min + 1, max); // PRIVATE\n\n      me._horizontal = me.isHorizontal();\n      me._table = [];\n      me._timestamps = {\n        data: timestamps,\n        datasets: datasets,\n        labels: labels\n      };\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var timestamps = [];\n      var ticks = [];\n      var i, ilen, timestamp;\n\n      switch (options.ticks.source) {\n        case 'data':\n          timestamps = me._timestamps.data;\n          break;\n\n        case 'labels':\n          timestamps = me._timestamps.labels;\n          break;\n\n        case 'auto':\n        default:\n          timestamps = generate(me, min, max, me.getLabelCapacity(min), options);\n      }\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        min = timestamps[0];\n        max = timestamps[timestamps.length - 1];\n      } // Enforce limits with user min/max options\n\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // Remove ticks outside the min/max range\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        timestamp = timestamps[i];\n\n        if (timestamp >= min && timestamp <= max) {\n          ticks.push(timestamp);\n        }\n      }\n\n      me.min = min;\n      me.max = max; // PRIVATE\n\n      me._unit = timeOpts.unit || determineUnitForFormatting(me, ticks, timeOpts.minUnit, me.min, me.max);\n      me._majorUnit = determineMajorUnit(me._unit);\n      me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n      me._offsets = computeOffsets(me._table, ticks, min, max, options);\n\n      if (options.ticks.reverse) {\n        ticks.reverse();\n      }\n\n      return ticksFromTimestamps(me, ticks, me._majorUnit);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var adapter = me._adapter;\n      var data = me.chart.data;\n      var timeOpts = me.options.time;\n      var label = data.labels && index < data.labels.length ? data.labels[index] : '';\n      var value = data.datasets[datasetIndex].data[index];\n\n      if (helpers$1.isObject(value)) {\n        label = me.getRightValue(value);\n      }\n\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(toTimestamp(me, label), timeOpts.tooltipFormat);\n      }\n\n      if (typeof label === 'string') {\n        return label;\n      }\n\n      return adapter.format(toTimestamp(me, label), timeOpts.displayFormats.datetime);\n    },\n\n    /**\n     * Function to format an individual tick mark\n     * @private\n     */\n    tickFormatFunction: function tickFormatFunction(time, index, ticks, format) {\n      var me = this;\n      var adapter = me._adapter;\n      var options = me.options;\n      var formats = options.time.displayFormats;\n      var minorFormat = formats[me._unit];\n      var majorUnit = me._majorUnit;\n      var majorFormat = formats[majorUnit];\n      var majorTime = +adapter.startOf(time, majorUnit);\n      var majorTickOpts = options.ticks.major;\n      var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n      var label = adapter.format(time, format ? format : major ? majorFormat : minorFormat);\n      var tickOpts = major ? majorTickOpts : options.ticks.minor;\n      var formatter = valueOrDefault$c(tickOpts.callback, tickOpts.userCallback);\n      return formatter ? formatter(label, index, ticks) : label;\n    },\n    convertTicksToLabels: function convertTicksToLabels(ticks) {\n      var labels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        labels.push(this.tickFormatFunction(ticks[i].value, i, ticks));\n      }\n\n      return labels;\n    },\n\n    /**\n     * @private\n     */\n    getPixelForOffset: function getPixelForOffset(time) {\n      var me = this;\n      var isReverse = me.options.ticks.reverse;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? isReverse ? me.right : me.left : isReverse ? me.bottom : me.top;\n      var pos = interpolate$1(me._table, 'time', time, 'pos');\n      var offset = size * (me._offsets.start + pos) / (me._offsets.start + 1 + me._offsets.end);\n      return isReverse ? start - offset : start + offset;\n    },\n    getPixelForValue: function getPixelForValue(value, index, datasetIndex) {\n      var me = this;\n      var time = null;\n\n      if (index !== undefined && datasetIndex !== undefined) {\n        time = me._timestamps.datasets[datasetIndex][index];\n      }\n\n      if (time === null) {\n        time = parse(me, value);\n      }\n\n      if (time !== null) {\n        return me.getPixelForOffset(time);\n      }\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      var ticks = this.getTicks();\n      return index >= 0 && index < ticks.length ? this.getPixelForOffset(ticks[index].value) : null;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = (size ? (pixel - start) / size : 0) * (me._offsets.start + 1 + me._offsets.start) - me._offsets.end;\n      var time = interpolate$1(me._table, 'pos', pos, 'time'); // DEPRECATION, we should return time directly\n\n      return me._adapter._create(time);\n    },\n\n    /**\n     * Crude approximation of what the label width might be\n     * @private\n     */\n    getLabelWidth: function getLabelWidth(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = helpers$1.toRadians(ticksOpts.maxRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = valueOrDefault$c(ticksOpts.fontSize, core_defaults.global.defaultFontSize);\n      return tickLabelWidth * cosRotation + tickFontSize * sinRotation;\n    },\n\n    /**\n     * @private\n     */\n    getLabelCapacity: function getLabelCapacity(exampleTime) {\n      var me = this; // pick the longest format (milliseconds) for guestimation\n\n      var format = me.options.time.displayFormats.millisecond;\n      var exampleLabel = me.tickFormatFunction(exampleTime, 0, [], format);\n      var tickLabelWidth = me.getLabelWidth(exampleLabel);\n      var innerWidth = me.isHorizontal() ? me.width : me.height;\n      var capacity = Math.floor(innerWidth / tickLabelWidth);\n      return capacity > 0 ? capacity : 1;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$4 = defaultConfig$4;\n  scale_time._defaults = _defaults$4;\n  var scales = {\n    category: scale_category,\n    linear: scale_linear,\n    logarithmic: scale_logarithmic,\n    radialLinear: scale_radialLinear,\n    time: scale_time\n  };\n  var FORMATS = {\n    datetime: 'MMM D, YYYY, h:mm:ss a',\n    millisecond: 'h:mm:ss.SSS a',\n    second: 'h:mm:ss a',\n    minute: 'h:mm a',\n    hour: 'hA',\n    day: 'MMM D',\n    week: 'll',\n    month: 'MMM YYYY',\n    quarter: '[Q]Q - YYYY',\n    year: 'YYYY'\n  };\n\n  core_adapters._date.override(typeof moment === 'function' ? {\n    _id: 'moment',\n    // DEBUG ONLY\n    formats: function formats() {\n      return FORMATS;\n    },\n    parse: function parse(value, format) {\n      if (typeof value === 'string' && typeof format === 'string') {\n        value = moment(value, format);\n      } else if (!(value instanceof moment)) {\n        value = moment(value);\n      }\n\n      return value.isValid() ? value.valueOf() : null;\n    },\n    format: function format(time, _format) {\n      return moment(time).format(_format);\n    },\n    add: function add(time, amount, unit) {\n      return moment(time).add(amount, unit).valueOf();\n    },\n    diff: function diff(max, min, unit) {\n      return moment.duration(moment(max).diff(moment(min))).as(unit);\n    },\n    startOf: function startOf(time, unit, weekday) {\n      time = moment(time);\n\n      if (unit === 'isoWeek') {\n        return time.isoWeekday(weekday).valueOf();\n      }\n\n      return time.startOf(unit).valueOf();\n    },\n    endOf: function endOf(time, unit) {\n      return moment(time).endOf(unit).valueOf();\n    },\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility with scale.getValueForPixel().\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(time) {\n      return moment(time);\n    }\n  } : {});\n\n  core_defaults._set('global', {\n    plugins: {\n      filler: {\n        propagate: true\n      }\n    }\n  });\n\n  var mappers = {\n    dataset: function dataset(source) {\n      var index = source.fill;\n      var chart = source.chart;\n      var meta = chart.getDatasetMeta(index);\n      var visible = meta && chart.isDatasetVisible(index);\n      var points = visible && meta.dataset._children || [];\n      var length = points.length || 0;\n      return !length ? null : function (point, i) {\n        return i < length && points[i]._view || null;\n      };\n    },\n    boundary: function boundary(source) {\n      var boundary = source.boundary;\n      var x = boundary ? boundary.x : null;\n      var y = boundary ? boundary.y : null;\n      return function (point) {\n        return {\n          x: x === null ? point.x : x,\n          y: y === null ? point.y : y\n        };\n      };\n    }\n  }; // @todo if (fill[0] === '#')\n\n  function decodeFill(el, index, count) {\n    var model = el._model || {};\n    var fill = model.fill;\n    var target;\n\n    if (fill === undefined) {\n      fill = !!model.backgroundColor;\n    }\n\n    if (fill === false || fill === null) {\n      return false;\n    }\n\n    if (fill === true) {\n      return 'origin';\n    }\n\n    target = parseFloat(fill, 10);\n\n    if (isFinite(target) && Math.floor(target) === target) {\n      if (fill[0] === '-' || fill[0] === '+') {\n        target = index + target;\n      }\n\n      if (target === index || target < 0 || target >= count) {\n        return false;\n      }\n\n      return target;\n    }\n\n    switch (fill) {\n      // compatibility\n      case 'bottom':\n        return 'start';\n\n      case 'top':\n        return 'end';\n\n      case 'zero':\n        return 'origin';\n      // supported boundaries\n\n      case 'origin':\n      case 'start':\n      case 'end':\n        return fill;\n      // invalid fill values\n\n      default:\n        return false;\n    }\n  }\n\n  function computeBoundary(source) {\n    var model = source.el._model || {};\n    var scale = source.el._scale || {};\n    var fill = source.fill;\n    var target = null;\n    var horizontal;\n\n    if (isFinite(fill)) {\n      return null;\n    } // Backward compatibility: until v3, we still need to support boundary values set on\n    // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n    // controllers might still use it (e.g. the Smith chart).\n\n\n    if (fill === 'start') {\n      target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n    } else if (fill === 'end') {\n      target = model.scaleTop === undefined ? scale.top : model.scaleTop;\n    } else if (model.scaleZero !== undefined) {\n      target = model.scaleZero;\n    } else if (scale.getBasePosition) {\n      target = scale.getBasePosition();\n    } else if (scale.getBasePixel) {\n      target = scale.getBasePixel();\n    }\n\n    if (target !== undefined && target !== null) {\n      if (target.x !== undefined && target.y !== undefined) {\n        return target;\n      }\n\n      if (helpers$1.isFinite(target)) {\n        horizontal = scale.isHorizontal();\n        return {\n          x: horizontal ? target : null,\n          y: horizontal ? null : target\n        };\n      }\n    }\n\n    return null;\n  }\n\n  function resolveTarget(sources, index, propagate) {\n    var source = sources[index];\n    var fill = source.fill;\n    var visited = [index];\n    var target;\n\n    if (!propagate) {\n      return fill;\n    }\n\n    while (fill !== false && visited.indexOf(fill) === -1) {\n      if (!isFinite(fill)) {\n        return fill;\n      }\n\n      target = sources[fill];\n\n      if (!target) {\n        return false;\n      }\n\n      if (target.visible) {\n        return fill;\n      }\n\n      visited.push(fill);\n      fill = target.fill;\n    }\n\n    return false;\n  }\n\n  function createMapper(source) {\n    var fill = source.fill;\n    var type = 'dataset';\n\n    if (fill === false) {\n      return null;\n    }\n\n    if (!isFinite(fill)) {\n      type = 'boundary';\n    }\n\n    return mappers[type](source);\n  }\n\n  function isDrawable(point) {\n    return point && !point.skip;\n  }\n\n  function drawArea(ctx, curve0, curve1, len0, len1) {\n    var i;\n\n    if (!len0 || !len1) {\n      return;\n    } // building first area curve (normal)\n\n\n    ctx.moveTo(curve0[0].x, curve0[0].y);\n\n    for (i = 1; i < len0; ++i) {\n      helpers$1.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n    } // joining the two area curves\n\n\n    ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y); // building opposite area curve (reverse)\n\n    for (i = len1 - 1; i > 0; --i) {\n      helpers$1.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n    }\n  }\n\n  function doFill(ctx, points, mapper, view, color, loop) {\n    var count = points.length;\n    var span = view.spanGaps;\n    var curve0 = [];\n    var curve1 = [];\n    var len0 = 0;\n    var len1 = 0;\n    var i, ilen, index, p0, p1, d0, d1;\n    ctx.beginPath();\n\n    for (i = 0, ilen = count + !!loop; i < ilen; ++i) {\n      index = i % count;\n      p0 = points[index]._view;\n      p1 = mapper(p0, index, view);\n      d0 = isDrawable(p0);\n      d1 = isDrawable(p1);\n\n      if (d0 && d1) {\n        len0 = curve0.push(p0);\n        len1 = curve1.push(p1);\n      } else if (len0 && len1) {\n        if (!span) {\n          drawArea(ctx, curve0, curve1, len0, len1);\n          len0 = len1 = 0;\n          curve0 = [];\n          curve1 = [];\n        } else {\n          if (d0) {\n            curve0.push(p0);\n          }\n\n          if (d1) {\n            curve1.push(p1);\n          }\n        }\n      }\n    }\n\n    drawArea(ctx, curve0, curve1, len0, len1);\n    ctx.closePath();\n    ctx.fillStyle = color;\n    ctx.fill();\n  }\n\n  var plugin_filler = {\n    id: 'filler',\n    afterDatasetsUpdate: function afterDatasetsUpdate(chart, options) {\n      var count = (chart.data.datasets || []).length;\n      var propagate = options.propagate;\n      var sources = [];\n      var meta, i, el, source;\n\n      for (i = 0; i < count; ++i) {\n        meta = chart.getDatasetMeta(i);\n        el = meta.dataset;\n        source = null;\n\n        if (el && el._model && el instanceof elements.Line) {\n          source = {\n            visible: chart.isDatasetVisible(i),\n            fill: decodeFill(el, i, count),\n            chart: chart,\n            el: el\n          };\n        }\n\n        meta.$filler = source;\n        sources.push(source);\n      }\n\n      for (i = 0; i < count; ++i) {\n        source = sources[i];\n\n        if (!source) {\n          continue;\n        }\n\n        source.fill = resolveTarget(sources, i, propagate);\n        source.boundary = computeBoundary(source);\n        source.mapper = createMapper(source);\n      }\n    },\n    beforeDatasetDraw: function beforeDatasetDraw(chart, args) {\n      var meta = args.meta.$filler;\n\n      if (!meta) {\n        return;\n      }\n\n      var ctx = chart.ctx;\n      var el = meta.el;\n      var view = el._view;\n      var points = el._children || [];\n      var mapper = meta.mapper;\n      var color = view.backgroundColor || core_defaults.global.defaultColor;\n\n      if (mapper && color && points.length) {\n        helpers$1.canvas.clipArea(ctx, chart.chartArea);\n        doFill(ctx, points, mapper, view, color, el._loop);\n        helpers$1.canvas.unclipArea(ctx);\n      }\n    }\n  };\n  var noop$1 = helpers$1.noop;\n  var valueOrDefault$d = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    legend: {\n      display: true,\n      position: 'top',\n      fullWidth: true,\n      reverse: false,\n      weight: 1000,\n      // a callback that will handle\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.datasetIndex;\n        var ci = this.chart;\n        var meta = ci.getDatasetMeta(index); // See controller.isDatasetVisible comment\n\n        meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null; // We hid a dataset ... rerender the chart\n\n        ci.update();\n      },\n      onHover: null,\n      onLeave: null,\n      labels: {\n        boxWidth: 40,\n        padding: 10,\n        // Generates labels shown in the legend\n        // Valid properties to return:\n        // text : text to display\n        // fillStyle : fill of coloured box\n        // strokeStyle: stroke of coloured box\n        // hidden : if this legend item refers to a hidden item\n        // lineCap : cap style for line\n        // lineDash\n        // lineDashOffset :\n        // lineJoin :\n        // lineWidth :\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          return helpers$1.isArray(data.datasets) ? data.datasets.map(function (dataset, i) {\n            return {\n              text: dataset.label,\n              fillStyle: !helpers$1.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0],\n              hidden: !chart.isDatasetVisible(i),\n              lineCap: dataset.borderCapStyle,\n              lineDash: dataset.borderDash,\n              lineDashOffset: dataset.borderDashOffset,\n              lineJoin: dataset.borderJoinStyle,\n              lineWidth: dataset.borderWidth,\n              strokeStyle: dataset.borderColor,\n              pointStyle: dataset.pointStyle,\n              // Below is extra data used for toggling the datasets\n              datasetIndex: i\n            };\n          }, this) : [];\n        }\n      }\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n\n      for (var i = 0; i < chart.data.datasets.length; i++) {\n        text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\n        if (chart.data.datasets[i].label) {\n          text.push(chart.data.datasets[i].label);\n        }\n\n        text.push('</li>');\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    }\n  });\n  /**\n   * Helper function to get the box width based on the usePointStyle option\n   * @param {object} labelopts - the label options on the legend\n   * @param {number} fontSize - the label font size\n   * @return {number} width of the color box area\n   */\n\n\n  function getBoxWidth(labelOpts, fontSize) {\n    return labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ? fontSize : labelOpts.boxWidth;\n  }\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Legend = core_element.extend({\n    initialize: function initialize(config) {\n      helpers$1.extend(this, config); // Contains hit boxes for each dataset (in dataset order)\n\n      this.legendHitBoxes = [];\n      /**\n      \t * @private\n      \t */\n\n      this._hoveredItem = null; // Are we in doughnut mode which has a different data type\n\n      this.doughnutMode = false;\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    // Any function defined here is inherited by all legend types.\n    // Any function can be extended by the legend type\n    beforeUpdate: noop$1,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$1,\n    //\n    beforeSetDimensions: noop$1,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$1,\n    //\n    beforeBuildLabels: noop$1,\n    buildLabels: function buildLabels() {\n      var me = this;\n      var labelOpts = me.options.labels || {};\n      var legendItems = helpers$1.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, me.chart.data);\n        });\n      }\n\n      if (me.options.reverse) {\n        legendItems.reverse();\n      }\n\n      me.legendItems = legendItems;\n    },\n    afterBuildLabels: noop$1,\n    //\n    beforeFit: noop$1,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var display = opts.display;\n      var ctx = me.ctx;\n\n      var labelFont = helpers$1.options._parseFont(labelOpts);\n\n      var fontSize = labelFont.size; // Reset hit boxes\n\n      var hitboxes = me.legendHitBoxes = [];\n      var minSize = me.minSize;\n      var isHorizontal = me.isHorizontal();\n\n      if (isHorizontal) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = display ? 10 : 0;\n      } else {\n        minSize.width = display ? 10 : 0;\n        minSize.height = me.maxHeight; // fill all the height\n      } // Increase sizes here\n\n\n      if (display) {\n        ctx.font = labelFont.string;\n\n        if (isHorizontal) {\n          // Labels\n          // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n          var lineWidths = me.lineWidths = [0];\n          var totalHeight = 0;\n          ctx.textAlign = 'left';\n          ctx.textBaseline = 'top';\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var width = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n            if (i === 0 || lineWidths[lineWidths.length - 1] + width + labelOpts.padding > minSize.width) {\n              totalHeight += fontSize + labelOpts.padding;\n              lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = labelOpts.padding;\n            } // Store the hitbox width and height here. Final position will be updated in `draw`\n\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: width,\n              height: fontSize\n            };\n            lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n          });\n          minSize.height += totalHeight;\n        } else {\n          var vPadding = labelOpts.padding;\n          var columnWidths = me.columnWidths = [];\n          var totalWidth = labelOpts.padding;\n          var currentColWidth = 0;\n          var currentColHeight = 0;\n          var itemHeight = fontSize + vPadding;\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width; // If too tall, go to new column\n\n            if (i > 0 && currentColHeight + itemHeight > minSize.height - vPadding) {\n              totalWidth += currentColWidth + labelOpts.padding;\n              columnWidths.push(currentColWidth); // previous column width\n\n              currentColWidth = 0;\n              currentColHeight = 0;\n            } // Get max width\n\n\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight; // Store the hitbox width and height here. Final position will be updated in `draw`\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: itemWidth,\n              height: fontSize\n            };\n          });\n          totalWidth += currentColWidth;\n          columnWidths.push(currentColWidth);\n          minSize.width += totalWidth;\n        }\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$1,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    // Actually draw the legend on the canvas\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor;\n      var lineDefault = globalDefaults.elements.line;\n      var legendWidth = me.width;\n      var lineWidths = me.lineWidths;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var fontColor = valueOrDefault$d(labelOpts.fontColor, globalDefaults.defaultFontColor);\n\n        var labelFont = helpers$1.options._parseFont(labelOpts);\n\n        var fontSize = labelFont.size;\n        var cursor; // Canvas setup\n\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.strokeStyle = fontColor; // for strikethrough effect\n\n        ctx.fillStyle = fontColor; // render in correct colour\n\n        ctx.font = labelFont.string;\n        var boxWidth = getBoxWidth(labelOpts, fontSize);\n        var hitboxes = me.legendHitBoxes; // current position\n\n        var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n          if (isNaN(boxWidth) || boxWidth <= 0) {\n            return;\n          } // Set the ctx for the box\n\n\n          ctx.save();\n          var lineWidth = valueOrDefault$d(legendItem.lineWidth, lineDefault.borderWidth);\n          ctx.fillStyle = valueOrDefault$d(legendItem.fillStyle, defaultColor);\n          ctx.lineCap = valueOrDefault$d(legendItem.lineCap, lineDefault.borderCapStyle);\n          ctx.lineDashOffset = valueOrDefault$d(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n          ctx.lineJoin = valueOrDefault$d(legendItem.lineJoin, lineDefault.borderJoinStyle);\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = valueOrDefault$d(legendItem.strokeStyle, defaultColor);\n\n          if (ctx.setLineDash) {\n            // IE 9 and 10 do not support line dash\n            ctx.setLineDash(valueOrDefault$d(legendItem.lineDash, lineDefault.borderDash));\n          }\n\n          if (opts.labels && opts.labels.usePointStyle) {\n            // Recalculate x and y for drawPoint() because its expecting\n            // x and y to be center of figure (instead of top left)\n            var radius = boxWidth * Math.SQRT2 / 2;\n            var centerX = x + boxWidth / 2;\n            var centerY = y + fontSize / 2; // Draw pointStyle as legend symbol\n\n            helpers$1.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n          } else {\n            // Draw box as legend symbol\n            if (lineWidth !== 0) {\n              ctx.strokeRect(x, y, boxWidth, fontSize);\n            }\n\n            ctx.fillRect(x, y, boxWidth, fontSize);\n          }\n\n          ctx.restore();\n        };\n\n        var fillText = function fillText(x, y, legendItem, textWidth) {\n          var halfFontSize = fontSize / 2;\n          var xLeft = boxWidth + halfFontSize + x;\n          var yMiddle = y + halfFontSize;\n          ctx.fillText(legendItem.text, xLeft, yMiddle);\n\n          if (legendItem.hidden) {\n            // Strikethrough the text if hidden\n            ctx.beginPath();\n            ctx.lineWidth = 2;\n            ctx.moveTo(xLeft, yMiddle);\n            ctx.lineTo(xLeft + textWidth, yMiddle);\n            ctx.stroke();\n          }\n        }; // Horizontal\n\n\n        var isHorizontal = me.isHorizontal();\n\n        if (isHorizontal) {\n          cursor = {\n            x: me.left + (legendWidth - lineWidths[0]) / 2 + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        } else {\n          cursor = {\n            x: me.left + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        }\n\n        var itemHeight = fontSize + labelOpts.padding;\n        helpers$1.each(me.legendItems, function (legendItem, i) {\n          var textWidth = ctx.measureText(legendItem.text).width;\n          var width = boxWidth + fontSize / 2 + textWidth;\n          var x = cursor.x;\n          var y = cursor.y; // Use (me.left + me.minSize.width) and (me.top + me.minSize.height)\n          // instead of me.right and me.bottom because me.width and me.height\n          // may have been changed since me.minSize was calculated\n\n          if (isHorizontal) {\n            if (i > 0 && x + width + labelOpts.padding > me.left + me.minSize.width) {\n              y = cursor.y += itemHeight;\n              cursor.line++;\n              x = cursor.x = me.left + (legendWidth - lineWidths[cursor.line]) / 2 + labelOpts.padding;\n            }\n          } else if (i > 0 && y + itemHeight > me.top + me.minSize.height) {\n            x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n            y = cursor.y = me.top + labelOpts.padding;\n            cursor.line++;\n          }\n\n          drawLegendBox(x, y, legendItem);\n          hitboxes[i].left = x;\n          hitboxes[i].top = y; // Fill the actual label\n\n          fillText(x, y, legendItem, textWidth);\n\n          if (isHorizontal) {\n            cursor.x += width + labelOpts.padding;\n          } else {\n            cursor.y += itemHeight;\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getLegendItemAt: function _getLegendItemAt(x, y) {\n      var me = this;\n      var i, hitBox, lh;\n\n      if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n        // See if we are touching one of the dataset boxes\n        lh = me.legendHitBoxes;\n\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n\n          if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n            // Touching an element\n            return me.legendItems[i];\n          }\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var opts = me.options;\n      var type = e.type === 'mouseup' ? 'click' : e.type;\n      var hoveredItem;\n\n      if (type === 'mousemove') {\n        if (!opts.onHover && !opts.onLeave) {\n          return;\n        }\n      } else if (type === 'click') {\n        if (!opts.onClick) {\n          return;\n        }\n      } else {\n        return;\n      } // Chart event already has relative position in it\n\n\n      hoveredItem = me._getLegendItemAt(e.x, e.y);\n\n      if (type === 'click') {\n        if (hoveredItem && opts.onClick) {\n          // use e.native for backwards compatibility\n          opts.onClick.call(me, e.native, hoveredItem);\n        }\n      } else {\n        if (opts.onLeave && hoveredItem !== me._hoveredItem) {\n          if (me._hoveredItem) {\n            opts.onLeave.call(me, e.native, me._hoveredItem);\n          }\n\n          me._hoveredItem = hoveredItem;\n        }\n\n        if (opts.onHover && hoveredItem) {\n          // use e.native for backwards compatibility\n          opts.onHover.call(me, e.native, hoveredItem);\n        }\n      }\n    }\n  });\n\n  function createNewLegendAndAttach(chart, legendOpts) {\n    var legend = new Legend({\n      ctx: chart.ctx,\n      options: legendOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, legend, legendOpts);\n    core_layouts.addBox(chart, legend);\n    chart.legend = legend;\n  }\n\n  var plugin_legend = {\n    id: 'legend',\n\n    /**\n     * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n     * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Legend,\n    beforeInit: function beforeInit(chart) {\n      var legendOpts = chart.options.legend;\n\n      if (legendOpts) {\n        createNewLegendAndAttach(chart, legendOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var legendOpts = chart.options.legend;\n      var legend = chart.legend;\n\n      if (legendOpts) {\n        helpers$1.mergeIf(legendOpts, core_defaults.global.legend);\n\n        if (legend) {\n          core_layouts.configure(chart, legend, legendOpts);\n          legend.options = legendOpts;\n        } else {\n          createNewLegendAndAttach(chart, legendOpts);\n        }\n      } else if (legend) {\n        core_layouts.removeBox(chart, legend);\n        delete chart.legend;\n      }\n    },\n    afterEvent: function afterEvent(chart, e) {\n      var legend = chart.legend;\n\n      if (legend) {\n        legend.handleEvent(e);\n      }\n    }\n  };\n  var noop$2 = helpers$1.noop;\n\n  core_defaults._set('global', {\n    title: {\n      display: false,\n      fontStyle: 'bold',\n      fullWidth: true,\n      padding: 10,\n      position: 'top',\n      text: '',\n      weight: 2000 // by default greater than legend (1000) to be above\n\n    }\n  });\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Title = core_element.extend({\n    initialize: function initialize(config) {\n      var me = this;\n      helpers$1.extend(me, config); // Contains hit boxes for each dataset (in dataset order)\n\n      me.legendHitBoxes = [];\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    beforeUpdate: noop$2,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$2,\n    //\n    beforeSetDimensions: noop$2,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$2,\n    //\n    beforeBuildLabels: noop$2,\n    buildLabels: noop$2,\n    afterBuildLabels: noop$2,\n    //\n    beforeFit: noop$2,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var display = opts.display;\n      var minSize = me.minSize;\n      var lineCount = helpers$1.isArray(opts.text) ? opts.text.length : 1;\n\n      var fontOpts = helpers$1.options._parseFont(opts);\n\n      var textSize = display ? lineCount * fontOpts.lineHeight + opts.padding * 2 : 0;\n\n      if (me.isHorizontal()) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = textSize;\n      } else {\n        minSize.width = textSize;\n        minSize.height = me.maxHeight; // fill all the height\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$2,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    },\n    // Actually draw the title block on the canvas\n    draw: function draw() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n\n      if (opts.display) {\n        var fontOpts = helpers$1.options._parseFont(opts);\n\n        var lineHeight = fontOpts.lineHeight;\n        var offset = lineHeight / 2 + opts.padding;\n        var rotation = 0;\n        var top = me.top;\n        var left = me.left;\n        var bottom = me.bottom;\n        var right = me.right;\n        var maxWidth, titleX, titleY;\n        ctx.fillStyle = helpers$1.valueOrDefault(opts.fontColor, core_defaults.global.defaultFontColor); // render in correct colour\n\n        ctx.font = fontOpts.string; // Horizontal\n\n        if (me.isHorizontal()) {\n          titleX = left + (right - left) / 2; // midpoint of the width\n\n          titleY = top + offset;\n          maxWidth = right - left;\n        } else {\n          titleX = opts.position === 'left' ? left + offset : right - offset;\n          titleY = top + (bottom - top) / 2;\n          maxWidth = bottom - top;\n          rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n        }\n\n        ctx.save();\n        ctx.translate(titleX, titleY);\n        ctx.rotate(rotation);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        var text = opts.text;\n\n        if (helpers$1.isArray(text)) {\n          var y = 0;\n\n          for (var i = 0; i < text.length; ++i) {\n            ctx.fillText(text[i], 0, y, maxWidth);\n            y += lineHeight;\n          }\n        } else {\n          ctx.fillText(text, 0, 0, maxWidth);\n        }\n\n        ctx.restore();\n      }\n    }\n  });\n\n  function createNewTitleBlockAndAttach(chart, titleOpts) {\n    var title = new Title({\n      ctx: chart.ctx,\n      options: titleOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, title, titleOpts);\n    core_layouts.addBox(chart, title);\n    chart.titleBlock = title;\n  }\n\n  var plugin_title = {\n    id: 'title',\n\n    /**\n     * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n     * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Title,\n    beforeInit: function beforeInit(chart) {\n      var titleOpts = chart.options.title;\n\n      if (titleOpts) {\n        createNewTitleBlockAndAttach(chart, titleOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var titleOpts = chart.options.title;\n      var titleBlock = chart.titleBlock;\n\n      if (titleOpts) {\n        helpers$1.mergeIf(titleOpts, core_defaults.global.title);\n\n        if (titleBlock) {\n          core_layouts.configure(chart, titleBlock, titleOpts);\n          titleBlock.options = titleOpts;\n        } else {\n          createNewTitleBlockAndAttach(chart, titleOpts);\n        }\n      } else if (titleBlock) {\n        core_layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n      }\n    }\n  };\n  var plugins = {};\n  var filler = plugin_filler;\n  var legend = plugin_legend;\n  var title = plugin_title;\n  plugins.filler = filler;\n  plugins.legend = legend;\n  plugins.title = title;\n  /**\n   * @namespace Chart\n   */\n\n  core_controller.helpers = helpers$1; // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\n\n  core_helpers(core_controller);\n  core_controller._adapters = core_adapters;\n  core_controller.Animation = core_animation;\n  core_controller.animationService = core_animations;\n  core_controller.controllers = controllers;\n  core_controller.DatasetController = core_datasetController;\n  core_controller.defaults = core_defaults;\n  core_controller.Element = core_element;\n  core_controller.elements = elements;\n  core_controller.Interaction = core_interaction;\n  core_controller.layouts = core_layouts;\n  core_controller.platform = platform;\n  core_controller.plugins = core_plugins;\n  core_controller.Scale = core_scale;\n  core_controller.scaleService = core_scaleService;\n  core_controller.Ticks = core_ticks;\n  core_controller.Tooltip = core_tooltip; // Register built-in scales\n\n  core_controller.helpers.each(scales, function (scale, type) {\n    core_controller.scaleService.registerScaleType(type, scale, scale._defaults);\n  }); // Load to register built-in adapters (as side effects)\n  // Loading built-in plugins\n\n  for (var k in plugins) {\n    if (plugins.hasOwnProperty(k)) {\n      core_controller.plugins.register(plugins[k]);\n    }\n  }\n\n  core_controller.platform.initialize();\n  var src = core_controller;\n\n  if (typeof window !== 'undefined') {\n    window.Chart = core_controller;\n  } // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Chart\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  core_controller.Chart = core_controller;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Legend\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Legend = plugins.legend._element;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Title\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Title = plugins.title._element;\n  /**\n   * Provided for backward compatibility, use Chart.plugins instead\n   * @namespace Chart.pluginService\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.pluginService = core_controller.plugins;\n  /**\n   * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n   * effect, instead simply create/register plugins via plain JavaScript objects.\n   * @interface Chart.PluginBase\n   * @deprecated since version 2.5.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.PluginBase = core_controller.Element.extend({});\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas instead.\n   * @namespace Chart.canvasHelpers\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.canvasHelpers = core_controller.helpers.canvas;\n  /**\n   * Provided for backward compatibility, use Chart.layouts instead.\n   * @namespace Chart.layoutService\n   * @deprecated since version 2.7.3\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.layoutService = core_controller.layouts;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.LinearScaleBase\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.LinearScaleBase = scale_linearbase;\n  /**\n   * Provided for backward compatibility, instead we should create a new Chart\n   * by setting the type in the config (`new Chart(id, {type: '{chart-type}'}`).\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   */\n\n  core_controller.helpers.each(['Bar', 'Bubble', 'Doughnut', 'Line', 'PolarArea', 'Radar', 'Scatter'], function (klass) {\n    core_controller[klass] = function (ctx, cfg) {\n      return new core_controller(ctx, core_controller.helpers.merge(cfg || {}, {\n        type: klass.charAt(0).toLowerCase() + klass.slice(1)\n      }));\n    };\n  });\n  return src;\n});","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'chart.js';\nimport isEqual from 'lodash/isEqual';\nimport keyBy from 'lodash/keyBy';\nvar NODE_ENV = typeof process !== 'undefined' && process.env && process.env.NODE_ENV;\n\nvar ChartComponent = function (_React$Component) {\n  _inherits(ChartComponent, _React$Component);\n\n  function ChartComponent() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ChartComponent);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleOnClick = function (event) {\n      var instance = _this.chartInstance;\n      var _this$props = _this.props,\n          getDatasetAtEvent = _this$props.getDatasetAtEvent,\n          getElementAtEvent = _this$props.getElementAtEvent,\n          getElementsAtEvent = _this$props.getElementsAtEvent,\n          onElementsClick = _this$props.onElementsClick;\n      getDatasetAtEvent && getDatasetAtEvent(instance.getDatasetAtEvent(event), event);\n      getElementAtEvent && getElementAtEvent(instance.getElementAtEvent(event), event);\n      getElementsAtEvent && getElementsAtEvent(instance.getElementsAtEvent(event), event);\n      onElementsClick && onElementsClick(instance.getElementsAtEvent(event), event); // Backward compatibility\n    }, _this.ref = function (element) {\n      _this.element = element;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ChartComponent.prototype.componentWillMount = function componentWillMount() {\n    this.chartInstance = undefined;\n  };\n\n  ChartComponent.prototype.componentDidMount = function componentDidMount() {\n    this.renderChart();\n  };\n\n  ChartComponent.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.redraw) {\n      this.destroyChart();\n      this.renderChart();\n      return;\n    }\n\n    this.updateChart();\n  };\n\n  ChartComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var _props = this.props,\n        redraw = _props.redraw,\n        type = _props.type,\n        options = _props.options,\n        plugins = _props.plugins,\n        legend = _props.legend,\n        height = _props.height,\n        width = _props.width;\n\n    if (nextProps.redraw === true) {\n      return true;\n    }\n\n    if (height !== nextProps.height || width !== nextProps.width) {\n      return true;\n    }\n\n    if (type !== nextProps.type) {\n      return true;\n    }\n\n    if (!isEqual(legend, nextProps.legend)) {\n      return true;\n    }\n\n    if (!isEqual(options, nextProps.options)) {\n      return true;\n    }\n\n    var nextData = this.transformDataProp(nextProps);\n\n    if (!isEqual(this.shadowDataProp, nextData)) {\n      return true;\n    }\n\n    return !isEqual(plugins, nextProps.plugins);\n  };\n\n  ChartComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.destroyChart();\n  };\n\n  ChartComponent.prototype.transformDataProp = function transformDataProp(props) {\n    var data = props.data;\n\n    if (typeof data == 'function') {\n      var node = this.element;\n      return data(node);\n    } else {\n      return data;\n    }\n  }; // Chart.js directly mutates the data.dataset objects by adding _meta proprerty\n  // this makes impossible to compare the current and next data changes\n  // therefore we memoize the data prop while sending a fake to Chart.js for mutation.\n  // see https://github.com/chartjs/Chart.js/blob/master/src/core/core.controller.js#L615-L617\n\n\n  ChartComponent.prototype.memoizeDataProps = function memoizeDataProps() {\n    if (!this.props.data) {\n      return;\n    }\n\n    var data = this.transformDataProp(this.props);\n    this.shadowDataProp = _extends({}, data, {\n      datasets: data.datasets && data.datasets.map(function (set) {\n        return _extends({}, set);\n      })\n    });\n    this.saveCurrentDatasets(); // to remove the dataset metadata from this chart when the chart is destroyed\n\n    return data;\n  };\n\n  ChartComponent.prototype.checkDatasets = function checkDatasets(datasets) {\n    var isDev = NODE_ENV !== 'production' && NODE_ENV !== 'prod';\n    var usingCustomKeyProvider = this.props.datasetKeyProvider !== ChartComponent.getLabelAsKey;\n    var multipleDatasets = datasets.length > 1;\n\n    if (isDev && multipleDatasets && !usingCustomKeyProvider) {\n      var shouldWarn = false;\n      datasets.forEach(function (dataset) {\n        if (!dataset.label) {\n          shouldWarn = true;\n        }\n      });\n\n      if (shouldWarn) {\n        console.error('[react-chartjs-2] Warning: Each dataset needs a unique key. By default, the \"label\" property on each dataset is used. Alternatively, you may provide a \"datasetKeyProvider\" as a prop that returns a unique key.');\n      }\n    }\n  };\n\n  ChartComponent.prototype.getCurrentDatasets = function getCurrentDatasets() {\n    return this.chartInstance && this.chartInstance.config.data && this.chartInstance.config.data.datasets || [];\n  };\n\n  ChartComponent.prototype.saveCurrentDatasets = function saveCurrentDatasets() {\n    var _this2 = this;\n\n    this.datasets = this.datasets || {};\n    var currentDatasets = this.getCurrentDatasets();\n    currentDatasets.forEach(function (d) {\n      _this2.datasets[_this2.props.datasetKeyProvider(d)] = d;\n    });\n  };\n\n  ChartComponent.prototype.updateChart = function updateChart() {\n    var _this3 = this;\n\n    var options = this.props.options;\n    var data = this.memoizeDataProps(this.props);\n    if (!this.chartInstance) return;\n\n    if (options) {\n      this.chartInstance.options = Chart.helpers.configMerge(this.chartInstance.options, options);\n    } // Pipe datasets to chart instance datasets enabling\n    // seamless transitions\n\n\n    var currentDatasets = this.getCurrentDatasets();\n    var nextDatasets = data.datasets || [];\n    this.checkDatasets(currentDatasets);\n    var currentDatasetsIndexed = keyBy(currentDatasets, this.props.datasetKeyProvider); // We can safely replace the dataset array, as long as we retain the _meta property\n    // on each dataset.\n\n    this.chartInstance.config.data.datasets = nextDatasets.map(function (next) {\n      var current = currentDatasetsIndexed[_this3.props.datasetKeyProvider(next)];\n\n      if (current && current.type === next.type) {\n        // The data array must be edited in place. As chart.js adds listeners to it.\n        current.data.splice(next.data.length);\n        next.data.forEach(function (point, pid) {\n          current.data[pid] = next.data[pid];\n        });\n\n        var _data = next.data,\n            otherProps = _objectWithoutProperties(next, ['data']); // Merge properties. Notice a weakness here. If a property is removed\n        // from next, it will be retained by current and never disappears.\n        // Workaround is to set value to null or undefined in next.\n\n\n        return _extends({}, current, otherProps);\n      } else {\n        return next;\n      }\n    });\n\n    var datasets = data.datasets,\n        rest = _objectWithoutProperties(data, ['datasets']);\n\n    this.chartInstance.config.data = _extends({}, this.chartInstance.config.data, rest);\n    this.chartInstance.update();\n  };\n\n  ChartComponent.prototype.renderChart = function renderChart() {\n    var _props2 = this.props,\n        options = _props2.options,\n        legend = _props2.legend,\n        type = _props2.type,\n        plugins = _props2.plugins;\n    var node = this.element;\n    var data = this.memoizeDataProps();\n\n    if (typeof legend !== 'undefined' && !isEqual(ChartComponent.defaultProps.legend, legend)) {\n      options.legend = legend;\n    }\n\n    this.chartInstance = new Chart(node, {\n      type: type,\n      data: data,\n      options: options,\n      plugins: plugins\n    });\n  };\n\n  ChartComponent.prototype.destroyChart = function destroyChart() {\n    // Put all of the datasets that have existed in the chart back on the chart\n    // so that the metadata associated with this chart get destroyed.\n    // This allows the datasets to be used in another chart. This can happen,\n    // for example, in a tabbed UI where the chart gets created each time the\n    // tab gets switched to the chart and uses the same data).\n    this.saveCurrentDatasets();\n    var datasets = Object.values(this.datasets);\n    this.chartInstance.config.data.datasets = datasets;\n    this.chartInstance.destroy();\n  };\n\n  ChartComponent.prototype.render = function render() {\n    var _props3 = this.props,\n        height = _props3.height,\n        width = _props3.width,\n        id = _props3.id;\n    return React.createElement('canvas', {\n      ref: this.ref,\n      height: height,\n      width: width,\n      id: id,\n      onClick: this.handleOnClick\n    });\n  };\n\n  return ChartComponent;\n}(React.Component);\n\nChartComponent.getLabelAsKey = function (d) {\n  return d.label;\n};\n\nChartComponent.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n  getDatasetAtEvent: PropTypes.func,\n  getElementAtEvent: PropTypes.func,\n  getElementsAtEvent: PropTypes.func,\n  height: PropTypes.number,\n  legend: PropTypes.object,\n  onElementsClick: PropTypes.func,\n  options: PropTypes.object,\n  plugins: PropTypes.arrayOf(PropTypes.object),\n  redraw: PropTypes.bool,\n  type: function type(props, propName, componentName) {\n    if (!Chart.controllers[props[propName]]) {\n      return new Error('Invalid chart type `' + props[propName] + '` supplied to' + ' `' + componentName + '`.');\n    }\n  },\n  width: PropTypes.number,\n  datasetKeyProvider: PropTypes.func\n};\nChartComponent.defaultProps = {\n  legend: {\n    display: true,\n    position: 'bottom'\n  },\n  type: 'doughnut',\n  height: 150,\n  width: 300,\n  redraw: false,\n  options: {},\n  datasetKeyProvider: ChartComponent.getLabelAsKey\n};\nexport default ChartComponent;\nexport var Doughnut = function (_React$Component2) {\n  _inherits(Doughnut, _React$Component2);\n\n  function Doughnut() {\n    _classCallCheck(this, Doughnut);\n\n    return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));\n  }\n\n  Doughnut.prototype.render = function render() {\n    var _this5 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref) {\n        return _this5.chartInstance = _ref && _ref.chartInstance;\n      },\n      type: 'doughnut'\n    }));\n  };\n\n  return Doughnut;\n}(React.Component);\nexport var Pie = function (_React$Component3) {\n  _inherits(Pie, _React$Component3);\n\n  function Pie() {\n    _classCallCheck(this, Pie);\n\n    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));\n  }\n\n  Pie.prototype.render = function render() {\n    var _this7 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref2) {\n        return _this7.chartInstance = _ref2 && _ref2.chartInstance;\n      },\n      type: 'pie'\n    }));\n  };\n\n  return Pie;\n}(React.Component);\nexport var Line = function (_React$Component4) {\n  _inherits(Line, _React$Component4);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));\n  }\n\n  Line.prototype.render = function render() {\n    var _this9 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref3) {\n        return _this9.chartInstance = _ref3 && _ref3.chartInstance;\n      },\n      type: 'line'\n    }));\n  };\n\n  return Line;\n}(React.Component);\nexport var Bar = function (_React$Component5) {\n  _inherits(Bar, _React$Component5);\n\n  function Bar() {\n    _classCallCheck(this, Bar);\n\n    return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));\n  }\n\n  Bar.prototype.render = function render() {\n    var _this11 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref4) {\n        return _this11.chartInstance = _ref4 && _ref4.chartInstance;\n      },\n      type: 'bar'\n    }));\n  };\n\n  return Bar;\n}(React.Component);\nexport var HorizontalBar = function (_React$Component6) {\n  _inherits(HorizontalBar, _React$Component6);\n\n  function HorizontalBar() {\n    _classCallCheck(this, HorizontalBar);\n\n    return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));\n  }\n\n  HorizontalBar.prototype.render = function render() {\n    var _this13 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref5) {\n        return _this13.chartInstance = _ref5 && _ref5.chartInstance;\n      },\n      type: 'horizontalBar'\n    }));\n  };\n\n  return HorizontalBar;\n}(React.Component);\nexport var Radar = function (_React$Component7) {\n  _inherits(Radar, _React$Component7);\n\n  function Radar() {\n    _classCallCheck(this, Radar);\n\n    return _possibleConstructorReturn(this, _React$Component7.apply(this, arguments));\n  }\n\n  Radar.prototype.render = function render() {\n    var _this15 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref6) {\n        return _this15.chartInstance = _ref6 && _ref6.chartInstance;\n      },\n      type: 'radar'\n    }));\n  };\n\n  return Radar;\n}(React.Component);\nexport var Polar = function (_React$Component8) {\n  _inherits(Polar, _React$Component8);\n\n  function Polar() {\n    _classCallCheck(this, Polar);\n\n    return _possibleConstructorReturn(this, _React$Component8.apply(this, arguments));\n  }\n\n  Polar.prototype.render = function render() {\n    var _this17 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref7) {\n        return _this17.chartInstance = _ref7 && _ref7.chartInstance;\n      },\n      type: 'polarArea'\n    }));\n  };\n\n  return Polar;\n}(React.Component);\nexport var Bubble = function (_React$Component9) {\n  _inherits(Bubble, _React$Component9);\n\n  function Bubble() {\n    _classCallCheck(this, Bubble);\n\n    return _possibleConstructorReturn(this, _React$Component9.apply(this, arguments));\n  }\n\n  Bubble.prototype.render = function render() {\n    var _this19 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref8) {\n        return _this19.chartInstance = _ref8 && _ref8.chartInstance;\n      },\n      type: 'bubble'\n    }));\n  };\n\n  return Bubble;\n}(React.Component);\nexport var Scatter = function (_React$Component10) {\n  _inherits(Scatter, _React$Component10);\n\n  function Scatter() {\n    _classCallCheck(this, Scatter);\n\n    return _possibleConstructorReturn(this, _React$Component10.apply(this, arguments));\n  }\n\n  Scatter.prototype.render = function render() {\n    var _this21 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref9) {\n        return _this21.chartInstance = _ref9 && _ref9.chartInstance;\n      },\n      type: 'scatter'\n    }));\n  };\n\n  return Scatter;\n}(React.Component);\nexport var defaults = Chart.defaults;\nexport { Chart };","//! moment.js\n;\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.moment = factory();\n})(this, function () {\n  'use strict';\n\n  var hookCallback;\n\n  function hooks() {\n    return hookCallback.apply(null, arguments);\n  } // This is done to register the method called with moment()\n  // without creating circular dependencies.\n\n\n  function setHookCallback(callback) {\n    hookCallback = callback;\n  }\n\n  function isArray(input) {\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n  }\n\n  function isObject(input) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n  }\n\n  function isObjectEmpty(obj) {\n    if (Object.getOwnPropertyNames) {\n      return Object.getOwnPropertyNames(obj).length === 0;\n    } else {\n      var k;\n\n      for (k in obj) {\n        if (obj.hasOwnProperty(k)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }\n\n  function isUndefined(input) {\n    return input === void 0;\n  }\n\n  function isNumber(input) {\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n  }\n\n  function isDate(input) {\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n  }\n\n  function map(arr, fn) {\n    var res = [],\n        i;\n\n    for (i = 0; i < arr.length; ++i) {\n      res.push(fn(arr[i], i));\n    }\n\n    return res;\n  }\n\n  function hasOwnProp(a, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n  }\n\n  function extend(a, b) {\n    for (var i in b) {\n      if (hasOwnProp(b, i)) {\n        a[i] = b[i];\n      }\n    }\n\n    if (hasOwnProp(b, 'toString')) {\n      a.toString = b.toString;\n    }\n\n    if (hasOwnProp(b, 'valueOf')) {\n      a.valueOf = b.valueOf;\n    }\n\n    return a;\n  }\n\n  function createUTC(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\n  }\n\n  function defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n      empty: false,\n      unusedTokens: [],\n      unusedInput: [],\n      overflow: -2,\n      charsLeftOver: 0,\n      nullInput: false,\n      invalidMonth: null,\n      invalidFormat: false,\n      userInvalidated: false,\n      iso: false,\n      parsedDateParts: [],\n      meridiem: null,\n      rfc2822: false,\n      weekdayMismatch: false\n    };\n  }\n\n  function getParsingFlags(m) {\n    if (m._pf == null) {\n      m._pf = defaultParsingFlags();\n    }\n\n    return m._pf;\n  }\n\n  var some;\n\n  if (Array.prototype.some) {\n    some = Array.prototype.some;\n  } else {\n    some = function some(fun) {\n      var t = Object(this);\n      var len = t.length >>> 0;\n\n      for (var i = 0; i < len; i++) {\n        if (i in t && fun.call(this, t[i], i, t)) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n  }\n\n  function isValid(m) {\n    if (m._isValid == null) {\n      var flags = getParsingFlags(m);\n      var parsedParts = some.call(flags.parsedDateParts, function (i) {\n        return i != null;\n      });\n      var isNowValid = !isNaN(m._d.getTime()) && flags.overflow < 0 && !flags.empty && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);\n\n      if (m._strict) {\n        isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === undefined;\n      }\n\n      if (Object.isFrozen == null || !Object.isFrozen(m)) {\n        m._isValid = isNowValid;\n      } else {\n        return isNowValid;\n      }\n    }\n\n    return m._isValid;\n  }\n\n  function createInvalid(flags) {\n    var m = createUTC(NaN);\n\n    if (flags != null) {\n      extend(getParsingFlags(m), flags);\n    } else {\n      getParsingFlags(m).userInvalidated = true;\n    }\n\n    return m;\n  } // Plugins that add properties should also add the key here (null value),\n  // so we can properly clone ourselves.\n\n\n  var momentProperties = hooks.momentProperties = [];\n\n  function copyConfig(to, from) {\n    var i, prop, val;\n\n    if (!isUndefined(from._isAMomentObject)) {\n      to._isAMomentObject = from._isAMomentObject;\n    }\n\n    if (!isUndefined(from._i)) {\n      to._i = from._i;\n    }\n\n    if (!isUndefined(from._f)) {\n      to._f = from._f;\n    }\n\n    if (!isUndefined(from._l)) {\n      to._l = from._l;\n    }\n\n    if (!isUndefined(from._strict)) {\n      to._strict = from._strict;\n    }\n\n    if (!isUndefined(from._tzm)) {\n      to._tzm = from._tzm;\n    }\n\n    if (!isUndefined(from._isUTC)) {\n      to._isUTC = from._isUTC;\n    }\n\n    if (!isUndefined(from._offset)) {\n      to._offset = from._offset;\n    }\n\n    if (!isUndefined(from._pf)) {\n      to._pf = getParsingFlags(from);\n    }\n\n    if (!isUndefined(from._locale)) {\n      to._locale = from._locale;\n    }\n\n    if (momentProperties.length > 0) {\n      for (i = 0; i < momentProperties.length; i++) {\n        prop = momentProperties[i];\n        val = from[prop];\n\n        if (!isUndefined(val)) {\n          to[prop] = val;\n        }\n      }\n    }\n\n    return to;\n  }\n\n  var updateInProgress = false; // Moment prototype object\n\n  function Moment(config) {\n    copyConfig(this, config);\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n\n    if (!this.isValid()) {\n      this._d = new Date(NaN);\n    } // Prevent infinite loop in case updateOffset creates new moment\n    // objects.\n\n\n    if (updateInProgress === false) {\n      updateInProgress = true;\n      hooks.updateOffset(this);\n      updateInProgress = false;\n    }\n  }\n\n  function isMoment(obj) {\n    return obj instanceof Moment || obj != null && obj._isAMomentObject != null;\n  }\n\n  function absFloor(number) {\n    if (number < 0) {\n      // -0 -> 0\n      return Math.ceil(number) || 0;\n    } else {\n      return Math.floor(number);\n    }\n  }\n\n  function toInt(argumentForCoercion) {\n    var coercedNumber = +argumentForCoercion,\n        value = 0;\n\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n      value = absFloor(coercedNumber);\n    }\n\n    return value;\n  } // compare two arrays, return the number of differences\n\n\n  function compareArrays(array1, array2, dontConvert) {\n    var len = Math.min(array1.length, array2.length),\n        lengthDiff = Math.abs(array1.length - array2.length),\n        diffs = 0,\n        i;\n\n    for (i = 0; i < len; i++) {\n      if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {\n        diffs++;\n      }\n    }\n\n    return diffs + lengthDiff;\n  }\n\n  function warn(msg) {\n    if (hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {\n      console.warn('Deprecation warning: ' + msg);\n    }\n  }\n\n  function deprecate(msg, fn) {\n    var firstTime = true;\n    return extend(function () {\n      if (hooks.deprecationHandler != null) {\n        hooks.deprecationHandler(null, msg);\n      }\n\n      if (firstTime) {\n        var args = [];\n        var arg;\n\n        for (var i = 0; i < arguments.length; i++) {\n          arg = '';\n\n          if (typeof arguments[i] === 'object') {\n            arg += '\\n[' + i + '] ';\n\n            for (var key in arguments[0]) {\n              arg += key + ': ' + arguments[0][key] + ', ';\n            }\n\n            arg = arg.slice(0, -2); // Remove trailing comma and space\n          } else {\n            arg = arguments[i];\n          }\n\n          args.push(arg);\n        }\n\n        warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + new Error().stack);\n        firstTime = false;\n      }\n\n      return fn.apply(this, arguments);\n    }, fn);\n  }\n\n  var deprecations = {};\n\n  function deprecateSimple(name, msg) {\n    if (hooks.deprecationHandler != null) {\n      hooks.deprecationHandler(name, msg);\n    }\n\n    if (!deprecations[name]) {\n      warn(msg);\n      deprecations[name] = true;\n    }\n  }\n\n  hooks.suppressDeprecationWarnings = false;\n  hooks.deprecationHandler = null;\n\n  function isFunction(input) {\n    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n  }\n\n  function set(config) {\n    var prop, i;\n\n    for (i in config) {\n      prop = config[i];\n\n      if (isFunction(prop)) {\n        this[i] = prop;\n      } else {\n        this['_' + i] = prop;\n      }\n    }\n\n    this._config = config; // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n\n    this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + '|' + /\\d{1,2}/.source);\n  }\n\n  function mergeConfigs(parentConfig, childConfig) {\n    var res = extend({}, parentConfig),\n        prop;\n\n    for (prop in childConfig) {\n      if (hasOwnProp(childConfig, prop)) {\n        if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n          res[prop] = {};\n          extend(res[prop], parentConfig[prop]);\n          extend(res[prop], childConfig[prop]);\n        } else if (childConfig[prop] != null) {\n          res[prop] = childConfig[prop];\n        } else {\n          delete res[prop];\n        }\n      }\n    }\n\n    for (prop in parentConfig) {\n      if (hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject(parentConfig[prop])) {\n        // make sure changes to properties don't modify parent config\n        res[prop] = extend({}, res[prop]);\n      }\n    }\n\n    return res;\n  }\n\n  function Locale(config) {\n    if (config != null) {\n      this.set(config);\n    }\n  }\n\n  var keys;\n\n  if (Object.keys) {\n    keys = Object.keys;\n  } else {\n    keys = function keys(obj) {\n      var i,\n          res = [];\n\n      for (i in obj) {\n        if (hasOwnProp(obj, i)) {\n          res.push(i);\n        }\n      }\n\n      return res;\n    };\n  }\n\n  var defaultCalendar = {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L'\n  };\n\n  function calendar(key, mom, now) {\n    var output = this._calendar[key] || this._calendar['sameElse'];\n    return isFunction(output) ? output.call(mom, now) : output;\n  }\n\n  var defaultLongDateFormat = {\n    LTS: 'h:mm:ss A',\n    LT: 'h:mm A',\n    L: 'MM/DD/YYYY',\n    LL: 'MMMM D, YYYY',\n    LLL: 'MMMM D, YYYY h:mm A',\n    LLLL: 'dddd, MMMM D, YYYY h:mm A'\n  };\n\n  function longDateFormat(key) {\n    var format = this._longDateFormat[key],\n        formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n      return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n      return val.slice(1);\n    });\n    return this._longDateFormat[key];\n  }\n\n  var defaultInvalidDate = 'Invalid date';\n\n  function invalidDate() {\n    return this._invalidDate;\n  }\n\n  var defaultOrdinal = '%d';\n  var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n  function ordinal(number) {\n    return this._ordinal.replace('%d', number);\n  }\n\n  var defaultRelativeTime = {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few seconds',\n    ss: '%d seconds',\n    m: 'a minute',\n    mm: '%d minutes',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: '%d days',\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years'\n  };\n\n  function relativeTime(number, withoutSuffix, string, isFuture) {\n    var output = this._relativeTime[string];\n    return isFunction(output) ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);\n  }\n\n  function pastFuture(diff, output) {\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n  }\n\n  var aliases = {};\n\n  function addUnitAlias(unit, shorthand) {\n    var lowerCase = unit.toLowerCase();\n    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n  }\n\n  function normalizeUnits(units) {\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n  }\n\n  function normalizeObjectUnits(inputObject) {\n    var normalizedInput = {},\n        normalizedProp,\n        prop;\n\n    for (prop in inputObject) {\n      if (hasOwnProp(inputObject, prop)) {\n        normalizedProp = normalizeUnits(prop);\n\n        if (normalizedProp) {\n          normalizedInput[normalizedProp] = inputObject[prop];\n        }\n      }\n    }\n\n    return normalizedInput;\n  }\n\n  var priorities = {};\n\n  function addUnitPriority(unit, priority) {\n    priorities[unit] = priority;\n  }\n\n  function getPrioritizedUnits(unitsObj) {\n    var units = [];\n\n    for (var u in unitsObj) {\n      units.push({\n        unit: u,\n        priority: priorities[u]\n      });\n    }\n\n    units.sort(function (a, b) {\n      return a.priority - b.priority;\n    });\n    return units;\n  }\n\n  function zeroFill(number, targetLength, forceSign) {\n    var absNumber = '' + Math.abs(number),\n        zerosToFill = targetLength - absNumber.length,\n        sign = number >= 0;\n    return (sign ? forceSign ? '+' : '' : '-') + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n  }\n\n  var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n  var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n  var formatFunctions = {};\n  var formatTokenFunctions = {}; // token:    'M'\n  // padded:   ['MM', 2]\n  // ordinal:  'Mo'\n  // callback: function () { this.month() + 1 }\n\n  function addFormatToken(token, padded, ordinal, callback) {\n    var func = callback;\n\n    if (typeof callback === 'string') {\n      func = function func() {\n        return this[callback]();\n      };\n    }\n\n    if (token) {\n      formatTokenFunctions[token] = func;\n    }\n\n    if (padded) {\n      formatTokenFunctions[padded[0]] = function () {\n        return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n      };\n    }\n\n    if (ordinal) {\n      formatTokenFunctions[ordinal] = function () {\n        return this.localeData().ordinal(func.apply(this, arguments), token);\n      };\n    }\n  }\n\n  function removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n      return input.replace(/^\\[|\\]$/g, '');\n    }\n\n    return input.replace(/\\\\/g, '');\n  }\n\n  function makeFormatFunction(format) {\n    var array = format.match(formattingTokens),\n        i,\n        length;\n\n    for (i = 0, length = array.length; i < length; i++) {\n      if (formatTokenFunctions[array[i]]) {\n        array[i] = formatTokenFunctions[array[i]];\n      } else {\n        array[i] = removeFormattingTokens(array[i]);\n      }\n    }\n\n    return function (mom) {\n      var output = '',\n          i;\n\n      for (i = 0; i < length; i++) {\n        output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n      }\n\n      return output;\n    };\n  } // format date using native date object\n\n\n  function formatMoment(m, format) {\n    if (!m.isValid()) {\n      return m.localeData().invalidDate();\n    }\n\n    format = expandFormat(format, m.localeData());\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n    return formatFunctions[format](m);\n  }\n\n  function expandFormat(format, locale) {\n    var i = 5;\n\n    function replaceLongDateFormatTokens(input) {\n      return locale.longDateFormat(input) || input;\n    }\n\n    localFormattingTokens.lastIndex = 0;\n\n    while (i >= 0 && localFormattingTokens.test(format)) {\n      format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n      localFormattingTokens.lastIndex = 0;\n      i -= 1;\n    }\n\n    return format;\n  }\n\n  var match1 = /\\d/; //       0 - 9\n\n  var match2 = /\\d\\d/; //      00 - 99\n\n  var match3 = /\\d{3}/; //     000 - 999\n\n  var match4 = /\\d{4}/; //    0000 - 9999\n\n  var match6 = /[+-]?\\d{6}/; // -999999 - 999999\n\n  var match1to2 = /\\d\\d?/; //       0 - 99\n\n  var match3to4 = /\\d\\d\\d\\d?/; //     999 - 9999\n\n  var match5to6 = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n\n  var match1to3 = /\\d{1,3}/; //       0 - 999\n\n  var match1to4 = /\\d{1,4}/; //       0 - 9999\n\n  var match1to6 = /[+-]?\\d{1,6}/; // -999999 - 999999\n\n  var matchUnsigned = /\\d+/; //       0 - inf\n\n  var matchSigned = /[+-]?\\d+/; //    -inf - inf\n\n  var matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n\n  var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n  var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n  // any word (or two) characters or numbers including two/three word month in arabic.\n  // includes scottish gaelic two word and hyphenated months\n\n  var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n  var regexes = {};\n\n  function addRegexToken(token, regex, strictRegex) {\n    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n      return isStrict && strictRegex ? strictRegex : regex;\n    };\n  }\n\n  function getParseRegexForToken(token, config) {\n    if (!hasOwnProp(regexes, token)) {\n      return new RegExp(unescapeFormat(token));\n    }\n\n    return regexes[token](config._strict, config._locale);\n  } // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n\n\n  function unescapeFormat(s) {\n    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n      return p1 || p2 || p3 || p4;\n    }));\n  }\n\n  function regexEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  }\n\n  var tokens = {};\n\n  function addParseToken(token, callback) {\n    var i,\n        func = callback;\n\n    if (typeof token === 'string') {\n      token = [token];\n    }\n\n    if (isNumber(callback)) {\n      func = function func(input, array) {\n        array[callback] = toInt(input);\n      };\n    }\n\n    for (i = 0; i < token.length; i++) {\n      tokens[token[i]] = func;\n    }\n  }\n\n  function addWeekParseToken(token, callback) {\n    addParseToken(token, function (input, array, config, token) {\n      config._w = config._w || {};\n      callback(input, config._w, config, token);\n    });\n  }\n\n  function addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n      tokens[token](input, config._a, config, token);\n    }\n  }\n\n  var YEAR = 0;\n  var MONTH = 1;\n  var DATE = 2;\n  var HOUR = 3;\n  var MINUTE = 4;\n  var SECOND = 5;\n  var MILLISECOND = 6;\n  var WEEK = 7;\n  var WEEKDAY = 8; // FORMATTING\n\n  addFormatToken('Y', 0, 0, function () {\n    var y = this.year();\n    return y <= 9999 ? '' + y : '+' + y;\n  });\n  addFormatToken(0, ['YY', 2], 0, function () {\n    return this.year() % 100;\n  });\n  addFormatToken(0, ['YYYY', 4], 0, 'year');\n  addFormatToken(0, ['YYYYY', 5], 0, 'year');\n  addFormatToken(0, ['YYYYYY', 6, true], 0, 'year'); // ALIASES\n\n  addUnitAlias('year', 'y'); // PRIORITIES\n\n  addUnitPriority('year', 1); // PARSING\n\n  addRegexToken('Y', matchSigned);\n  addRegexToken('YY', match1to2, match2);\n  addRegexToken('YYYY', match1to4, match4);\n  addRegexToken('YYYYY', match1to6, match6);\n  addRegexToken('YYYYYY', match1to6, match6);\n  addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n  addParseToken('YYYY', function (input, array) {\n    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n  });\n  addParseToken('YY', function (input, array) {\n    array[YEAR] = hooks.parseTwoDigitYear(input);\n  });\n  addParseToken('Y', function (input, array) {\n    array[YEAR] = parseInt(input, 10);\n  }); // HELPERS\n\n  function daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n  }\n\n  function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n  } // HOOKS\n\n\n  hooks.parseTwoDigitYear = function (input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n  }; // MOMENTS\n\n\n  var getSetYear = makeGetSet('FullYear', true);\n\n  function getIsLeapYear() {\n    return isLeapYear(this.year());\n  }\n\n  function makeGetSet(unit, keepTime) {\n    return function (value) {\n      if (value != null) {\n        set$1(this, unit, value);\n        hooks.updateOffset(this, keepTime);\n        return this;\n      } else {\n        return get(this, unit);\n      }\n    };\n  }\n\n  function get(mom, unit) {\n    return mom.isValid() ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n  }\n\n  function set$1(mom, unit, value) {\n    if (mom.isValid() && !isNaN(value)) {\n      if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n      } else {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n      }\n    }\n  } // MOMENTS\n\n\n  function stringGet(units) {\n    units = normalizeUnits(units);\n\n    if (isFunction(this[units])) {\n      return this[units]();\n    }\n\n    return this;\n  }\n\n  function stringSet(units, value) {\n    if (typeof units === 'object') {\n      units = normalizeObjectUnits(units);\n      var prioritized = getPrioritizedUnits(units);\n\n      for (var i = 0; i < prioritized.length; i++) {\n        this[prioritized[i].unit](units[prioritized[i].unit]);\n      }\n    } else {\n      units = normalizeUnits(units);\n\n      if (isFunction(this[units])) {\n        return this[units](value);\n      }\n    }\n\n    return this;\n  }\n\n  function mod(n, x) {\n    return (n % x + x) % x;\n  }\n\n  var indexOf;\n\n  if (Array.prototype.indexOf) {\n    indexOf = Array.prototype.indexOf;\n  } else {\n    indexOf = function indexOf(o) {\n      // I know\n      var i;\n\n      for (i = 0; i < this.length; ++i) {\n        if (this[i] === o) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n  }\n\n  function daysInMonth(year, month) {\n    if (isNaN(year) || isNaN(month)) {\n      return NaN;\n    }\n\n    var modMonth = mod(month, 12);\n    year += (month - modMonth) / 12;\n    return modMonth === 1 ? isLeapYear(year) ? 29 : 28 : 31 - modMonth % 7 % 2;\n  } // FORMATTING\n\n\n  addFormatToken('M', ['MM', 2], 'Mo', function () {\n    return this.month() + 1;\n  });\n  addFormatToken('MMM', 0, 0, function (format) {\n    return this.localeData().monthsShort(this, format);\n  });\n  addFormatToken('MMMM', 0, 0, function (format) {\n    return this.localeData().months(this, format);\n  }); // ALIASES\n\n  addUnitAlias('month', 'M'); // PRIORITY\n\n  addUnitPriority('month', 8); // PARSING\n\n  addRegexToken('M', match1to2);\n  addRegexToken('MM', match1to2, match2);\n  addRegexToken('MMM', function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n  });\n  addRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n  });\n  addParseToken(['M', 'MM'], function (input, array) {\n    array[MONTH] = toInt(input) - 1;\n  });\n  addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    var month = config._locale.monthsParse(input, token, config._strict); // if we didn't find a month name, mark the date as invalid.\n\n\n    if (month != null) {\n      array[MONTH] = month;\n    } else {\n      getParsingFlags(config).invalidMonth = input;\n    }\n  }); // LOCALES\n\n  var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n  var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n\n  function localeMonths(m, format) {\n    if (!m) {\n      return isArray(this._months) ? this._months : this._months['standalone'];\n    }\n\n    return isArray(this._months) ? this._months[m.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n\n  function localeMonthsShort(m, format) {\n    if (!m) {\n      return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort['standalone'];\n    }\n\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  function handleStrictParse(monthName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = monthName.toLocaleLowerCase();\n\n    if (!this._monthsParse) {\n      // this is not used\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n\n      for (i = 0; i < 12; ++i) {\n        mom = createUTC([2000, i]);\n        this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n        this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeMonthsParse(monthName, format, strict) {\n    var i, mom, regex;\n\n    if (this._monthsParseExact) {\n      return handleStrictParse.call(this, monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n    } // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n\n      if (strict && !this._longMonthsParse[i]) {\n        this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n        this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n      }\n\n      if (!strict && !this._monthsParse[i]) {\n        regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n        this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (!strict && this._monthsParse[i].test(monthName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function setMonth(mom, value) {\n    var dayOfMonth;\n\n    if (!mom.isValid()) {\n      // No op\n      return mom;\n    }\n\n    if (typeof value === 'string') {\n      if (/^\\d+$/.test(value)) {\n        value = toInt(value);\n      } else {\n        value = mom.localeData().monthsParse(value); // TODO: Another silent failure?\n\n        if (!isNumber(value)) {\n          return mom;\n        }\n      }\n    }\n\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n\n    return mom;\n  }\n\n  function getSetMonth(value) {\n    if (value != null) {\n      setMonth(this, value);\n      hooks.updateOffset(this, true);\n      return this;\n    } else {\n      return get(this, 'Month');\n    }\n  }\n\n  function getDaysInMonth() {\n    return daysInMonth(this.year(), this.month());\n  }\n\n  var defaultMonthsShortRegex = matchWord;\n\n  function monthsShortRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsShortStrictRegex;\n      } else {\n        return this._monthsShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsShortRegex')) {\n        this._monthsShortRegex = defaultMonthsShortRegex;\n      }\n\n      return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n  }\n\n  var defaultMonthsRegex = matchWord;\n\n  function monthsRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsStrictRegex;\n      } else {\n        return this._monthsRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        this._monthsRegex = defaultMonthsRegex;\n      }\n\n      return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;\n    }\n  }\n\n  function computeMonthsParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom;\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n      shortPieces.push(this.monthsShort(mom, ''));\n      longPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.monthsShort(mom, ''));\n    } // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 12; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n    }\n\n    for (i = 0; i < 24; i++) {\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n  }\n\n  function createDate(y, m, d, h, M, s, ms) {\n    // can't just apply() to create a date:\n    // https://stackoverflow.com/q/181348\n    var date; // the date constructor remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      date = new Date(y + 400, m, d, h, M, s, ms);\n\n      if (isFinite(date.getFullYear())) {\n        date.setFullYear(y);\n      }\n    } else {\n      date = new Date(y, m, d, h, M, s, ms);\n    }\n\n    return date;\n  }\n\n  function createUTCDate(y) {\n    var date; // the Date.UTC function remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      var args = Array.prototype.slice.call(arguments); // preserve leap years using a full 400 year cycle, then reset\n\n      args[0] = y + 400;\n      date = new Date(Date.UTC.apply(null, args));\n\n      if (isFinite(date.getUTCFullYear())) {\n        date.setUTCFullYear(y);\n      }\n    } else {\n      date = new Date(Date.UTC.apply(null, arguments));\n    }\n\n    return date;\n  } // start-of-first-week - start-of-year\n\n\n  function firstWeekOffset(year, dow, doy) {\n    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n    fwd = 7 + dow - doy,\n        // first-week day local weekday -- which local weekday is fwd\n    fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n    return -fwdlw + fwd - 1;\n  } // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n\n\n  function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    var localWeekday = (7 + weekday - dow) % 7,\n        weekOffset = firstWeekOffset(year, dow, doy),\n        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n        resYear,\n        resDayOfYear;\n\n    if (dayOfYear <= 0) {\n      resYear = year - 1;\n      resDayOfYear = daysInYear(resYear) + dayOfYear;\n    } else if (dayOfYear > daysInYear(year)) {\n      resYear = year + 1;\n      resDayOfYear = dayOfYear - daysInYear(year);\n    } else {\n      resYear = year;\n      resDayOfYear = dayOfYear;\n    }\n\n    return {\n      year: resYear,\n      dayOfYear: resDayOfYear\n    };\n  }\n\n  function weekOfYear(mom, dow, doy) {\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n        resWeek,\n        resYear;\n\n    if (week < 1) {\n      resYear = mom.year() - 1;\n      resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n      resWeek = week - weeksInYear(mom.year(), dow, doy);\n      resYear = mom.year() + 1;\n    } else {\n      resYear = mom.year();\n      resWeek = week;\n    }\n\n    return {\n      week: resWeek,\n      year: resYear\n    };\n  }\n\n  function weeksInYear(year, dow, doy) {\n    var weekOffset = firstWeekOffset(year, dow, doy),\n        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n  } // FORMATTING\n\n\n  addFormatToken('w', ['ww', 2], 'wo', 'week');\n  addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek'); // ALIASES\n\n  addUnitAlias('week', 'w');\n  addUnitAlias('isoWeek', 'W'); // PRIORITIES\n\n  addUnitPriority('week', 5);\n  addUnitPriority('isoWeek', 5); // PARSING\n\n  addRegexToken('w', match1to2);\n  addRegexToken('ww', match1to2, match2);\n  addRegexToken('W', match1to2);\n  addRegexToken('WW', match1to2, match2);\n  addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n  }); // HELPERS\n  // LOCALES\n\n  function localeWeek(mom) {\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n  }\n\n  var defaultLocaleWeek = {\n    dow: 0,\n    // Sunday is the first day of the week.\n    doy: 6 // The week that contains Jan 6th is the first week of the year.\n\n  };\n\n  function localeFirstDayOfWeek() {\n    return this._week.dow;\n  }\n\n  function localeFirstDayOfYear() {\n    return this._week.doy;\n  } // MOMENTS\n\n\n  function getSetWeek(input) {\n    var week = this.localeData().week(this);\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  }\n\n  function getSetISOWeek(input) {\n    var week = weekOfYear(this, 1, 4).week;\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('d', 0, 'do', 'day');\n  addFormatToken('dd', 0, 0, function (format) {\n    return this.localeData().weekdaysMin(this, format);\n  });\n  addFormatToken('ddd', 0, 0, function (format) {\n    return this.localeData().weekdaysShort(this, format);\n  });\n  addFormatToken('dddd', 0, 0, function (format) {\n    return this.localeData().weekdays(this, format);\n  });\n  addFormatToken('e', 0, 0, 'weekday');\n  addFormatToken('E', 0, 0, 'isoWeekday'); // ALIASES\n\n  addUnitAlias('day', 'd');\n  addUnitAlias('weekday', 'e');\n  addUnitAlias('isoWeekday', 'E'); // PRIORITY\n\n  addUnitPriority('day', 11);\n  addUnitPriority('weekday', 11);\n  addUnitPriority('isoWeekday', 11); // PARSING\n\n  addRegexToken('d', match1to2);\n  addRegexToken('e', match1to2);\n  addRegexToken('E', match1to2);\n  addRegexToken('dd', function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n  });\n  addRegexToken('ddd', function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n  });\n  addRegexToken('dddd', function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n  });\n  addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n    var weekday = config._locale.weekdaysParse(input, token, config._strict); // if we didn't get a weekday name, mark the date as invalid\n\n\n    if (weekday != null) {\n      week.d = weekday;\n    } else {\n      getParsingFlags(config).invalidWeekday = input;\n    }\n  });\n  addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n    week[token] = toInt(input);\n  }); // HELPERS\n\n  function parseWeekday(input, locale) {\n    if (typeof input !== 'string') {\n      return input;\n    }\n\n    if (!isNaN(input)) {\n      return parseInt(input, 10);\n    }\n\n    input = locale.weekdaysParse(input);\n\n    if (typeof input === 'number') {\n      return input;\n    }\n\n    return null;\n  }\n\n  function parseIsoWeekday(input, locale) {\n    if (typeof input === 'string') {\n      return locale.weekdaysParse(input) % 7 || 7;\n    }\n\n    return isNaN(input) ? null : input;\n  } // LOCALES\n\n\n  function shiftWeekdays(ws, n) {\n    return ws.slice(n, 7).concat(ws.slice(0, n));\n  }\n\n  var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n\n  function localeWeekdays(m, format) {\n    var weekdays = isArray(this._weekdays) ? this._weekdays : this._weekdays[m && m !== true && this._weekdays.isFormat.test(format) ? 'format' : 'standalone'];\n    return m === true ? shiftWeekdays(weekdays, this._week.dow) : m ? weekdays[m.day()] : weekdays;\n  }\n\n  var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n\n  function localeWeekdaysShort(m) {\n    return m === true ? shiftWeekdays(this._weekdaysShort, this._week.dow) : m ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n  }\n\n  var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n\n  function localeWeekdaysMin(m) {\n    return m === true ? shiftWeekdays(this._weekdaysMin, this._week.dow) : m ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n  }\n\n  function handleStrictParse$1(weekdayName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = weekdayName.toLocaleLowerCase();\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._minWeekdaysParse = [];\n\n      for (i = 0; i < 7; ++i) {\n        mom = createUTC([2000, 1]).day(i);\n        this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n        this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n        this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeWeekdaysParse(weekdayName, format, strict) {\n    var i, mom, regex;\n\n    if (this._weekdaysParseExact) {\n      return handleStrictParse$1.call(this, weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._minWeekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n\n      if (strict && !this._fullWeekdaysParse[i]) {\n        this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n      }\n\n      if (!this._weekdaysParse[i]) {\n        regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n        this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function getSetDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n\n    if (input != null) {\n      input = parseWeekday(input, this.localeData());\n      return this.add(input - day, 'd');\n    } else {\n      return day;\n    }\n  }\n\n  function getSetLocaleDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n    return input == null ? weekday : this.add(input - weekday, 'd');\n  }\n\n  function getSetISODayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    } // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n\n\n    if (input != null) {\n      var weekday = parseIsoWeekday(input, this.localeData());\n      return this.day(this.day() % 7 ? weekday : weekday - 7);\n    } else {\n      return this.day() || 7;\n    }\n  }\n\n  var defaultWeekdaysRegex = matchWord;\n\n  function weekdaysRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysStrictRegex;\n      } else {\n        return this._weekdaysRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this._weekdaysRegex = defaultWeekdaysRegex;\n      }\n\n      return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n  }\n\n  var defaultWeekdaysShortRegex = matchWord;\n\n  function weekdaysShortRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysShortStrictRegex;\n      } else {\n        return this._weekdaysShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n        this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n      }\n\n      return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n  }\n\n  var defaultWeekdaysMinRegex = matchWord;\n\n  function weekdaysMinRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysMinStrictRegex;\n      } else {\n        return this._weekdaysMinRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n        this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n      }\n\n      return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n  }\n\n  function computeWeekdaysParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var minPieces = [],\n        shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom,\n        minp,\n        shortp,\n        longp;\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n      minp = this.weekdaysMin(mom, '');\n      shortp = this.weekdaysShort(mom, '');\n      longp = this.weekdays(mom, '');\n      minPieces.push(minp);\n      shortPieces.push(shortp);\n      longPieces.push(longp);\n      mixedPieces.push(minp);\n      mixedPieces.push(shortp);\n      mixedPieces.push(longp);\n    } // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 7; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n  } // FORMATTING\n\n\n  function hFormat() {\n    return this.hours() % 12 || 12;\n  }\n\n  function kFormat() {\n    return this.hours() || 24;\n  }\n\n  addFormatToken('H', ['HH', 2], 0, 'hour');\n  addFormatToken('h', ['hh', 2], 0, hFormat);\n  addFormatToken('k', ['kk', 2], 0, kFormat);\n  addFormatToken('hmm', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('hmmss', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n  addFormatToken('Hmm', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('Hmmss', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n\n  function meridiem(token, lowercase) {\n    addFormatToken(token, 0, 0, function () {\n      return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n    });\n  }\n\n  meridiem('a', true);\n  meridiem('A', false); // ALIASES\n\n  addUnitAlias('hour', 'h'); // PRIORITY\n\n  addUnitPriority('hour', 13); // PARSING\n\n  function matchMeridiem(isStrict, locale) {\n    return locale._meridiemParse;\n  }\n\n  addRegexToken('a', matchMeridiem);\n  addRegexToken('A', matchMeridiem);\n  addRegexToken('H', match1to2);\n  addRegexToken('h', match1to2);\n  addRegexToken('k', match1to2);\n  addRegexToken('HH', match1to2, match2);\n  addRegexToken('hh', match1to2, match2);\n  addRegexToken('kk', match1to2, match2);\n  addRegexToken('hmm', match3to4);\n  addRegexToken('hmmss', match5to6);\n  addRegexToken('Hmm', match3to4);\n  addRegexToken('Hmmss', match5to6);\n  addParseToken(['H', 'HH'], HOUR);\n  addParseToken(['k', 'kk'], function (input, array, config) {\n    var kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n  });\n  addParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n  });\n  addParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('Hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n  });\n  addParseToken('Hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n  }); // LOCALES\n\n  function localeIsPM(input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return (input + '').toLowerCase().charAt(0) === 'p';\n  }\n\n  var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n\n  function localeMeridiem(hours, minutes, isLower) {\n    if (hours > 11) {\n      return isLower ? 'pm' : 'PM';\n    } else {\n      return isLower ? 'am' : 'AM';\n    }\n  } // MOMENTS\n  // Setting the hour should keep the time, because the user explicitly\n  // specified which hour they want. So trying to maintain the same hour (in\n  // a new timezone) makes sense. Adding/subtracting hours does not follow\n  // this rule.\n\n\n  var getSetHour = makeGetSet('Hours', true);\n  var baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n    relativeTime: defaultRelativeTime,\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n    week: defaultLocaleWeek,\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n    meridiemParse: defaultLocaleMeridiemParse\n  }; // internal storage for locale config files\n\n  var locales = {};\n  var localeFamilies = {};\n  var globalLocale;\n\n  function normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n  } // pick the locale from the array\n  // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n  // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n\n\n  function chooseLocale(names) {\n    var i = 0,\n        j,\n        next,\n        locale,\n        split;\n\n    while (i < names.length) {\n      split = normalizeLocale(names[i]).split('-');\n      j = split.length;\n      next = normalizeLocale(names[i + 1]);\n      next = next ? next.split('-') : null;\n\n      while (j > 0) {\n        locale = loadLocale(split.slice(0, j).join('-'));\n\n        if (locale) {\n          return locale;\n        }\n\n        if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n          //the next array item is better than a shallower substring of this one\n          break;\n        }\n\n        j--;\n      }\n\n      i++;\n    }\n\n    return globalLocale;\n  }\n\n  function loadLocale(name) {\n    var oldLocale = null; // TODO: Find a better way to register and load all the locales in Node\n\n    if (!locales[name] && typeof module !== 'undefined' && module && module.exports) {\n      try {\n        oldLocale = globalLocale._abbr;\n        var aliasedRequire = require;\n        aliasedRequire('./locale/' + name);\n        getSetGlobalLocale(oldLocale);\n      } catch (e) {}\n    }\n\n    return locales[name];\n  } // This function will load locale and then set the global locale.  If\n  // no arguments are passed in, it will simply return the current global\n  // locale key.\n\n\n  function getSetGlobalLocale(key, values) {\n    var data;\n\n    if (key) {\n      if (isUndefined(values)) {\n        data = getLocale(key);\n      } else {\n        data = defineLocale(key, values);\n      }\n\n      if (data) {\n        // moment.duration._locale = moment._locale = data;\n        globalLocale = data;\n      } else {\n        if (typeof console !== 'undefined' && console.warn) {\n          //warn user if arguments are passed but the locale could not be set\n          console.warn('Locale ' + key + ' not found. Did you forget to load it?');\n        }\n      }\n    }\n\n    return globalLocale._abbr;\n  }\n\n  function defineLocale(name, config) {\n    if (config !== null) {\n      var locale,\n          parentConfig = baseConfig;\n      config.abbr = name;\n\n      if (locales[name] != null) {\n        deprecateSimple('defineLocaleOverride', 'use moment.updateLocale(localeName, config) to change ' + 'an existing locale. moment.defineLocale(localeName, ' + 'config) should only be used for creating a new locale ' + 'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n        parentConfig = locales[name]._config;\n      } else if (config.parentLocale != null) {\n        if (locales[config.parentLocale] != null) {\n          parentConfig = locales[config.parentLocale]._config;\n        } else {\n          locale = loadLocale(config.parentLocale);\n\n          if (locale != null) {\n            parentConfig = locale._config;\n          } else {\n            if (!localeFamilies[config.parentLocale]) {\n              localeFamilies[config.parentLocale] = [];\n            }\n\n            localeFamilies[config.parentLocale].push({\n              name: name,\n              config: config\n            });\n            return null;\n          }\n        }\n      }\n\n      locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n      if (localeFamilies[name]) {\n        localeFamilies[name].forEach(function (x) {\n          defineLocale(x.name, x.config);\n        });\n      } // backwards compat for now: also set the locale\n      // make sure we set the locale AFTER all child locales have been\n      // created, so we won't end up with the child locale set.\n\n\n      getSetGlobalLocale(name);\n      return locales[name];\n    } else {\n      // useful for testing\n      delete locales[name];\n      return null;\n    }\n  }\n\n  function updateLocale(name, config) {\n    if (config != null) {\n      var locale,\n          tmpLocale,\n          parentConfig = baseConfig; // MERGE\n\n      tmpLocale = loadLocale(name);\n\n      if (tmpLocale != null) {\n        parentConfig = tmpLocale._config;\n      }\n\n      config = mergeConfigs(parentConfig, config);\n      locale = new Locale(config);\n      locale.parentLocale = locales[name];\n      locales[name] = locale; // backwards compat for now: also set the locale\n\n      getSetGlobalLocale(name);\n    } else {\n      // pass null for config to unupdate, useful for tests\n      if (locales[name] != null) {\n        if (locales[name].parentLocale != null) {\n          locales[name] = locales[name].parentLocale;\n        } else if (locales[name] != null) {\n          delete locales[name];\n        }\n      }\n    }\n\n    return locales[name];\n  } // returns locale data\n\n\n  function getLocale(key) {\n    var locale;\n\n    if (key && key._locale && key._locale._abbr) {\n      key = key._locale._abbr;\n    }\n\n    if (!key) {\n      return globalLocale;\n    }\n\n    if (!isArray(key)) {\n      //short-circuit everything else\n      locale = loadLocale(key);\n\n      if (locale) {\n        return locale;\n      }\n\n      key = [key];\n    }\n\n    return chooseLocale(key);\n  }\n\n  function listLocales() {\n    return keys(locales);\n  }\n\n  function checkOverflow(m) {\n    var overflow;\n    var a = m._a;\n\n    if (a && getParsingFlags(m).overflow === -2) {\n      overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;\n\n      if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n        overflow = DATE;\n      }\n\n      if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n        overflow = WEEK;\n      }\n\n      if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n        overflow = WEEKDAY;\n      }\n\n      getParsingFlags(m).overflow = overflow;\n    }\n\n    return m;\n  } // Pick the first defined of two or three arguments.\n\n\n  function defaults(a, b, c) {\n    if (a != null) {\n      return a;\n    }\n\n    if (b != null) {\n      return b;\n    }\n\n    return c;\n  }\n\n  function currentDateArray(config) {\n    // hooks is actually the exported moment object\n    var nowValue = new Date(hooks.now());\n\n    if (config._useUTC) {\n      return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n  } // convert an array to a date.\n  // the array should mirror the parameters below\n  // note: all values past the year are optional and will default to the lowest possible value.\n  // [year, month, day , hour, minute, second, millisecond]\n\n\n  function configFromArray(config) {\n    var i,\n        date,\n        input = [],\n        currentDate,\n        expectedWeekday,\n        yearToUse;\n\n    if (config._d) {\n      return;\n    }\n\n    currentDate = currentDateArray(config); //compute day of the year from weeks and weekdays\n\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n      dayOfYearFromWeekInfo(config);\n    } //if the day of the year is set, figure out what it is\n\n\n    if (config._dayOfYear != null) {\n      yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n      if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n        getParsingFlags(config)._overflowDayOfYear = true;\n      }\n\n      date = createUTCDate(yearToUse, 0, config._dayOfYear);\n      config._a[MONTH] = date.getUTCMonth();\n      config._a[DATE] = date.getUTCDate();\n    } // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n\n\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n      config._a[i] = input[i] = currentDate[i];\n    } // Zero out whatever was not defaulted, including time\n\n\n    for (; i < 7; i++) {\n      config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];\n    } // Check for 24:00:00.000\n\n\n    if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {\n      config._nextDay = true;\n      config._a[HOUR] = 0;\n    }\n\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay(); // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n\n    if (config._tzm != null) {\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n\n    if (config._nextDay) {\n      config._a[HOUR] = 24;\n    } // check for mismatching day of week\n\n\n    if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n      getParsingFlags(config).weekdayMismatch = true;\n    }\n  }\n\n  function dayOfYearFromWeekInfo(config) {\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n    w = config._w;\n\n    if (w.GG != null || w.W != null || w.E != null) {\n      dow = 1;\n      doy = 4; // TODO: We need to take the current isoWeekYear, but that depends on\n      // how we interpret now (local, utc, fixed offset). So create\n      // a now version of current config (take local/utc/offset flags, and\n      // create now).\n\n      weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n      week = defaults(w.W, 1);\n      weekday = defaults(w.E, 1);\n\n      if (weekday < 1 || weekday > 7) {\n        weekdayOverflow = true;\n      }\n    } else {\n      dow = config._locale._week.dow;\n      doy = config._locale._week.doy;\n      var curWeek = weekOfYear(createLocal(), dow, doy);\n      weekYear = defaults(w.gg, config._a[YEAR], curWeek.year); // Default to current week.\n\n      week = defaults(w.w, curWeek.week);\n\n      if (w.d != null) {\n        // weekday -- low day numbers are considered next week\n        weekday = w.d;\n\n        if (weekday < 0 || weekday > 6) {\n          weekdayOverflow = true;\n        }\n      } else if (w.e != null) {\n        // local weekday -- counting starts from beginning of week\n        weekday = w.e + dow;\n\n        if (w.e < 0 || w.e > 6) {\n          weekdayOverflow = true;\n        }\n      } else {\n        // default to beginning of week\n        weekday = dow;\n      }\n    }\n\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n      getParsingFlags(config)._overflowWeeks = true;\n    } else if (weekdayOverflow != null) {\n      getParsingFlags(config)._overflowWeekday = true;\n    } else {\n      temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n      config._a[YEAR] = temp.year;\n      config._dayOfYear = temp.dayOfYear;\n    }\n  } // iso 8601 regex\n  // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n\n\n  var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n  var isoDates = [['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/], ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/], ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/], ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false], ['YYYY-DDD', /\\d{4}-\\d{3}/], ['YYYY-MM', /\\d{4}-\\d\\d/, false], ['YYYYYYMMDD', /[+-]\\d{10}/], ['YYYYMMDD', /\\d{8}/], // YYYYMM is NOT allowed by the standard\n  ['GGGG[W]WWE', /\\d{4}W\\d{3}/], ['GGGG[W]WW', /\\d{4}W\\d{2}/, false], ['YYYYDDD', /\\d{7}/]]; // iso time formats and regexes\n\n  var isoTimes = [['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/], ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/], ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/], ['HH:mm', /\\d\\d:\\d\\d/], ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/], ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/], ['HHmmss', /\\d\\d\\d\\d\\d\\d/], ['HHmm', /\\d\\d\\d\\d/], ['HH', /\\d\\d/]];\n  var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i; // date from iso format\n\n  function configFromISO(config) {\n    var i,\n        l,\n        string = config._i,\n        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n        allowTime,\n        dateFormat,\n        timeFormat,\n        tzFormat;\n\n    if (match) {\n      getParsingFlags(config).iso = true;\n\n      for (i = 0, l = isoDates.length; i < l; i++) {\n        if (isoDates[i][1].exec(match[1])) {\n          dateFormat = isoDates[i][0];\n          allowTime = isoDates[i][2] !== false;\n          break;\n        }\n      }\n\n      if (dateFormat == null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[3]) {\n        for (i = 0, l = isoTimes.length; i < l; i++) {\n          if (isoTimes[i][1].exec(match[3])) {\n            // match[2] should be 'T' or space\n            timeFormat = (match[2] || ' ') + isoTimes[i][0];\n            break;\n          }\n        }\n\n        if (timeFormat == null) {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      if (!allowTime && timeFormat != null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[4]) {\n        if (tzRegex.exec(match[4])) {\n          tzFormat = 'Z';\n        } else {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n      configFromStringAndFormat(config);\n    } else {\n      config._isValid = false;\n    }\n  } // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n\n\n  var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n  function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n    var result = [untruncateYear(yearStr), defaultLocaleMonthsShort.indexOf(monthStr), parseInt(dayStr, 10), parseInt(hourStr, 10), parseInt(minuteStr, 10)];\n\n    if (secondStr) {\n      result.push(parseInt(secondStr, 10));\n    }\n\n    return result;\n  }\n\n  function untruncateYear(yearStr) {\n    var year = parseInt(yearStr, 10);\n\n    if (year <= 49) {\n      return 2000 + year;\n    } else if (year <= 999) {\n      return 1900 + year;\n    }\n\n    return year;\n  }\n\n  function preprocessRFC2822(s) {\n    // Remove comments and folding whitespace and replace multiple-spaces with a single space\n    return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n  }\n\n  function checkWeekday(weekdayStr, parsedInput, config) {\n    if (weekdayStr) {\n      // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n      var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n          weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n\n      if (weekdayProvided !== weekdayActual) {\n        getParsingFlags(config).weekdayMismatch = true;\n        config._isValid = false;\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  var obsOffsets = {\n    UT: 0,\n    GMT: 0,\n    EDT: -4 * 60,\n    EST: -5 * 60,\n    CDT: -5 * 60,\n    CST: -6 * 60,\n    MDT: -6 * 60,\n    MST: -7 * 60,\n    PDT: -7 * 60,\n    PST: -8 * 60\n  };\n\n  function calculateOffset(obsOffset, militaryOffset, numOffset) {\n    if (obsOffset) {\n      return obsOffsets[obsOffset];\n    } else if (militaryOffset) {\n      // the only allowed military tz is Z\n      return 0;\n    } else {\n      var hm = parseInt(numOffset, 10);\n      var m = hm % 100,\n          h = (hm - m) / 100;\n      return h * 60 + m;\n    }\n  } // date and time from ref 2822 format\n\n\n  function configFromRFC2822(config) {\n    var match = rfc2822.exec(preprocessRFC2822(config._i));\n\n    if (match) {\n      var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n\n      if (!checkWeekday(match[1], parsedArray, config)) {\n        return;\n      }\n\n      config._a = parsedArray;\n      config._tzm = calculateOffset(match[8], match[9], match[10]);\n      config._d = createUTCDate.apply(null, config._a);\n\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n      getParsingFlags(config).rfc2822 = true;\n    } else {\n      config._isValid = false;\n    }\n  } // date from iso format or fallback\n\n\n  function configFromString(config) {\n    var matched = aspNetJsonRegex.exec(config._i);\n\n    if (matched !== null) {\n      config._d = new Date(+matched[1]);\n      return;\n    }\n\n    configFromISO(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    }\n\n    configFromRFC2822(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    } // Final attempt, use Input Fallback\n\n\n    hooks.createFromInputFallback(config);\n  }\n\n  hooks.createFromInputFallback = deprecate('value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' + 'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' + 'discouraged and will be removed in an upcoming major release. Please refer to ' + 'http://momentjs.com/guides/#/warnings/js-date/ for more info.', function (config) {\n    config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n  }); // constant that refers to the ISO standard\n\n  hooks.ISO_8601 = function () {}; // constant that refers to the RFC 2822 form\n\n\n  hooks.RFC_2822 = function () {}; // date from string and format string\n\n\n  function configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === hooks.ISO_8601) {\n      configFromISO(config);\n      return;\n    }\n\n    if (config._f === hooks.RFC_2822) {\n      configFromRFC2822(config);\n      return;\n    }\n\n    config._a = [];\n    getParsingFlags(config).empty = true; // This array is used to make a Date, either with `new Date` or `Date.UTC`\n\n    var string = '' + config._i,\n        i,\n        parsedInput,\n        tokens,\n        token,\n        skipped,\n        stringLength = string.length,\n        totalParsedInputLength = 0;\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n    for (i = 0; i < tokens.length; i++) {\n      token = tokens[i];\n      parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0]; // console.log('token', token, 'parsedInput', parsedInput,\n      //         'regex', getParseRegexForToken(token, config));\n\n      if (parsedInput) {\n        skipped = string.substr(0, string.indexOf(parsedInput));\n\n        if (skipped.length > 0) {\n          getParsingFlags(config).unusedInput.push(skipped);\n        }\n\n        string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n        totalParsedInputLength += parsedInput.length;\n      } // don't parse if it's not a known token\n\n\n      if (formatTokenFunctions[token]) {\n        if (parsedInput) {\n          getParsingFlags(config).empty = false;\n        } else {\n          getParsingFlags(config).unusedTokens.push(token);\n        }\n\n        addTimeToArrayFromToken(token, parsedInput, config);\n      } else if (config._strict && !parsedInput) {\n        getParsingFlags(config).unusedTokens.push(token);\n      }\n    } // add remaining unparsed input length to the string\n\n\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n\n    if (string.length > 0) {\n      getParsingFlags(config).unusedInput.push(string);\n    } // clear _12h flag if hour is <= 12\n\n\n    if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) {\n      getParsingFlags(config).bigHour = undefined;\n    }\n\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem; // handle meridiem\n\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n    configFromArray(config);\n    checkOverflow(config);\n  }\n\n  function meridiemFixWrap(locale, hour, meridiem) {\n    var isPm;\n\n    if (meridiem == null) {\n      // nothing to do\n      return hour;\n    }\n\n    if (locale.meridiemHour != null) {\n      return locale.meridiemHour(hour, meridiem);\n    } else if (locale.isPM != null) {\n      // Fallback\n      isPm = locale.isPM(meridiem);\n\n      if (isPm && hour < 12) {\n        hour += 12;\n      }\n\n      if (!isPm && hour === 12) {\n        hour = 0;\n      }\n\n      return hour;\n    } else {\n      // this is not supposed to happen\n      return hour;\n    }\n  } // date from string and array of format strings\n\n\n  function configFromStringAndArray(config) {\n    var tempConfig, bestMoment, scoreToBeat, i, currentScore;\n\n    if (config._f.length === 0) {\n      getParsingFlags(config).invalidFormat = true;\n      config._d = new Date(NaN);\n      return;\n    }\n\n    for (i = 0; i < config._f.length; i++) {\n      currentScore = 0;\n      tempConfig = copyConfig({}, config);\n\n      if (config._useUTC != null) {\n        tempConfig._useUTC = config._useUTC;\n      }\n\n      tempConfig._f = config._f[i];\n      configFromStringAndFormat(tempConfig);\n\n      if (!isValid(tempConfig)) {\n        continue;\n      } // if there is any input that was not parsed add a penalty for that format\n\n\n      currentScore += getParsingFlags(tempConfig).charsLeftOver; //or tokens\n\n      currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n      getParsingFlags(tempConfig).score = currentScore;\n\n      if (scoreToBeat == null || currentScore < scoreToBeat) {\n        scoreToBeat = currentScore;\n        bestMoment = tempConfig;\n      }\n    }\n\n    extend(config, bestMoment || tempConfig);\n  }\n\n  function configFromObject(config) {\n    if (config._d) {\n      return;\n    }\n\n    var i = normalizeObjectUnits(config._i);\n    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n      return obj && parseInt(obj, 10);\n    });\n    configFromArray(config);\n  }\n\n  function createFromConfig(config) {\n    var res = new Moment(checkOverflow(prepareConfig(config)));\n\n    if (res._nextDay) {\n      // Adding is smart enough around DST\n      res.add(1, 'd');\n      res._nextDay = undefined;\n    }\n\n    return res;\n  }\n\n  function prepareConfig(config) {\n    var input = config._i,\n        format = config._f;\n    config._locale = config._locale || getLocale(config._l);\n\n    if (input === null || format === undefined && input === '') {\n      return createInvalid({\n        nullInput: true\n      });\n    }\n\n    if (typeof input === 'string') {\n      config._i = input = config._locale.preparse(input);\n    }\n\n    if (isMoment(input)) {\n      return new Moment(checkOverflow(input));\n    } else if (isDate(input)) {\n      config._d = input;\n    } else if (isArray(format)) {\n      configFromStringAndArray(config);\n    } else if (format) {\n      configFromStringAndFormat(config);\n    } else {\n      configFromInput(config);\n    }\n\n    if (!isValid(config)) {\n      config._d = null;\n    }\n\n    return config;\n  }\n\n  function configFromInput(config) {\n    var input = config._i;\n\n    if (isUndefined(input)) {\n      config._d = new Date(hooks.now());\n    } else if (isDate(input)) {\n      config._d = new Date(input.valueOf());\n    } else if (typeof input === 'string') {\n      configFromString(config);\n    } else if (isArray(input)) {\n      config._a = map(input.slice(0), function (obj) {\n        return parseInt(obj, 10);\n      });\n      configFromArray(config);\n    } else if (isObject(input)) {\n      configFromObject(config);\n    } else if (isNumber(input)) {\n      // from milliseconds\n      config._d = new Date(input);\n    } else {\n      hooks.createFromInputFallback(config);\n    }\n  }\n\n  function createLocalOrUTC(input, format, locale, strict, isUTC) {\n    var c = {};\n\n    if (locale === true || locale === false) {\n      strict = locale;\n      locale = undefined;\n    }\n\n    if (isObject(input) && isObjectEmpty(input) || isArray(input) && input.length === 0) {\n      input = undefined;\n    } // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n\n\n    c._isAMomentObject = true;\n    c._useUTC = c._isUTC = isUTC;\n    c._l = locale;\n    c._i = input;\n    c._f = format;\n    c._strict = strict;\n    return createFromConfig(c);\n  }\n\n  function createLocal(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, false);\n  }\n\n  var prototypeMin = deprecate('moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other < this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  });\n  var prototypeMax = deprecate('moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other > this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  }); // Pick a moment m from moments so that m[fn](other) is true for all\n  // other. This relies on the function fn to be transitive.\n  //\n  // moments should either be an array of moment objects or an array, whose\n  // first element is an array of moment objects.\n\n  function pickBy(fn, moments) {\n    var res, i;\n\n    if (moments.length === 1 && isArray(moments[0])) {\n      moments = moments[0];\n    }\n\n    if (!moments.length) {\n      return createLocal();\n    }\n\n    res = moments[0];\n\n    for (i = 1; i < moments.length; ++i) {\n      if (!moments[i].isValid() || moments[i][fn](res)) {\n        res = moments[i];\n      }\n    }\n\n    return res;\n  } // TODO: Use [].sort instead?\n\n\n  function min() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isBefore', args);\n  }\n\n  function max() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isAfter', args);\n  }\n\n  var now = function now() {\n    return Date.now ? Date.now() : +new Date();\n  };\n\n  var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n  function isDurationValid(m) {\n    for (var key in m) {\n      if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n        return false;\n      }\n    }\n\n    var unitHasDecimal = false;\n\n    for (var i = 0; i < ordering.length; ++i) {\n      if (m[ordering[i]]) {\n        if (unitHasDecimal) {\n          return false; // only allow non-integers for smallest unit\n        }\n\n        if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n          unitHasDecimal = true;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  function isValid$1() {\n    return this._isValid;\n  }\n\n  function createInvalid$1() {\n    return createDuration(NaN);\n  }\n\n  function Duration(duration) {\n    var normalizedInput = normalizeObjectUnits(duration),\n        years = normalizedInput.year || 0,\n        quarters = normalizedInput.quarter || 0,\n        months = normalizedInput.month || 0,\n        weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n        days = normalizedInput.day || 0,\n        hours = normalizedInput.hour || 0,\n        minutes = normalizedInput.minute || 0,\n        seconds = normalizedInput.second || 0,\n        milliseconds = normalizedInput.millisecond || 0;\n    this._isValid = isDurationValid(normalizedInput); // representation for dateAddRemove\n\n    this._milliseconds = +milliseconds + seconds * 1e3 + // 1000\n    minutes * 6e4 + // 1000 * 60\n    hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n\n    this._days = +days + weeks * 7; // It is impossible to translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n\n    this._months = +months + quarters * 3 + years * 12;\n    this._data = {};\n    this._locale = getLocale();\n\n    this._bubble();\n  }\n\n  function isDuration(obj) {\n    return obj instanceof Duration;\n  }\n\n  function absRound(number) {\n    if (number < 0) {\n      return Math.round(-1 * number) * -1;\n    } else {\n      return Math.round(number);\n    }\n  } // FORMATTING\n\n\n  function offset(token, separator) {\n    addFormatToken(token, 0, 0, function () {\n      var offset = this.utcOffset();\n      var sign = '+';\n\n      if (offset < 0) {\n        offset = -offset;\n        sign = '-';\n      }\n\n      return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~offset % 60, 2);\n    });\n  }\n\n  offset('Z', ':');\n  offset('ZZ', ''); // PARSING\n\n  addRegexToken('Z', matchShortOffset);\n  addRegexToken('ZZ', matchShortOffset);\n  addParseToken(['Z', 'ZZ'], function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n  }); // HELPERS\n  // timezone chunker\n  // '+10:00' > ['10',  '00']\n  // '-1530'  > ['-15', '30']\n\n  var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n  function offsetFromString(matcher, string) {\n    var matches = (string || '').match(matcher);\n\n    if (matches === null) {\n      return null;\n    }\n\n    var chunk = matches[matches.length - 1] || [];\n    var parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n    var minutes = +(parts[1] * 60) + toInt(parts[2]);\n    return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n  } // Return a moment from input, that is local/utc/zone equivalent to model.\n\n\n  function cloneWithOffset(input, model) {\n    var res, diff;\n\n    if (model._isUTC) {\n      res = model.clone();\n      diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf(); // Use low-level api, because this fn is low-level api.\n\n      res._d.setTime(res._d.valueOf() + diff);\n\n      hooks.updateOffset(res, false);\n      return res;\n    } else {\n      return createLocal(input).local();\n    }\n  }\n\n  function getDateOffset(m) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n  } // HOOKS\n  // This function will be called whenever a moment is mutated.\n  // It is intended to keep the offset in sync with the timezone.\n\n\n  hooks.updateOffset = function () {}; // MOMENTS\n  // keepLocalTime = true means only change the timezone, without\n  // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n  // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n  // +0200, so we adjust the time as needed, to be valid.\n  //\n  // Keeping the time actually adds/subtracts (one hour)\n  // from the actual represented time. That is why we call updateOffset\n  // a second time. In case it wants us to change the offset again\n  // _changeInProgress == true case, then we have to adjust, because\n  // there is no such time in the given timezone.\n\n\n  function getSetOffset(input, keepLocalTime, keepMinutes) {\n    var offset = this._offset || 0,\n        localAdjust;\n\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    if (input != null) {\n      if (typeof input === 'string') {\n        input = offsetFromString(matchShortOffset, input);\n\n        if (input === null) {\n          return this;\n        }\n      } else if (Math.abs(input) < 16 && !keepMinutes) {\n        input = input * 60;\n      }\n\n      if (!this._isUTC && keepLocalTime) {\n        localAdjust = getDateOffset(this);\n      }\n\n      this._offset = input;\n      this._isUTC = true;\n\n      if (localAdjust != null) {\n        this.add(localAdjust, 'm');\n      }\n\n      if (offset !== input) {\n        if (!keepLocalTime || this._changeInProgress) {\n          addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n        } else if (!this._changeInProgress) {\n          this._changeInProgress = true;\n          hooks.updateOffset(this, true);\n          this._changeInProgress = null;\n        }\n      }\n\n      return this;\n    } else {\n      return this._isUTC ? offset : getDateOffset(this);\n    }\n  }\n\n  function getSetZone(input, keepLocalTime) {\n    if (input != null) {\n      if (typeof input !== 'string') {\n        input = -input;\n      }\n\n      this.utcOffset(input, keepLocalTime);\n      return this;\n    } else {\n      return -this.utcOffset();\n    }\n  }\n\n  function setOffsetToUTC(keepLocalTime) {\n    return this.utcOffset(0, keepLocalTime);\n  }\n\n  function setOffsetToLocal(keepLocalTime) {\n    if (this._isUTC) {\n      this.utcOffset(0, keepLocalTime);\n      this._isUTC = false;\n\n      if (keepLocalTime) {\n        this.subtract(getDateOffset(this), 'm');\n      }\n    }\n\n    return this;\n  }\n\n  function setOffsetToParsedOffset() {\n    if (this._tzm != null) {\n      this.utcOffset(this._tzm, false, true);\n    } else if (typeof this._i === 'string') {\n      var tZone = offsetFromString(matchOffset, this._i);\n\n      if (tZone != null) {\n        this.utcOffset(tZone);\n      } else {\n        this.utcOffset(0, true);\n      }\n    }\n\n    return this;\n  }\n\n  function hasAlignedHourOffset(input) {\n    if (!this.isValid()) {\n      return false;\n    }\n\n    input = input ? createLocal(input).utcOffset() : 0;\n    return (this.utcOffset() - input) % 60 === 0;\n  }\n\n  function isDaylightSavingTime() {\n    return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();\n  }\n\n  function isDaylightSavingTimeShifted() {\n    if (!isUndefined(this._isDSTShifted)) {\n      return this._isDSTShifted;\n    }\n\n    var c = {};\n    copyConfig(c, this);\n    c = prepareConfig(c);\n\n    if (c._a) {\n      var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n      this._isDSTShifted = this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n    } else {\n      this._isDSTShifted = false;\n    }\n\n    return this._isDSTShifted;\n  }\n\n  function isLocal() {\n    return this.isValid() ? !this._isUTC : false;\n  }\n\n  function isUtcOffset() {\n    return this.isValid() ? this._isUTC : false;\n  }\n\n  function isUtc() {\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n  } // ASP.NET json date format regex\n\n\n  var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/; // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n  // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n  // and further modified to allow for strings containing both week and day\n\n  var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n  function createDuration(input, key) {\n    var duration = input,\n        // matching against regexp is expensive, do it on demand\n    match = null,\n        sign,\n        ret,\n        diffRes;\n\n    if (isDuration(input)) {\n      duration = {\n        ms: input._milliseconds,\n        d: input._days,\n        M: input._months\n      };\n    } else if (isNumber(input)) {\n      duration = {};\n\n      if (key) {\n        duration[key] = input;\n      } else {\n        duration.milliseconds = input;\n      }\n    } else if (!!(match = aspNetRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: 0,\n        d: toInt(match[DATE]) * sign,\n        h: toInt(match[HOUR]) * sign,\n        m: toInt(match[MINUTE]) * sign,\n        s: toInt(match[SECOND]) * sign,\n        ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n\n      };\n    } else if (!!(match = isoRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: parseIso(match[2], sign),\n        M: parseIso(match[3], sign),\n        w: parseIso(match[4], sign),\n        d: parseIso(match[5], sign),\n        h: parseIso(match[6], sign),\n        m: parseIso(match[7], sign),\n        s: parseIso(match[8], sign)\n      };\n    } else if (duration == null) {\n      // checks for null or undefined\n      duration = {};\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n      diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n      duration = {};\n      duration.ms = diffRes.milliseconds;\n      duration.M = diffRes.months;\n    }\n\n    ret = new Duration(duration);\n\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n      ret._locale = input._locale;\n    }\n\n    return ret;\n  }\n\n  createDuration.fn = Duration.prototype;\n  createDuration.invalid = createInvalid$1;\n\n  function parseIso(inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    var res = inp && parseFloat(inp.replace(',', '.')); // apply sign while we're at it\n\n    return (isNaN(res) ? 0 : res) * sign;\n  }\n\n  function positiveMomentsDifference(base, other) {\n    var res = {};\n    res.months = other.month() - base.month() + (other.year() - base.year()) * 12;\n\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\n      --res.months;\n    }\n\n    res.milliseconds = +other - +base.clone().add(res.months, 'M');\n    return res;\n  }\n\n  function momentsDifference(base, other) {\n    var res;\n\n    if (!(base.isValid() && other.isValid())) {\n      return {\n        milliseconds: 0,\n        months: 0\n      };\n    }\n\n    other = cloneWithOffset(other, base);\n\n    if (base.isBefore(other)) {\n      res = positiveMomentsDifference(base, other);\n    } else {\n      res = positiveMomentsDifference(other, base);\n      res.milliseconds = -res.milliseconds;\n      res.months = -res.months;\n    }\n\n    return res;\n  } // TODO: remove 'name' arg after deprecation is removed\n\n\n  function createAdder(direction, name) {\n    return function (val, period) {\n      var dur, tmp; //invert the arguments, but complain about it\n\n      if (period !== null && !isNaN(+period)) {\n        deprecateSimple(name, 'moment().' + name + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' + 'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n        tmp = val;\n        val = period;\n        period = tmp;\n      }\n\n      val = typeof val === 'string' ? +val : val;\n      dur = createDuration(val, period);\n      addSubtract(this, dur, direction);\n      return this;\n    };\n  }\n\n  function addSubtract(mom, duration, isAdding, updateOffset) {\n    var milliseconds = duration._milliseconds,\n        days = absRound(duration._days),\n        months = absRound(duration._months);\n\n    if (!mom.isValid()) {\n      // No op\n      return;\n    }\n\n    updateOffset = updateOffset == null ? true : updateOffset;\n\n    if (months) {\n      setMonth(mom, get(mom, 'Month') + months * isAdding);\n    }\n\n    if (days) {\n      set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n    }\n\n    if (milliseconds) {\n      mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n    }\n\n    if (updateOffset) {\n      hooks.updateOffset(mom, days || months);\n    }\n  }\n\n  var add = createAdder(1, 'add');\n  var subtract = createAdder(-1, 'subtract');\n\n  function getCalendarFormat(myMoment, now) {\n    var diff = myMoment.diff(now, 'days', true);\n    return diff < -6 ? 'sameElse' : diff < -1 ? 'lastWeek' : diff < 0 ? 'lastDay' : diff < 1 ? 'sameDay' : diff < 2 ? 'nextDay' : diff < 7 ? 'nextWeek' : 'sameElse';\n  }\n\n  function calendar$1(time, formats) {\n    // We want to compare the start of today, vs this.\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\n    var now = time || createLocal(),\n        sod = cloneWithOffset(now, this).startOf('day'),\n        format = hooks.calendarFormat(this, sod) || 'sameElse';\n    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n  }\n\n  function clone() {\n    return new Moment(this);\n  }\n\n  function isAfter(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() > localInput.valueOf();\n    } else {\n      return localInput.valueOf() < this.clone().startOf(units).valueOf();\n    }\n  }\n\n  function isBefore(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() < localInput.valueOf();\n    } else {\n      return this.clone().endOf(units).valueOf() < localInput.valueOf();\n    }\n  }\n\n  function isBetween(from, to, units, inclusivity) {\n    var localFrom = isMoment(from) ? from : createLocal(from),\n        localTo = isMoment(to) ? to : createLocal(to);\n\n    if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n      return false;\n    }\n\n    inclusivity = inclusivity || '()';\n    return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) && (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));\n  }\n\n  function isSame(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input),\n        inputMs;\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() === localInput.valueOf();\n    } else {\n      inputMs = localInput.valueOf();\n      return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n    }\n  }\n\n  function isSameOrAfter(input, units) {\n    return this.isSame(input, units) || this.isAfter(input, units);\n  }\n\n  function isSameOrBefore(input, units) {\n    return this.isSame(input, units) || this.isBefore(input, units);\n  }\n\n  function diff(input, units, asFloat) {\n    var that, zoneDelta, output;\n\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    that = cloneWithOffset(input, this);\n\n    if (!that.isValid()) {\n      return NaN;\n    }\n\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n    units = normalizeUnits(units);\n\n    switch (units) {\n      case 'year':\n        output = monthDiff(this, that) / 12;\n        break;\n\n      case 'month':\n        output = monthDiff(this, that);\n        break;\n\n      case 'quarter':\n        output = monthDiff(this, that) / 3;\n        break;\n\n      case 'second':\n        output = (this - that) / 1e3;\n        break;\n      // 1000\n\n      case 'minute':\n        output = (this - that) / 6e4;\n        break;\n      // 1000 * 60\n\n      case 'hour':\n        output = (this - that) / 36e5;\n        break;\n      // 1000 * 60 * 60\n\n      case 'day':\n        output = (this - that - zoneDelta) / 864e5;\n        break;\n      // 1000 * 60 * 60 * 24, negate dst\n\n      case 'week':\n        output = (this - that - zoneDelta) / 6048e5;\n        break;\n      // 1000 * 60 * 60 * 24 * 7, negate dst\n\n      default:\n        output = this - that;\n    }\n\n    return asFloat ? output : absFloor(output);\n  }\n\n  function monthDiff(a, b) {\n    // difference in months\n    var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n        // b is in (anchor - 1 month, anchor + 1 month)\n    anchor = a.clone().add(wholeMonthDiff, 'months'),\n        anchor2,\n        adjust;\n\n    if (b - anchor < 0) {\n      anchor2 = a.clone().add(wholeMonthDiff - 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n      anchor2 = a.clone().add(wholeMonthDiff + 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor2 - anchor);\n    } //check for negative zero, return zero if negative zero\n\n\n    return -(wholeMonthDiff + adjust) || 0;\n  }\n\n  hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n  hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n  function toString() {\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n  }\n\n  function toISOString(keepOffset) {\n    if (!this.isValid()) {\n      return null;\n    }\n\n    var utc = keepOffset !== true;\n    var m = utc ? this.clone().utc() : this;\n\n    if (m.year() < 0 || m.year() > 9999) {\n      return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    if (isFunction(Date.prototype.toISOString)) {\n      // native implementation is ~50x faster, use it when we can\n      if (utc) {\n        return this.toDate().toISOString();\n      } else {\n        return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n      }\n    }\n\n    return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n  }\n  /**\n   * Return a human readable representation of a moment that can\n   * also be evaluated to get a new moment which is the same\n   *\n   * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n   */\n\n\n  function inspect() {\n    if (!this.isValid()) {\n      return 'moment.invalid(/* ' + this._i + ' */)';\n    }\n\n    var func = 'moment';\n    var zone = '';\n\n    if (!this.isLocal()) {\n      func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n      zone = 'Z';\n    }\n\n    var prefix = '[' + func + '(\"]';\n    var year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n    var suffix = zone + '[\")]';\n    return this.format(prefix + year + datetime + suffix);\n  }\n\n  function format(inputString) {\n    if (!inputString) {\n      inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n    }\n\n    var output = formatMoment(this, inputString);\n    return this.localeData().postformat(output);\n  }\n\n  function from(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        to: this,\n        from: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function fromNow(withoutSuffix) {\n    return this.from(createLocal(), withoutSuffix);\n  }\n\n  function to(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        from: this,\n        to: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function toNow(withoutSuffix) {\n    return this.to(createLocal(), withoutSuffix);\n  } // If passed a locale key, it will set the locale for this\n  // instance.  Otherwise, it will return the locale configuration\n  // variables for this instance.\n\n\n  function locale(key) {\n    var newLocaleData;\n\n    if (key === undefined) {\n      return this._locale._abbr;\n    } else {\n      newLocaleData = getLocale(key);\n\n      if (newLocaleData != null) {\n        this._locale = newLocaleData;\n      }\n\n      return this;\n    }\n  }\n\n  var lang = deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.', function (key) {\n    if (key === undefined) {\n      return this.localeData();\n    } else {\n      return this.locale(key);\n    }\n  });\n\n  function localeData() {\n    return this._locale;\n  }\n\n  var MS_PER_SECOND = 1000;\n  var MS_PER_MINUTE = 60 * MS_PER_SECOND;\n  var MS_PER_HOUR = 60 * MS_PER_MINUTE;\n  var MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR; // actual modulo - handles negative numbers (for dates before 1970):\n\n  function mod$1(dividend, divisor) {\n    return (dividend % divisor + divisor) % divisor;\n  }\n\n  function localStartOfDate(y, m, d) {\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return new Date(y, m, d).valueOf();\n    }\n  }\n\n  function utcStartOfDate(y, m, d) {\n    // Date.UTC remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return Date.UTC(y, m, d);\n    }\n  }\n\n  function startOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year(), 0, 1);\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3, 1);\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month(), 1);\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday());\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date());\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_MINUTE);\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_SECOND);\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function endOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year() + 1, 0, 1) - 1;\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function valueOf() {\n    return this._d.valueOf() - (this._offset || 0) * 60000;\n  }\n\n  function unix() {\n    return Math.floor(this.valueOf() / 1000);\n  }\n\n  function toDate() {\n    return new Date(this.valueOf());\n  }\n\n  function toArray() {\n    var m = this;\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n  }\n\n  function toObject() {\n    var m = this;\n    return {\n      years: m.year(),\n      months: m.month(),\n      date: m.date(),\n      hours: m.hours(),\n      minutes: m.minutes(),\n      seconds: m.seconds(),\n      milliseconds: m.milliseconds()\n    };\n  }\n\n  function toJSON() {\n    // new Date(NaN).toJSON() === null\n    return this.isValid() ? this.toISOString() : null;\n  }\n\n  function isValid$2() {\n    return isValid(this);\n  }\n\n  function parsingFlags() {\n    return extend({}, getParsingFlags(this));\n  }\n\n  function invalidAt() {\n    return getParsingFlags(this).overflow;\n  }\n\n  function creationData() {\n    return {\n      input: this._i,\n      format: this._f,\n      locale: this._locale,\n      isUTC: this._isUTC,\n      strict: this._strict\n    };\n  } // FORMATTING\n\n\n  addFormatToken(0, ['gg', 2], 0, function () {\n    return this.weekYear() % 100;\n  });\n  addFormatToken(0, ['GG', 2], 0, function () {\n    return this.isoWeekYear() % 100;\n  });\n\n  function addWeekYearFormatToken(token, getter) {\n    addFormatToken(0, [token, token.length], 0, getter);\n  }\n\n  addWeekYearFormatToken('gggg', 'weekYear');\n  addWeekYearFormatToken('ggggg', 'weekYear');\n  addWeekYearFormatToken('GGGG', 'isoWeekYear');\n  addWeekYearFormatToken('GGGGG', 'isoWeekYear'); // ALIASES\n\n  addUnitAlias('weekYear', 'gg');\n  addUnitAlias('isoWeekYear', 'GG'); // PRIORITY\n\n  addUnitPriority('weekYear', 1);\n  addUnitPriority('isoWeekYear', 1); // PARSING\n\n  addRegexToken('G', matchSigned);\n  addRegexToken('g', matchSigned);\n  addRegexToken('GG', match1to2, match2);\n  addRegexToken('gg', match1to2, match2);\n  addRegexToken('GGGG', match1to4, match4);\n  addRegexToken('gggg', match1to4, match4);\n  addRegexToken('GGGGG', match1to6, match6);\n  addRegexToken('ggggg', match1to6, match6);\n  addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n  });\n  addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n    week[token] = hooks.parseTwoDigitYear(input);\n  }); // MOMENTS\n\n  function getSetWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy);\n  }\n\n  function getSetISOWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.isoWeek(), this.isoWeekday(), 1, 4);\n  }\n\n  function getISOWeeksInYear() {\n    return weeksInYear(this.year(), 1, 4);\n  }\n\n  function getWeeksInYear() {\n    var weekInfo = this.localeData()._week;\n\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n  }\n\n  function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n    var weeksTarget;\n\n    if (input == null) {\n      return weekOfYear(this, dow, doy).year;\n    } else {\n      weeksTarget = weeksInYear(input, dow, doy);\n\n      if (week > weeksTarget) {\n        week = weeksTarget;\n      }\n\n      return setWeekAll.call(this, input, week, weekday, dow, doy);\n    }\n  }\n\n  function setWeekAll(weekYear, week, weekday, dow, doy) {\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n    this.year(date.getUTCFullYear());\n    this.month(date.getUTCMonth());\n    this.date(date.getUTCDate());\n    return this;\n  } // FORMATTING\n\n\n  addFormatToken('Q', 0, 'Qo', 'quarter'); // ALIASES\n\n  addUnitAlias('quarter', 'Q'); // PRIORITY\n\n  addUnitPriority('quarter', 7); // PARSING\n\n  addRegexToken('Q', match1);\n  addParseToken('Q', function (input, array) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n  }); // MOMENTS\n\n  function getSetQuarter(input) {\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n  } // FORMATTING\n\n\n  addFormatToken('D', ['DD', 2], 'Do', 'date'); // ALIASES\n\n  addUnitAlias('date', 'D'); // PRIORITY\n\n  addUnitPriority('date', 9); // PARSING\n\n  addRegexToken('D', match1to2);\n  addRegexToken('DD', match1to2, match2);\n  addRegexToken('Do', function (isStrict, locale) {\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    return isStrict ? locale._dayOfMonthOrdinalParse || locale._ordinalParse : locale._dayOfMonthOrdinalParseLenient;\n  });\n  addParseToken(['D', 'DD'], DATE);\n  addParseToken('Do', function (input, array) {\n    array[DATE] = toInt(input.match(match1to2)[0]);\n  }); // MOMENTS\n\n  var getSetDayOfMonth = makeGetSet('Date', true); // FORMATTING\n\n  addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear'); // ALIASES\n\n  addUnitAlias('dayOfYear', 'DDD'); // PRIORITY\n\n  addUnitPriority('dayOfYear', 4); // PARSING\n\n  addRegexToken('DDD', match1to3);\n  addRegexToken('DDDD', match3);\n  addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input);\n  }); // HELPERS\n  // MOMENTS\n\n  function getSetDayOfYear(input) {\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n    return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('m', ['mm', 2], 0, 'minute'); // ALIASES\n\n  addUnitAlias('minute', 'm'); // PRIORITY\n\n  addUnitPriority('minute', 14); // PARSING\n\n  addRegexToken('m', match1to2);\n  addRegexToken('mm', match1to2, match2);\n  addParseToken(['m', 'mm'], MINUTE); // MOMENTS\n\n  var getSetMinute = makeGetSet('Minutes', false); // FORMATTING\n\n  addFormatToken('s', ['ss', 2], 0, 'second'); // ALIASES\n\n  addUnitAlias('second', 's'); // PRIORITY\n\n  addUnitPriority('second', 15); // PARSING\n\n  addRegexToken('s', match1to2);\n  addRegexToken('ss', match1to2, match2);\n  addParseToken(['s', 'ss'], SECOND); // MOMENTS\n\n  var getSetSecond = makeGetSet('Seconds', false); // FORMATTING\n\n  addFormatToken('S', 0, 0, function () {\n    return ~~(this.millisecond() / 100);\n  });\n  addFormatToken(0, ['SS', 2], 0, function () {\n    return ~~(this.millisecond() / 10);\n  });\n  addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n  addFormatToken(0, ['SSSS', 4], 0, function () {\n    return this.millisecond() * 10;\n  });\n  addFormatToken(0, ['SSSSS', 5], 0, function () {\n    return this.millisecond() * 100;\n  });\n  addFormatToken(0, ['SSSSSS', 6], 0, function () {\n    return this.millisecond() * 1000;\n  });\n  addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n    return this.millisecond() * 10000;\n  });\n  addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n    return this.millisecond() * 100000;\n  });\n  addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n    return this.millisecond() * 1000000;\n  }); // ALIASES\n\n  addUnitAlias('millisecond', 'ms'); // PRIORITY\n\n  addUnitPriority('millisecond', 16); // PARSING\n\n  addRegexToken('S', match1to3, match1);\n  addRegexToken('SS', match1to3, match2);\n  addRegexToken('SSS', match1to3, match3);\n  var token;\n\n  for (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n  }\n\n  function parseMs(input, array) {\n    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n  }\n\n  for (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n  } // MOMENTS\n\n\n  var getSetMillisecond = makeGetSet('Milliseconds', false); // FORMATTING\n\n  addFormatToken('z', 0, 0, 'zoneAbbr');\n  addFormatToken('zz', 0, 0, 'zoneName'); // MOMENTS\n\n  function getZoneAbbr() {\n    return this._isUTC ? 'UTC' : '';\n  }\n\n  function getZoneName() {\n    return this._isUTC ? 'Coordinated Universal Time' : '';\n  }\n\n  var proto = Moment.prototype;\n  proto.add = add;\n  proto.calendar = calendar$1;\n  proto.clone = clone;\n  proto.diff = diff;\n  proto.endOf = endOf;\n  proto.format = format;\n  proto.from = from;\n  proto.fromNow = fromNow;\n  proto.to = to;\n  proto.toNow = toNow;\n  proto.get = stringGet;\n  proto.invalidAt = invalidAt;\n  proto.isAfter = isAfter;\n  proto.isBefore = isBefore;\n  proto.isBetween = isBetween;\n  proto.isSame = isSame;\n  proto.isSameOrAfter = isSameOrAfter;\n  proto.isSameOrBefore = isSameOrBefore;\n  proto.isValid = isValid$2;\n  proto.lang = lang;\n  proto.locale = locale;\n  proto.localeData = localeData;\n  proto.max = prototypeMax;\n  proto.min = prototypeMin;\n  proto.parsingFlags = parsingFlags;\n  proto.set = stringSet;\n  proto.startOf = startOf;\n  proto.subtract = subtract;\n  proto.toArray = toArray;\n  proto.toObject = toObject;\n  proto.toDate = toDate;\n  proto.toISOString = toISOString;\n  proto.inspect = inspect;\n  proto.toJSON = toJSON;\n  proto.toString = toString;\n  proto.unix = unix;\n  proto.valueOf = valueOf;\n  proto.creationData = creationData;\n  proto.year = getSetYear;\n  proto.isLeapYear = getIsLeapYear;\n  proto.weekYear = getSetWeekYear;\n  proto.isoWeekYear = getSetISOWeekYear;\n  proto.quarter = proto.quarters = getSetQuarter;\n  proto.month = getSetMonth;\n  proto.daysInMonth = getDaysInMonth;\n  proto.week = proto.weeks = getSetWeek;\n  proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n  proto.weeksInYear = getWeeksInYear;\n  proto.isoWeeksInYear = getISOWeeksInYear;\n  proto.date = getSetDayOfMonth;\n  proto.day = proto.days = getSetDayOfWeek;\n  proto.weekday = getSetLocaleDayOfWeek;\n  proto.isoWeekday = getSetISODayOfWeek;\n  proto.dayOfYear = getSetDayOfYear;\n  proto.hour = proto.hours = getSetHour;\n  proto.minute = proto.minutes = getSetMinute;\n  proto.second = proto.seconds = getSetSecond;\n  proto.millisecond = proto.milliseconds = getSetMillisecond;\n  proto.utcOffset = getSetOffset;\n  proto.utc = setOffsetToUTC;\n  proto.local = setOffsetToLocal;\n  proto.parseZone = setOffsetToParsedOffset;\n  proto.hasAlignedHourOffset = hasAlignedHourOffset;\n  proto.isDST = isDaylightSavingTime;\n  proto.isLocal = isLocal;\n  proto.isUtcOffset = isUtcOffset;\n  proto.isUtc = isUtc;\n  proto.isUTC = isUtc;\n  proto.zoneAbbr = getZoneAbbr;\n  proto.zoneName = getZoneName;\n  proto.dates = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n  proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n  proto.years = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n  proto.zone = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n  proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n  function createUnix(input) {\n    return createLocal(input * 1000);\n  }\n\n  function createInZone() {\n    return createLocal.apply(null, arguments).parseZone();\n  }\n\n  function preParsePostFormat(string) {\n    return string;\n  }\n\n  var proto$1 = Locale.prototype;\n  proto$1.calendar = calendar;\n  proto$1.longDateFormat = longDateFormat;\n  proto$1.invalidDate = invalidDate;\n  proto$1.ordinal = ordinal;\n  proto$1.preparse = preParsePostFormat;\n  proto$1.postformat = preParsePostFormat;\n  proto$1.relativeTime = relativeTime;\n  proto$1.pastFuture = pastFuture;\n  proto$1.set = set;\n  proto$1.months = localeMonths;\n  proto$1.monthsShort = localeMonthsShort;\n  proto$1.monthsParse = localeMonthsParse;\n  proto$1.monthsRegex = monthsRegex;\n  proto$1.monthsShortRegex = monthsShortRegex;\n  proto$1.week = localeWeek;\n  proto$1.firstDayOfYear = localeFirstDayOfYear;\n  proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n  proto$1.weekdays = localeWeekdays;\n  proto$1.weekdaysMin = localeWeekdaysMin;\n  proto$1.weekdaysShort = localeWeekdaysShort;\n  proto$1.weekdaysParse = localeWeekdaysParse;\n  proto$1.weekdaysRegex = weekdaysRegex;\n  proto$1.weekdaysShortRegex = weekdaysShortRegex;\n  proto$1.weekdaysMinRegex = weekdaysMinRegex;\n  proto$1.isPM = localeIsPM;\n  proto$1.meridiem = localeMeridiem;\n\n  function get$1(format, index, field, setter) {\n    var locale = getLocale();\n    var utc = createUTC().set(setter, index);\n    return locale[field](utc, format);\n  }\n\n  function listMonthsImpl(format, index, field) {\n    if (isNumber(format)) {\n      index = format;\n      format = undefined;\n    }\n\n    format = format || '';\n\n    if (index != null) {\n      return get$1(format, index, field, 'month');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 12; i++) {\n      out[i] = get$1(format, i, field, 'month');\n    }\n\n    return out;\n  } // ()\n  // (5)\n  // (fmt, 5)\n  // (fmt)\n  // (true)\n  // (true, 5)\n  // (true, fmt, 5)\n  // (true, fmt)\n\n\n  function listWeekdaysImpl(localeSorted, format, index, field) {\n    if (typeof localeSorted === 'boolean') {\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    } else {\n      format = localeSorted;\n      index = format;\n      localeSorted = false;\n\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    }\n\n    var locale = getLocale(),\n        shift = localeSorted ? locale._week.dow : 0;\n\n    if (index != null) {\n      return get$1(format, (index + shift) % 7, field, 'day');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 7; i++) {\n      out[i] = get$1(format, (i + shift) % 7, field, 'day');\n    }\n\n    return out;\n  }\n\n  function listMonths(format, index) {\n    return listMonthsImpl(format, index, 'months');\n  }\n\n  function listMonthsShort(format, index) {\n    return listMonthsImpl(format, index, 'monthsShort');\n  }\n\n  function listWeekdays(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n  }\n\n  function listWeekdaysShort(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n  }\n\n  function listWeekdaysMin(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n  }\n\n  getSetGlobalLocale('en', {\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal: function ordinal(number) {\n      var b = number % 10,\n          output = toInt(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n      return number + output;\n    }\n  }); // Side effect imports\n\n  hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n  hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n  var mathAbs = Math.abs;\n\n  function abs() {\n    var data = this._data;\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days = mathAbs(this._days);\n    this._months = mathAbs(this._months);\n    data.milliseconds = mathAbs(data.milliseconds);\n    data.seconds = mathAbs(data.seconds);\n    data.minutes = mathAbs(data.minutes);\n    data.hours = mathAbs(data.hours);\n    data.months = mathAbs(data.months);\n    data.years = mathAbs(data.years);\n    return this;\n  }\n\n  function addSubtract$1(duration, input, value, direction) {\n    var other = createDuration(input, value);\n    duration._milliseconds += direction * other._milliseconds;\n    duration._days += direction * other._days;\n    duration._months += direction * other._months;\n    return duration._bubble();\n  } // supports only 2.0-style add(1, 's') or add(duration)\n\n\n  function add$1(input, value) {\n    return addSubtract$1(this, input, value, 1);\n  } // supports only 2.0-style subtract(1, 's') or subtract(duration)\n\n\n  function subtract$1(input, value) {\n    return addSubtract$1(this, input, value, -1);\n  }\n\n  function absCeil(number) {\n    if (number < 0) {\n      return Math.floor(number);\n    } else {\n      return Math.ceil(number);\n    }\n  }\n\n  function bubble() {\n    var milliseconds = this._milliseconds;\n    var days = this._days;\n    var months = this._months;\n    var data = this._data;\n    var seconds, minutes, hours, years, monthsFromDays; // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n\n    if (!(milliseconds >= 0 && days >= 0 && months >= 0 || milliseconds <= 0 && days <= 0 && months <= 0)) {\n      milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n      days = 0;\n      months = 0;\n    } // The following code bubbles up values, see the tests for\n    // examples of what that means.\n\n\n    data.milliseconds = milliseconds % 1000;\n    seconds = absFloor(milliseconds / 1000);\n    data.seconds = seconds % 60;\n    minutes = absFloor(seconds / 60);\n    data.minutes = minutes % 60;\n    hours = absFloor(minutes / 60);\n    data.hours = hours % 24;\n    days += absFloor(hours / 24); // convert days to months\n\n    monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays)); // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12;\n    data.days = days;\n    data.months = months;\n    data.years = years;\n    return this;\n  }\n\n  function daysToMonths(days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return days * 4800 / 146097;\n  }\n\n  function monthsToDays(months) {\n    // the reverse of daysToMonths\n    return months * 146097 / 4800;\n  }\n\n  function as(units) {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    var days;\n    var months;\n    var milliseconds = this._milliseconds;\n    units = normalizeUnits(units);\n\n    if (units === 'month' || units === 'quarter' || units === 'year') {\n      days = this._days + milliseconds / 864e5;\n      months = this._months + daysToMonths(days);\n\n      switch (units) {\n        case 'month':\n          return months;\n\n        case 'quarter':\n          return months / 3;\n\n        case 'year':\n          return months / 12;\n      }\n    } else {\n      // handle milliseconds separately because of floating point math errors (issue #1867)\n      days = this._days + Math.round(monthsToDays(this._months));\n\n      switch (units) {\n        case 'week':\n          return days / 7 + milliseconds / 6048e5;\n\n        case 'day':\n          return days + milliseconds / 864e5;\n\n        case 'hour':\n          return days * 24 + milliseconds / 36e5;\n\n        case 'minute':\n          return days * 1440 + milliseconds / 6e4;\n\n        case 'second':\n          return days * 86400 + milliseconds / 1000;\n        // Math.floor prevents floating point math errors here\n\n        case 'millisecond':\n          return Math.floor(days * 864e5) + milliseconds;\n\n        default:\n          throw new Error('Unknown unit ' + units);\n      }\n    }\n  } // TODO: Use this.as('ms')?\n\n\n  function valueOf$1() {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + toInt(this._months / 12) * 31536e6;\n  }\n\n  function makeAs(alias) {\n    return function () {\n      return this.as(alias);\n    };\n  }\n\n  var asMilliseconds = makeAs('ms');\n  var asSeconds = makeAs('s');\n  var asMinutes = makeAs('m');\n  var asHours = makeAs('h');\n  var asDays = makeAs('d');\n  var asWeeks = makeAs('w');\n  var asMonths = makeAs('M');\n  var asQuarters = makeAs('Q');\n  var asYears = makeAs('y');\n\n  function clone$1() {\n    return createDuration(this);\n  }\n\n  function get$2(units) {\n    units = normalizeUnits(units);\n    return this.isValid() ? this[units + 's']() : NaN;\n  }\n\n  function makeGetter(name) {\n    return function () {\n      return this.isValid() ? this._data[name] : NaN;\n    };\n  }\n\n  var milliseconds = makeGetter('milliseconds');\n  var seconds = makeGetter('seconds');\n  var minutes = makeGetter('minutes');\n  var hours = makeGetter('hours');\n  var days = makeGetter('days');\n  var months = makeGetter('months');\n  var years = makeGetter('years');\n\n  function weeks() {\n    return absFloor(this.days() / 7);\n  }\n\n  var round = Math.round;\n  var thresholds = {\n    ss: 44,\n    // a few seconds to seconds\n    s: 45,\n    // seconds to minute\n    m: 45,\n    // minutes to hour\n    h: 22,\n    // hours to day\n    d: 26,\n    // days to month\n    M: 11 // months to year\n\n  }; // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n\n  function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n  }\n\n  function relativeTime$1(posNegDuration, withoutSuffix, locale) {\n    var duration = createDuration(posNegDuration).abs();\n    var seconds = round(duration.as('s'));\n    var minutes = round(duration.as('m'));\n    var hours = round(duration.as('h'));\n    var days = round(duration.as('d'));\n    var months = round(duration.as('M'));\n    var years = round(duration.as('y'));\n    var a = seconds <= thresholds.ss && ['s', seconds] || seconds < thresholds.s && ['ss', seconds] || minutes <= 1 && ['m'] || minutes < thresholds.m && ['mm', minutes] || hours <= 1 && ['h'] || hours < thresholds.h && ['hh', hours] || days <= 1 && ['d'] || days < thresholds.d && ['dd', days] || months <= 1 && ['M'] || months < thresholds.M && ['MM', months] || years <= 1 && ['y'] || ['yy', years];\n    a[2] = withoutSuffix;\n    a[3] = +posNegDuration > 0;\n    a[4] = locale;\n    return substituteTimeAgo.apply(null, a);\n  } // This function allows you to set the rounding function for relative time strings\n\n\n  function getSetRelativeTimeRounding(roundingFunction) {\n    if (roundingFunction === undefined) {\n      return round;\n    }\n\n    if (typeof roundingFunction === 'function') {\n      round = roundingFunction;\n      return true;\n    }\n\n    return false;\n  } // This function allows you to set a threshold for relative time strings\n\n\n  function getSetRelativeTimeThreshold(threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n      return false;\n    }\n\n    if (limit === undefined) {\n      return thresholds[threshold];\n    }\n\n    thresholds[threshold] = limit;\n\n    if (threshold === 's') {\n      thresholds.ss = limit - 1;\n    }\n\n    return true;\n  }\n\n  function humanize(withSuffix) {\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var locale = this.localeData();\n    var output = relativeTime$1(this, !withSuffix, locale);\n\n    if (withSuffix) {\n      output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n  }\n\n  var abs$1 = Math.abs;\n\n  function sign(x) {\n    return (x > 0) - (x < 0) || +x;\n  }\n\n  function toISOString$1() {\n    // for ISO strings we do not use the normal bubbling rules:\n    //  * milliseconds bubble up until they become hours\n    //  * days do not bubble at all\n    //  * months bubble up until they become years\n    // This is because there is no context-free conversion between hours and days\n    // (think of clock changes)\n    // and also not between days and months (28-31 days per month)\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var seconds = abs$1(this._milliseconds) / 1000;\n    var days = abs$1(this._days);\n    var months = abs$1(this._months);\n    var minutes, hours, years; // 3600 seconds -> 60 minutes -> 1 hour\n\n    minutes = absFloor(seconds / 60);\n    hours = absFloor(minutes / 60);\n    seconds %= 60;\n    minutes %= 60; // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12; // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n\n    var Y = years;\n    var M = months;\n    var D = days;\n    var h = hours;\n    var m = minutes;\n    var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n    var total = this.asSeconds();\n\n    if (!total) {\n      // this is the same as C#'s (Noda) and python (isodate)...\n      // but not other JS (goog.date)\n      return 'P0D';\n    }\n\n    var totalSign = total < 0 ? '-' : '';\n    var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n    var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n    var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n    return totalSign + 'P' + (Y ? ymSign + Y + 'Y' : '') + (M ? ymSign + M + 'M' : '') + (D ? daysSign + D + 'D' : '') + (h || m || s ? 'T' : '') + (h ? hmsSign + h + 'H' : '') + (m ? hmsSign + m + 'M' : '') + (s ? hmsSign + s + 'S' : '');\n  }\n\n  var proto$2 = Duration.prototype;\n  proto$2.isValid = isValid$1;\n  proto$2.abs = abs;\n  proto$2.add = add$1;\n  proto$2.subtract = subtract$1;\n  proto$2.as = as;\n  proto$2.asMilliseconds = asMilliseconds;\n  proto$2.asSeconds = asSeconds;\n  proto$2.asMinutes = asMinutes;\n  proto$2.asHours = asHours;\n  proto$2.asDays = asDays;\n  proto$2.asWeeks = asWeeks;\n  proto$2.asMonths = asMonths;\n  proto$2.asQuarters = asQuarters;\n  proto$2.asYears = asYears;\n  proto$2.valueOf = valueOf$1;\n  proto$2._bubble = bubble;\n  proto$2.clone = clone$1;\n  proto$2.get = get$2;\n  proto$2.milliseconds = milliseconds;\n  proto$2.seconds = seconds;\n  proto$2.minutes = minutes;\n  proto$2.hours = hours;\n  proto$2.days = days;\n  proto$2.weeks = weeks;\n  proto$2.months = months;\n  proto$2.years = years;\n  proto$2.humanize = humanize;\n  proto$2.toISOString = toISOString$1;\n  proto$2.toString = toISOString$1;\n  proto$2.toJSON = toISOString$1;\n  proto$2.locale = locale;\n  proto$2.localeData = localeData;\n  proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n  proto$2.lang = lang; // Side effect imports\n  // FORMATTING\n\n  addFormatToken('X', 0, 0, 'unix');\n  addFormatToken('x', 0, 0, 'valueOf'); // PARSING\n\n  addRegexToken('x', matchSigned);\n  addRegexToken('X', matchTimestamp);\n  addParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input, 10) * 1000);\n  });\n  addParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n  }); // Side effect imports\n\n  hooks.version = '2.24.0';\n  setHookCallback(createLocal);\n  hooks.fn = proto;\n  hooks.min = min;\n  hooks.max = max;\n  hooks.now = now;\n  hooks.utc = createUTC;\n  hooks.unix = createUnix;\n  hooks.months = listMonths;\n  hooks.isDate = isDate;\n  hooks.locale = getSetGlobalLocale;\n  hooks.invalid = createInvalid;\n  hooks.duration = createDuration;\n  hooks.isMoment = isMoment;\n  hooks.weekdays = listWeekdays;\n  hooks.parseZone = createInZone;\n  hooks.localeData = getLocale;\n  hooks.isDuration = isDuration;\n  hooks.monthsShort = listMonthsShort;\n  hooks.weekdaysMin = listWeekdaysMin;\n  hooks.defineLocale = defineLocale;\n  hooks.updateLocale = updateLocale;\n  hooks.locales = listLocales;\n  hooks.weekdaysShort = listWeekdaysShort;\n  hooks.normalizeUnits = normalizeUnits;\n  hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n  hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n  hooks.calendarFormat = getCalendarFormat;\n  hooks.prototype = proto; // currently HTML5 input type only supports 24-hour formats\n\n  hooks.HTML5_FMT = {\n    DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',\n    // <input type=\"datetime-local\" />\n    DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',\n    // <input type=\"datetime-local\" step=\"1\" />\n    DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',\n    // <input type=\"datetime-local\" step=\"0.001\" />\n    DATE: 'YYYY-MM-DD',\n    // <input type=\"date\" />\n    TIME: 'HH:mm',\n    // <input type=\"time\" />\n    TIME_SECONDS: 'HH:mm:ss',\n    // <input type=\"time\" step=\"1\" />\n    TIME_MS: 'HH:mm:ss.SSS',\n    // <input type=\"time\" step=\"0.001\" />\n    WEEK: 'GGGG-[W]WW',\n    // <input type=\"week\" />\n    MONTH: 'YYYY-MM' // <input type=\"month\" />\n\n  };\n  return hooks;\n});","var baseIsEqual = require('./_baseIsEqual');\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\n\n\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\n\n\nvar keyBy = createAggregator(function (result, value, key) {\n  baseAssignValue(result, key, value);\n});\nmodule.exports = keyBy;","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\n\n\nfunction createAggregator(setter, initializer) {\n  return function (collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;","var baseEach = require('./_baseEach');\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\n\n\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function (value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\n\n\nvar baseEach = createBaseEach(baseForOwn);\nmodule.exports = baseEach;","var isArrayLike = require('./isArrayLike');\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\n\n\nfunction createBaseEach(eachFunc, fromRight) {\n  return function (collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while (fromRight ? index-- : ++index < length) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : factory(global['custom-tooltips'] = {});\n})(this, function (exports) {\n  'use strict';\n  /**\n   * --------------------------------------------------------------------------\n   * CoreUI Plugins - Custom Tooltips for Chart.js (v1.2.0): custom-tooltips.js\n   * Licensed under MIT (https://coreui.io/license)\n   * --------------------------------------------------------------------------\n   */\n\n  function CustomTooltips(tooltipModel) {\n    var _this = this; // Add unique id if not exist\n\n\n    var _setCanvasId = function _setCanvasId() {\n      var _idMaker = function _idMaker() {\n        var _hex = 16;\n        var _multiplier = 0x10000;\n        return ((1 + Math.random()) * _multiplier | 0).toString(_hex);\n      };\n\n      var _canvasId = \"_canvas-\" + (_idMaker() + _idMaker());\n\n      _this._chart.canvas.id = _canvasId;\n      return _canvasId;\n    };\n\n    var ClassName = {\n      ABOVE: 'above',\n      BELOW: 'below',\n      CHARTJS_TOOLTIP: 'chartjs-tooltip',\n      NO_TRANSFORM: 'no-transform',\n      TOOLTIP_BODY: 'tooltip-body',\n      TOOLTIP_BODY_ITEM: 'tooltip-body-item',\n      TOOLTIP_BODY_ITEM_COLOR: 'tooltip-body-item-color',\n      TOOLTIP_BODY_ITEM_LABEL: 'tooltip-body-item-label',\n      TOOLTIP_BODY_ITEM_VALUE: 'tooltip-body-item-value',\n      TOOLTIP_HEADER: 'tooltip-header',\n      TOOLTIP_HEADER_ITEM: 'tooltip-header-item'\n    };\n    var Selector = {\n      DIV: 'div',\n      SPAN: 'span',\n      TOOLTIP: (this._chart.canvas.id || _setCanvasId()) + \"-tooltip\"\n    };\n    var tooltip = document.getElementById(Selector.TOOLTIP);\n\n    if (!tooltip) {\n      tooltip = document.createElement('div');\n      tooltip.id = Selector.TOOLTIP;\n      tooltip.className = ClassName.CHARTJS_TOOLTIP;\n\n      this._chart.canvas.parentNode.appendChild(tooltip);\n    } // Hide if no tooltip\n\n\n    if (tooltipModel.opacity === 0) {\n      tooltip.style.opacity = 0;\n      return;\n    } // Set caret Position\n\n\n    tooltip.classList.remove(ClassName.ABOVE, ClassName.BELOW, ClassName.NO_TRANSFORM);\n\n    if (tooltipModel.yAlign) {\n      tooltip.classList.add(tooltipModel.yAlign);\n    } else {\n      tooltip.classList.add(ClassName.NO_TRANSFORM);\n    } // Set Text\n\n\n    if (tooltipModel.body) {\n      var titleLines = tooltipModel.title || [];\n      var tooltipHeader = document.createElement(Selector.DIV);\n      tooltipHeader.className = ClassName.TOOLTIP_HEADER;\n      titleLines.forEach(function (title) {\n        var tooltipHeaderTitle = document.createElement(Selector.DIV);\n        tooltipHeaderTitle.className = ClassName.TOOLTIP_HEADER_ITEM;\n        tooltipHeaderTitle.innerHTML = title;\n        tooltipHeader.appendChild(tooltipHeaderTitle);\n      });\n      var tooltipBody = document.createElement(Selector.DIV);\n      tooltipBody.className = ClassName.TOOLTIP_BODY;\n      var tooltipBodyItems = tooltipModel.body.map(function (item) {\n        return item.lines;\n      });\n      tooltipBodyItems.forEach(function (item, i) {\n        var tooltipBodyItem = document.createElement(Selector.DIV);\n        tooltipBodyItem.className = ClassName.TOOLTIP_BODY_ITEM;\n        var colors = tooltipModel.labelColors[i];\n        var tooltipBodyItemColor = document.createElement(Selector.SPAN);\n        tooltipBodyItemColor.className = ClassName.TOOLTIP_BODY_ITEM_COLOR;\n        tooltipBodyItemColor.style.backgroundColor = colors.backgroundColor;\n        tooltipBodyItem.appendChild(tooltipBodyItemColor);\n\n        if (item[0].split(':').length > 1) {\n          var tooltipBodyItemLabel = document.createElement(Selector.SPAN);\n          tooltipBodyItemLabel.className = ClassName.TOOLTIP_BODY_ITEM_LABEL;\n          tooltipBodyItemLabel.innerHTML = item[0].split(': ')[0];\n          tooltipBodyItem.appendChild(tooltipBodyItemLabel);\n          var tooltipBodyItemValue = document.createElement(Selector.SPAN);\n          tooltipBodyItemValue.className = ClassName.TOOLTIP_BODY_ITEM_VALUE;\n          tooltipBodyItemValue.innerHTML = item[0].split(': ').pop();\n          tooltipBodyItem.appendChild(tooltipBodyItemValue);\n        } else {\n          var _tooltipBodyItemValue = document.createElement(Selector.SPAN);\n\n          _tooltipBodyItemValue.className = ClassName.TOOLTIP_BODY_ITEM_VALUE;\n          _tooltipBodyItemValue.innerHTML = item[0];\n          tooltipBodyItem.appendChild(_tooltipBodyItemValue);\n        }\n\n        tooltipBody.appendChild(tooltipBodyItem);\n      });\n      tooltip.innerHTML = '';\n      tooltip.appendChild(tooltipHeader);\n      tooltip.appendChild(tooltipBody);\n    }\n\n    var positionY = this._chart.canvas.offsetTop;\n    var positionX = this._chart.canvas.offsetLeft; // Display, position, and set styles for font\n\n    tooltip.style.opacity = 1;\n    tooltip.style.left = positionX + tooltipModel.caretX + \"px\";\n    tooltip.style.top = positionY + tooltipModel.caretY + \"px\";\n  }\n\n  exports.CustomTooltips = CustomTooltips;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","/*!\n  * CoreUI v2.1.9 (https://coreui.io)\n  * Copyright 2019 Łukasz Holeczek\n  * Licensed under MIT (https://coreui.io)\n  */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : (global = global || self, factory(global.utilities = {}));\n})(this, function (exports) {\n  'use strict';\n  /**\r\n   * --------------------------------------------------------------------------\r\n   * CoreUI Utilities (v2.1.9): classes.js\r\n   * Licensed under MIT (https://coreui.io/license)\r\n   * --------------------------------------------------------------------------\r\n   */\n\n  var sidebarCssClasses = ['sidebar-show', 'sidebar-sm-show', 'sidebar-md-show', 'sidebar-lg-show', 'sidebar-xl-show'];\n  var asideMenuCssClasses = ['aside-menu-show', 'aside-menu-sm-show', 'aside-menu-md-show', 'aside-menu-lg-show', 'aside-menu-xl-show'];\n  var validBreakpoints = ['sm', 'md', 'lg', 'xl'];\n\n  function checkBreakpoint(breakpoint, list) {\n    return list.indexOf(breakpoint) > -1;\n  }\n\n  function createCommonjsModule(fn, module) {\n    return module = {\n      exports: {}\n    }, fn(module, module.exports), module.exports;\n  }\n\n  var _core = createCommonjsModule(function (module) {\n    var core = module.exports = {\n      version: '2.6.5'\n    };\n    if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n  });\n\n  var _core_1 = _core.version;\n\n  var _global = createCommonjsModule(function (module) {\n    // https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\n    var global = module.exports = typeof window != 'undefined' && window.Math == Math ? window : typeof self != 'undefined' && self.Math == Math ? self // eslint-disable-next-line no-new-func\n    : Function('return this')();\n    if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n  });\n\n  var _shared = createCommonjsModule(function (module) {\n    var SHARED = '__core-js_shared__';\n    var store = _global[SHARED] || (_global[SHARED] = {});\n    (module.exports = function (key, value) {\n      return store[key] || (store[key] = value !== undefined ? value : {});\n    })('versions', []).push({\n      version: _core.version,\n      mode: 'global',\n      copyright: '© 2019 Denis Pushkarev (zloirock.ru)'\n    });\n  });\n\n  var id = 0;\n  var px = Math.random();\n\n  var _uid = function _uid(key) {\n    return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n  };\n\n  var _wks = createCommonjsModule(function (module) {\n    var store = _shared('wks');\n\n    var Symbol = _global.Symbol;\n    var USE_SYMBOL = typeof Symbol == 'function';\n\n    var $exports = module.exports = function (name) {\n      return store[name] || (store[name] = USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : _uid)('Symbol.' + name));\n    };\n\n    $exports.store = store;\n  });\n\n  var _isObject = function _isObject(it) {\n    return typeof it === 'object' ? it !== null : typeof it === 'function';\n  };\n\n  var _anObject = function _anObject(it) {\n    if (!_isObject(it)) throw TypeError(it + ' is not an object!');\n    return it;\n  };\n\n  var _fails = function _fails(exec) {\n    try {\n      return !!exec();\n    } catch (e) {\n      return true;\n    }\n  }; // Thank's IE8 for his funny defineProperty\n\n\n  var _descriptors = !_fails(function () {\n    return Object.defineProperty({}, 'a', {\n      get: function get() {\n        return 7;\n      }\n    }).a != 7;\n  });\n\n  var document$1 = _global.document; // typeof document.createElement is 'object' in old IE\n\n  var is = _isObject(document$1) && _isObject(document$1.createElement);\n\n  var _domCreate = function _domCreate(it) {\n    return is ? document$1.createElement(it) : {};\n  };\n\n  var _ie8DomDefine = !_descriptors && !_fails(function () {\n    return Object.defineProperty(_domCreate('div'), 'a', {\n      get: function get() {\n        return 7;\n      }\n    }).a != 7;\n  }); // 7.1.1 ToPrimitive(input [, PreferredType])\n  // instead of the ES6 spec version, we didn't implement @@toPrimitive case\n  // and the second argument - flag - preferred type is a string\n\n\n  var _toPrimitive = function _toPrimitive(it, S) {\n    if (!_isObject(it)) return it;\n    var fn, val;\n    if (S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) return val;\n    if (typeof (fn = it.valueOf) == 'function' && !_isObject(val = fn.call(it))) return val;\n    if (!S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) return val;\n    throw TypeError(\"Can't convert object to primitive value\");\n  };\n\n  var dP = Object.defineProperty;\n  var f = _descriptors ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n    _anObject(O);\n\n    P = _toPrimitive(P, true);\n\n    _anObject(Attributes);\n\n    if (_ie8DomDefine) try {\n      return dP(O, P, Attributes);\n    } catch (e) {\n      /* empty */\n    }\n    if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n    if ('value' in Attributes) O[P] = Attributes.value;\n    return O;\n  };\n  var _objectDp = {\n    f: f\n  };\n\n  var _propertyDesc = function _propertyDesc(bitmap, value) {\n    return {\n      enumerable: !(bitmap & 1),\n      configurable: !(bitmap & 2),\n      writable: !(bitmap & 4),\n      value: value\n    };\n  };\n\n  var _hide = _descriptors ? function (object, key, value) {\n    return _objectDp.f(object, key, _propertyDesc(1, value));\n  } : function (object, key, value) {\n    object[key] = value;\n    return object;\n  }; // 22.1.3.31 Array.prototype[@@unscopables]\n\n\n  var UNSCOPABLES = _wks('unscopables');\n\n  var ArrayProto = Array.prototype;\n  if (ArrayProto[UNSCOPABLES] == undefined) _hide(ArrayProto, UNSCOPABLES, {});\n\n  var _addToUnscopables = function _addToUnscopables(key) {\n    ArrayProto[UNSCOPABLES][key] = true;\n  };\n\n  var _iterStep = function _iterStep(done, value) {\n    return {\n      value: value,\n      done: !!done\n    };\n  };\n\n  var _iterators = {};\n  var toString = {}.toString;\n\n  var _cof = function _cof(it) {\n    return toString.call(it).slice(8, -1);\n  }; // fallback for non-array-like ES3 and non-enumerable old V8 strings\n  // eslint-disable-next-line no-prototype-builtins\n\n\n  var _iobject = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n    return _cof(it) == 'String' ? it.split('') : Object(it);\n  }; // 7.2.1 RequireObjectCoercible(argument)\n\n\n  var _defined = function _defined(it) {\n    if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n    return it;\n  }; // to indexed object, toObject with fallback for non-array-like ES3 strings\n\n\n  var _toIobject = function _toIobject(it) {\n    return _iobject(_defined(it));\n  };\n\n  var hasOwnProperty = {}.hasOwnProperty;\n\n  var _has = function _has(it, key) {\n    return hasOwnProperty.call(it, key);\n  };\n\n  var _functionToString = _shared('native-function-to-string', Function.toString);\n\n  var _redefine = createCommonjsModule(function (module) {\n    var SRC = _uid('src');\n\n    var TO_STRING = 'toString';\n\n    var TPL = ('' + _functionToString).split(TO_STRING);\n\n    _core.inspectSource = function (it) {\n      return _functionToString.call(it);\n    };\n\n    (module.exports = function (O, key, val, safe) {\n      var isFunction = typeof val == 'function';\n      if (isFunction) _has(val, 'name') || _hide(val, 'name', key);\n      if (O[key] === val) return;\n      if (isFunction) _has(val, SRC) || _hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n\n      if (O === _global) {\n        O[key] = val;\n      } else if (!safe) {\n        delete O[key];\n\n        _hide(O, key, val);\n      } else if (O[key]) {\n        O[key] = val;\n      } else {\n        _hide(O, key, val);\n      } // add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n\n    })(Function.prototype, TO_STRING, function toString() {\n      return typeof this == 'function' && this[SRC] || _functionToString.call(this);\n    });\n  });\n\n  var _aFunction = function _aFunction(it) {\n    if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n    return it;\n  }; // optional / simple context binding\n\n\n  var _ctx = function _ctx(fn, that, length) {\n    _aFunction(fn);\n\n    if (that === undefined) return fn;\n\n    switch (length) {\n      case 1:\n        return function (a) {\n          return fn.call(that, a);\n        };\n\n      case 2:\n        return function (a, b) {\n          return fn.call(that, a, b);\n        };\n\n      case 3:\n        return function (a, b, c) {\n          return fn.call(that, a, b, c);\n        };\n    }\n\n    return function ()\n    /* ...args */\n    {\n      return fn.apply(that, arguments);\n    };\n  };\n\n  var PROTOTYPE = 'prototype';\n\n  var $export = function $export(type, name, source) {\n    var IS_FORCED = type & $export.F;\n    var IS_GLOBAL = type & $export.G;\n    var IS_STATIC = type & $export.S;\n    var IS_PROTO = type & $export.P;\n    var IS_BIND = type & $export.B;\n    var target = IS_GLOBAL ? _global : IS_STATIC ? _global[name] || (_global[name] = {}) : (_global[name] || {})[PROTOTYPE];\n    var exports = IS_GLOBAL ? _core : _core[name] || (_core[name] = {});\n    var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n    var key, own, out, exp;\n    if (IS_GLOBAL) source = name;\n\n    for (key in source) {\n      // contains in native\n      own = !IS_FORCED && target && target[key] !== undefined; // export native or passed\n\n      out = (own ? target : source)[key]; // bind timers to global for call from export context\n\n      exp = IS_BIND && own ? _ctx(out, _global) : IS_PROTO && typeof out == 'function' ? _ctx(Function.call, out) : out; // extend global\n\n      if (target) _redefine(target, key, out, type & $export.U); // export\n\n      if (exports[key] != out) _hide(exports, key, exp);\n      if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n    }\n  };\n\n  _global.core = _core; // type bitmap\n\n  $export.F = 1; // forced\n\n  $export.G = 2; // global\n\n  $export.S = 4; // static\n\n  $export.P = 8; // proto\n\n  $export.B = 16; // bind\n\n  $export.W = 32; // wrap\n\n  $export.U = 64; // safe\n\n  $export.R = 128; // real proto method for `library`\n\n  var _export = $export; // 7.1.4 ToInteger\n\n  var ceil = Math.ceil;\n  var floor = Math.floor;\n\n  var _toInteger = function _toInteger(it) {\n    return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n  }; // 7.1.15 ToLength\n\n\n  var min = Math.min;\n\n  var _toLength = function _toLength(it) {\n    return it > 0 ? min(_toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n  };\n\n  var max = Math.max;\n  var min$1 = Math.min;\n\n  var _toAbsoluteIndex = function _toAbsoluteIndex(index, length) {\n    index = _toInteger(index);\n    return index < 0 ? max(index + length, 0) : min$1(index, length);\n  }; // false -> Array#indexOf\n  // true  -> Array#includes\n\n\n  var _arrayIncludes = function _arrayIncludes(IS_INCLUDES) {\n    return function ($this, el, fromIndex) {\n      var O = _toIobject($this);\n\n      var length = _toLength(O.length);\n\n      var index = _toAbsoluteIndex(fromIndex, length);\n\n      var value; // Array#includes uses SameValueZero equality algorithm\n      // eslint-disable-next-line no-self-compare\n\n      if (IS_INCLUDES && el != el) while (length > index) {\n        value = O[index++]; // eslint-disable-next-line no-self-compare\n\n        if (value != value) return true; // Array#indexOf ignores holes, Array#includes - not\n      } else for (; length > index; index++) {\n        if (IS_INCLUDES || index in O) {\n          if (O[index] === el) return IS_INCLUDES || index || 0;\n        }\n      }\n      return !IS_INCLUDES && -1;\n    };\n  };\n\n  var shared = _shared('keys');\n\n  var _sharedKey = function _sharedKey(key) {\n    return shared[key] || (shared[key] = _uid(key));\n  };\n\n  var arrayIndexOf = _arrayIncludes(false);\n\n  var IE_PROTO = _sharedKey('IE_PROTO');\n\n  var _objectKeysInternal = function _objectKeysInternal(object, names) {\n    var O = _toIobject(object);\n\n    var i = 0;\n    var result = [];\n    var key;\n\n    for (key in O) {\n      if (key != IE_PROTO) _has(O, key) && result.push(key);\n    } // Don't enum bug & hidden keys\n\n\n    while (names.length > i) {\n      if (_has(O, key = names[i++])) {\n        ~arrayIndexOf(result, key) || result.push(key);\n      }\n    }\n\n    return result;\n  }; // IE 8- don't enum bug keys\n\n\n  var _enumBugKeys = 'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'.split(','); // 19.1.2.14 / 15.2.3.14 Object.keys(O)\n\n\n  var _objectKeys = Object.keys || function keys(O) {\n    return _objectKeysInternal(O, _enumBugKeys);\n  };\n\n  var _objectDps = _descriptors ? Object.defineProperties : function defineProperties(O, Properties) {\n    _anObject(O);\n\n    var keys = _objectKeys(Properties);\n\n    var length = keys.length;\n    var i = 0;\n    var P;\n\n    while (length > i) {\n      _objectDp.f(O, P = keys[i++], Properties[P]);\n    }\n\n    return O;\n  };\n\n  var document$2 = _global.document;\n\n  var _html = document$2 && document$2.documentElement; // 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\n\n\n  var IE_PROTO$1 = _sharedKey('IE_PROTO');\n\n  var Empty = function Empty() {\n    /* empty */\n  };\n\n  var PROTOTYPE$1 = 'prototype'; // Create object with fake `null` prototype: use iframe Object with cleared prototype\n\n  var _createDict = function createDict() {\n    // Thrash, waste and sodomy: IE GC bug\n    var iframe = _domCreate('iframe');\n\n    var i = _enumBugKeys.length;\n    var lt = '<';\n    var gt = '>';\n    var iframeDocument;\n    iframe.style.display = 'none';\n\n    _html.appendChild(iframe);\n\n    iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n    // createDict = iframe.contentWindow.Object;\n    // html.removeChild(iframe);\n\n    iframeDocument = iframe.contentWindow.document;\n    iframeDocument.open();\n    iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n    iframeDocument.close();\n    _createDict = iframeDocument.F;\n\n    while (i--) {\n      delete _createDict[PROTOTYPE$1][_enumBugKeys[i]];\n    }\n\n    return _createDict();\n  };\n\n  var _objectCreate = Object.create || function create(O, Properties) {\n    var result;\n\n    if (O !== null) {\n      Empty[PROTOTYPE$1] = _anObject(O);\n      result = new Empty();\n      Empty[PROTOTYPE$1] = null; // add \"__proto__\" for Object.getPrototypeOf polyfill\n\n      result[IE_PROTO$1] = O;\n    } else result = _createDict();\n\n    return Properties === undefined ? result : _objectDps(result, Properties);\n  };\n\n  var def = _objectDp.f;\n\n  var TAG = _wks('toStringTag');\n\n  var _setToStringTag = function _setToStringTag(it, tag, stat) {\n    if (it && !_has(it = stat ? it : it.prototype, TAG)) def(it, TAG, {\n      configurable: true,\n      value: tag\n    });\n  };\n\n  var IteratorPrototype = {}; // 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\n\n  _hide(IteratorPrototype, _wks('iterator'), function () {\n    return this;\n  });\n\n  var _iterCreate = function _iterCreate(Constructor, NAME, next) {\n    Constructor.prototype = _objectCreate(IteratorPrototype, {\n      next: _propertyDesc(1, next)\n    });\n\n    _setToStringTag(Constructor, NAME + ' Iterator');\n  }; // 7.1.13 ToObject(argument)\n\n\n  var _toObject = function _toObject(it) {\n    return Object(_defined(it));\n  }; // 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\n\n\n  var IE_PROTO$2 = _sharedKey('IE_PROTO');\n\n  var ObjectProto = Object.prototype;\n\n  var _objectGpo = Object.getPrototypeOf || function (O) {\n    O = _toObject(O);\n    if (_has(O, IE_PROTO$2)) return O[IE_PROTO$2];\n\n    if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n      return O.constructor.prototype;\n    }\n\n    return O instanceof Object ? ObjectProto : null;\n  };\n\n  var ITERATOR = _wks('iterator');\n\n  var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\n\n  var FF_ITERATOR = '@@iterator';\n  var KEYS = 'keys';\n  var VALUES = 'values';\n\n  var returnThis = function returnThis() {\n    return this;\n  };\n\n  var _iterDefine = function _iterDefine(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n    _iterCreate(Constructor, NAME, next);\n\n    var getMethod = function getMethod(kind) {\n      if (!BUGGY && kind in proto) return proto[kind];\n\n      switch (kind) {\n        case KEYS:\n          return function keys() {\n            return new Constructor(this, kind);\n          };\n\n        case VALUES:\n          return function values() {\n            return new Constructor(this, kind);\n          };\n      }\n\n      return function entries() {\n        return new Constructor(this, kind);\n      };\n    };\n\n    var TAG = NAME + ' Iterator';\n    var DEF_VALUES = DEFAULT == VALUES;\n    var VALUES_BUG = false;\n    var proto = Base.prototype;\n    var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n    var $default = $native || getMethod(DEFAULT);\n    var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n    var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n    var methods, key, IteratorPrototype; // Fix native\n\n    if ($anyNative) {\n      IteratorPrototype = _objectGpo($anyNative.call(new Base()));\n\n      if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n        // Set @@toStringTag to native iterators\n        _setToStringTag(IteratorPrototype, TAG, true); // fix for some old engines\n\n\n        if (typeof IteratorPrototype[ITERATOR] != 'function') _hide(IteratorPrototype, ITERATOR, returnThis);\n      }\n    } // fix Array#{values, @@iterator}.name in V8 / FF\n\n\n    if (DEF_VALUES && $native && $native.name !== VALUES) {\n      VALUES_BUG = true;\n\n      $default = function values() {\n        return $native.call(this);\n      };\n    } // Define iterator\n\n\n    if (BUGGY || VALUES_BUG || !proto[ITERATOR]) {\n      _hide(proto, ITERATOR, $default);\n    } // Plug for library\n\n\n    _iterators[NAME] = $default;\n    _iterators[TAG] = returnThis;\n\n    if (DEFAULT) {\n      methods = {\n        values: DEF_VALUES ? $default : getMethod(VALUES),\n        keys: IS_SET ? $default : getMethod(KEYS),\n        entries: $entries\n      };\n      if (FORCED) for (key in methods) {\n        if (!(key in proto)) _redefine(proto, key, methods[key]);\n      } else _export(_export.P + _export.F * (BUGGY || VALUES_BUG), NAME, methods);\n    }\n\n    return methods;\n  }; // 22.1.3.4 Array.prototype.entries()\n  // 22.1.3.13 Array.prototype.keys()\n  // 22.1.3.29 Array.prototype.values()\n  // 22.1.3.30 Array.prototype[@@iterator]()\n\n\n  var es6_array_iterator = _iterDefine(Array, 'Array', function (iterated, kind) {\n    this._t = _toIobject(iterated); // target\n\n    this._i = 0; // next index\n\n    this._k = kind; // kind\n    // 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n  }, function () {\n    var O = this._t;\n    var kind = this._k;\n    var index = this._i++;\n\n    if (!O || index >= O.length) {\n      this._t = undefined;\n      return _iterStep(1);\n    }\n\n    if (kind == 'keys') return _iterStep(0, index);\n    if (kind == 'values') return _iterStep(0, O[index]);\n    return _iterStep(0, [index, O[index]]);\n  }, 'values'); // argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\n\n\n  _iterators.Arguments = _iterators.Array;\n\n  _addToUnscopables('keys');\n\n  _addToUnscopables('values');\n\n  _addToUnscopables('entries');\n\n  var ITERATOR$1 = _wks('iterator');\n\n  var TO_STRING_TAG = _wks('toStringTag');\n\n  var ArrayValues = _iterators.Array;\n  var DOMIterables = {\n    CSSRuleList: true,\n    // TODO: Not spec compliant, should be false.\n    CSSStyleDeclaration: false,\n    CSSValueList: false,\n    ClientRectList: false,\n    DOMRectList: false,\n    DOMStringList: false,\n    DOMTokenList: true,\n    DataTransferItemList: false,\n    FileList: false,\n    HTMLAllCollection: false,\n    HTMLCollection: false,\n    HTMLFormElement: false,\n    HTMLSelectElement: false,\n    MediaList: true,\n    // TODO: Not spec compliant, should be false.\n    MimeTypeArray: false,\n    NamedNodeMap: false,\n    NodeList: true,\n    PaintRequestList: false,\n    Plugin: false,\n    PluginArray: false,\n    SVGLengthList: false,\n    SVGNumberList: false,\n    SVGPathSegList: false,\n    SVGPointList: false,\n    SVGStringList: false,\n    SVGTransformList: false,\n    SourceBufferList: false,\n    StyleSheetList: true,\n    // TODO: Not spec compliant, should be false.\n    TextTrackCueList: false,\n    TextTrackList: false,\n    TouchList: false\n  };\n\n  for (var collections = _objectKeys(DOMIterables), i = 0; i < collections.length; i++) {\n    var NAME = collections[i];\n    var explicit = DOMIterables[NAME];\n    var Collection = _global[NAME];\n    var proto = Collection && Collection.prototype;\n    var key;\n\n    if (proto) {\n      if (!proto[ITERATOR$1]) _hide(proto, ITERATOR$1, ArrayValues);\n      if (!proto[TO_STRING_TAG]) _hide(proto, TO_STRING_TAG, NAME);\n      _iterators[NAME] = ArrayValues;\n      if (explicit) for (key in es6_array_iterator) {\n        if (!proto[key]) _redefine(proto, key, es6_array_iterator[key], true);\n      }\n    }\n  } // getting tag from 19.1.3.6 Object.prototype.toString()\n\n\n  var TAG$1 = _wks('toStringTag'); // ES3 wrong here\n\n\n  var ARG = _cof(function () {\n    return arguments;\n  }()) == 'Arguments'; // fallback for IE11 Script Access Denied error\n\n  var tryGet = function tryGet(it, key) {\n    try {\n      return it[key];\n    } catch (e) {\n      /* empty */\n    }\n  };\n\n  var _classof = function _classof(it) {\n    var O, T, B;\n    return it === undefined ? 'Undefined' : it === null ? 'Null' // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG$1)) == 'string' ? T // builtinTag case\n    : ARG ? _cof(O) // ES3 arguments fallback\n    : (B = _cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n  }; // 19.1.3.6 Object.prototype.toString()\n\n\n  var test = {};\n  test[_wks('toStringTag')] = 'z';\n\n  if (test + '' != '[object z]') {\n    _redefine(Object.prototype, 'toString', function toString() {\n      return '[object ' + _classof(this) + ']';\n    }, true);\n  } // most Object methods by ES6 should accept primitives\n\n\n  var _objectSap = function _objectSap(KEY, exec) {\n    var fn = (_core.Object || {})[KEY] || Object[KEY];\n    var exp = {};\n    exp[KEY] = exec(fn);\n\n    _export(_export.S + _export.F * _fails(function () {\n      fn(1);\n    }), 'Object', exp);\n  }; // 19.1.2.14 Object.keys(O)\n\n\n  _objectSap('keys', function () {\n    return function keys(it) {\n      return _objectKeys(_toObject(it));\n    };\n  });\n\n  var f$1 = Object.getOwnPropertySymbols;\n  var _objectGops = {\n    f: f$1\n  };\n  var f$2 = {}.propertyIsEnumerable;\n  var _objectPie = {\n    f: f$2\n  }; // 19.1.2.1 Object.assign(target, source, ...)\n\n  var $assign = Object.assign; // should work with symbols and should have deterministic property order (V8 bug)\n\n  var _objectAssign = !$assign || _fails(function () {\n    var A = {};\n    var B = {}; // eslint-disable-next-line no-undef\n\n    var S = Symbol();\n    var K = 'abcdefghijklmnopqrst';\n    A[S] = 7;\n    K.split('').forEach(function (k) {\n      B[k] = k;\n    });\n    return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n  }) ? function assign(target, source) {\n    // eslint-disable-line no-unused-vars\n    var T = _toObject(target);\n\n    var aLen = arguments.length;\n    var index = 1;\n    var getSymbols = _objectGops.f;\n    var isEnum = _objectPie.f;\n\n    while (aLen > index) {\n      var S = _iobject(arguments[index++]);\n\n      var keys = getSymbols ? _objectKeys(S).concat(getSymbols(S)) : _objectKeys(S);\n      var length = keys.length;\n      var j = 0;\n      var key;\n\n      while (length > j) {\n        if (isEnum.call(S, key = keys[j++])) T[key] = S[key];\n      }\n    }\n\n    return T;\n  } : $assign; // 19.1.3.1 Object.assign(target, source)\n\n\n  _export(_export.S + _export.F, 'Object', {\n    assign: _objectAssign\n  });\n\n  var deepObjectsMerge = function deepObjectsMerge(target, source) {\n    // Iterate through `source` properties and if an `Object` set property to merge of `target` and `source` properties\n    var _arr = Object.keys(source);\n\n    for (var _i = 0; _i < _arr.length; _i++) {\n      var key = _arr[_i];\n\n      if (source[key] instanceof Object) {\n        Object.assign(source[key], deepObjectsMerge(target[key], source[key]));\n      }\n    } // Join `target` and modified `source`\n\n\n    Object.assign(target || {}, source);\n    return target;\n  }; // true  -> String#at\n  // false -> String#codePointAt\n\n\n  var _stringAt = function _stringAt(TO_STRING) {\n    return function (that, pos) {\n      var s = String(_defined(that));\n\n      var i = _toInteger(pos);\n\n      var l = s.length;\n      var a, b;\n      if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n      a = s.charCodeAt(i);\n      return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff ? TO_STRING ? s.charAt(i) : a : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n    };\n  };\n\n  var at = _stringAt(true); // `AdvanceStringIndex` abstract operation\n  // https://tc39.github.io/ecma262/#sec-advancestringindex\n\n\n  var _advanceStringIndex = function _advanceStringIndex(S, index, unicode) {\n    return index + (unicode ? at(S, index).length : 1);\n  };\n\n  var builtinExec = RegExp.prototype.exec; // `RegExpExec` abstract operation\n  // https://tc39.github.io/ecma262/#sec-regexpexec\n\n  var _regexpExecAbstract = function _regexpExecAbstract(R, S) {\n    var exec = R.exec;\n\n    if (typeof exec === 'function') {\n      var result = exec.call(R, S);\n\n      if (typeof result !== 'object') {\n        throw new TypeError('RegExp exec method returned something other than an Object or null');\n      }\n\n      return result;\n    }\n\n    if (_classof(R) !== 'RegExp') {\n      throw new TypeError('RegExp#exec called on incompatible receiver');\n    }\n\n    return builtinExec.call(R, S);\n  }; // 21.2.5.3 get RegExp.prototype.flags\n\n\n  var _flags = function _flags() {\n    var that = _anObject(this);\n\n    var result = '';\n    if (that.global) result += 'g';\n    if (that.ignoreCase) result += 'i';\n    if (that.multiline) result += 'm';\n    if (that.unicode) result += 'u';\n    if (that.sticky) result += 'y';\n    return result;\n  };\n\n  var nativeExec = RegExp.prototype.exec; // This always refers to the native implementation, because the\n  // String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,\n  // which loads this file before patching the method.\n\n  var nativeReplace = String.prototype.replace;\n  var patchedExec = nativeExec;\n  var LAST_INDEX = 'lastIndex';\n\n  var UPDATES_LAST_INDEX_WRONG = function () {\n    var re1 = /a/,\n        re2 = /b*/g;\n    nativeExec.call(re1, 'a');\n    nativeExec.call(re2, 'a');\n    return re1[LAST_INDEX] !== 0 || re2[LAST_INDEX] !== 0;\n  }(); // nonparticipating capturing group, copied from es5-shim's String#split patch.\n\n\n  var NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;\n  var PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED;\n\n  if (PATCH) {\n    patchedExec = function exec(str) {\n      var re = this;\n      var lastIndex, reCopy, match, i;\n\n      if (NPCG_INCLUDED) {\n        reCopy = new RegExp('^' + re.source + '$(?!\\\\s)', _flags.call(re));\n      }\n\n      if (UPDATES_LAST_INDEX_WRONG) lastIndex = re[LAST_INDEX];\n      match = nativeExec.call(re, str);\n\n      if (UPDATES_LAST_INDEX_WRONG && match) {\n        re[LAST_INDEX] = re.global ? match.index + match[0].length : lastIndex;\n      }\n\n      if (NPCG_INCLUDED && match && match.length > 1) {\n        // Fix browsers whose `exec` methods don't consistently return `undefined`\n        // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/\n        // eslint-disable-next-line no-loop-func\n        nativeReplace.call(match[0], reCopy, function () {\n          for (i = 1; i < arguments.length - 2; i++) {\n            if (arguments[i] === undefined) match[i] = undefined;\n          }\n        });\n      }\n\n      return match;\n    };\n  }\n\n  var _regexpExec = patchedExec;\n\n  _export({\n    target: 'RegExp',\n    proto: true,\n    forced: _regexpExec !== /./.exec\n  }, {\n    exec: _regexpExec\n  });\n\n  var SPECIES = _wks('species');\n\n  var REPLACE_SUPPORTS_NAMED_GROUPS = !_fails(function () {\n    // #replace needs built-in support for named groups.\n    // #match works fine because it just return the exec results, even if it has\n    // a \"grops\" property.\n    var re = /./;\n\n    re.exec = function () {\n      var result = [];\n      result.groups = {\n        a: '7'\n      };\n      return result;\n    };\n\n    return ''.replace(re, '$<a>') !== '7';\n  });\n\n  var SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = function () {\n    // Chrome 51 has a buggy \"split\" implementation when RegExp#exec !== nativeExec\n    var re = /(?:)/;\n    var originalExec = re.exec;\n\n    re.exec = function () {\n      return originalExec.apply(this, arguments);\n    };\n\n    var result = 'ab'.split(re);\n    return result.length === 2 && result[0] === 'a' && result[1] === 'b';\n  }();\n\n  var _fixReWks = function _fixReWks(KEY, length, exec) {\n    var SYMBOL = _wks(KEY);\n\n    var DELEGATES_TO_SYMBOL = !_fails(function () {\n      // String methods call symbol-named RegEp methods\n      var O = {};\n\n      O[SYMBOL] = function () {\n        return 7;\n      };\n\n      return ''[KEY](O) != 7;\n    });\n    var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL ? !_fails(function () {\n      // Symbol-named RegExp methods call .exec\n      var execCalled = false;\n      var re = /a/;\n\n      re.exec = function () {\n        execCalled = true;\n        return null;\n      };\n\n      if (KEY === 'split') {\n        // RegExp[@@split] doesn't call the regex's exec method, but first creates\n        // a new one. We need to return the patched regex when creating the new one.\n        re.constructor = {};\n\n        re.constructor[SPECIES] = function () {\n          return re;\n        };\n      }\n\n      re[SYMBOL]('');\n      return !execCalled;\n    }) : undefined;\n\n    if (!DELEGATES_TO_SYMBOL || !DELEGATES_TO_EXEC || KEY === 'replace' && !REPLACE_SUPPORTS_NAMED_GROUPS || KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC) {\n      var nativeRegExpMethod = /./[SYMBOL];\n      var fns = exec(_defined, SYMBOL, ''[KEY], function maybeCallNative(nativeMethod, regexp, str, arg2, forceStringMethod) {\n        if (regexp.exec === _regexpExec) {\n          if (DELEGATES_TO_SYMBOL && !forceStringMethod) {\n            // The native String method already delegates to @@method (this\n            // polyfilled function), leasing to infinite recursion.\n            // We avoid it by directly calling the native @@method method.\n            return {\n              done: true,\n              value: nativeRegExpMethod.call(regexp, str, arg2)\n            };\n          }\n\n          return {\n            done: true,\n            value: nativeMethod.call(str, regexp, arg2)\n          };\n        }\n\n        return {\n          done: false\n        };\n      });\n      var strfn = fns[0];\n      var rxfn = fns[1];\n\n      _redefine(String.prototype, KEY, strfn);\n\n      _hide(RegExp.prototype, SYMBOL, length == 2 // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)\n      // 21.2.5.11 RegExp.prototype[@@split](string, limit)\n      ? function (string, arg) {\n        return rxfn.call(string, this, arg);\n      } // 21.2.5.6 RegExp.prototype[@@match](string)\n      // 21.2.5.9 RegExp.prototype[@@search](string)\n      : function (string) {\n        return rxfn.call(string, this);\n      });\n    }\n  };\n\n  var max$1 = Math.max;\n  var min$2 = Math.min;\n  var floor$1 = Math.floor;\n  var SUBSTITUTION_SYMBOLS = /\\$([$&`']|\\d\\d?|<[^>]*>)/g;\n  var SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&`']|\\d\\d?)/g;\n\n  var maybeToString = function maybeToString(it) {\n    return it === undefined ? it : String(it);\n  }; // @@replace logic\n\n\n  _fixReWks('replace', 2, function (defined, REPLACE, $replace, maybeCallNative) {\n    return [// `String.prototype.replace` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.replace\n    function replace(searchValue, replaceValue) {\n      var O = defined(this);\n      var fn = searchValue == undefined ? undefined : searchValue[REPLACE];\n      return fn !== undefined ? fn.call(searchValue, O, replaceValue) : $replace.call(String(O), searchValue, replaceValue);\n    }, // `RegExp.prototype[@@replace]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace\n    function (regexp, replaceValue) {\n      var res = maybeCallNative($replace, regexp, this, replaceValue);\n      if (res.done) return res.value;\n\n      var rx = _anObject(regexp);\n\n      var S = String(this);\n      var functionalReplace = typeof replaceValue === 'function';\n      if (!functionalReplace) replaceValue = String(replaceValue);\n      var global = rx.global;\n\n      if (global) {\n        var fullUnicode = rx.unicode;\n        rx.lastIndex = 0;\n      }\n\n      var results = [];\n\n      while (true) {\n        var result = _regexpExecAbstract(rx, S);\n\n        if (result === null) break;\n        results.push(result);\n        if (!global) break;\n        var matchStr = String(result[0]);\n        if (matchStr === '') rx.lastIndex = _advanceStringIndex(S, _toLength(rx.lastIndex), fullUnicode);\n      }\n\n      var accumulatedResult = '';\n      var nextSourcePosition = 0;\n\n      for (var i = 0; i < results.length; i++) {\n        result = results[i];\n        var matched = String(result[0]);\n        var position = max$1(min$2(_toInteger(result.index), S.length), 0);\n        var captures = []; // NOTE: This is equivalent to\n        //   captures = result.slice(1).map(maybeToString)\n        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in\n        // the slice polyfill when slicing native arrays) \"doesn't work\" in safari 9 and\n        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.\n\n        for (var j = 1; j < result.length; j++) {\n          captures.push(maybeToString(result[j]));\n        }\n\n        var namedCaptures = result.groups;\n\n        if (functionalReplace) {\n          var replacerArgs = [matched].concat(captures, position, S);\n          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);\n          var replacement = String(replaceValue.apply(undefined, replacerArgs));\n        } else {\n          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);\n        }\n\n        if (position >= nextSourcePosition) {\n          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;\n          nextSourcePosition = position + matched.length;\n        }\n      }\n\n      return accumulatedResult + S.slice(nextSourcePosition);\n    }]; // https://tc39.github.io/ecma262/#sec-getsubstitution\n\n    function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {\n      var tailPos = position + matched.length;\n      var m = captures.length;\n      var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\n\n      if (namedCaptures !== undefined) {\n        namedCaptures = _toObject(namedCaptures);\n        symbols = SUBSTITUTION_SYMBOLS;\n      }\n\n      return $replace.call(replacement, symbols, function (match, ch) {\n        var capture;\n\n        switch (ch.charAt(0)) {\n          case '$':\n            return '$';\n\n          case '&':\n            return matched;\n\n          case '`':\n            return str.slice(0, position);\n\n          case \"'\":\n            return str.slice(tailPos);\n\n          case '<':\n            capture = namedCaptures[ch.slice(1, -1)];\n            break;\n\n          default:\n            // \\d\\d?\n            var n = +ch;\n            if (n === 0) return match;\n\n            if (n > m) {\n              var f = floor$1(n / 10);\n              if (f === 0) return match;\n              if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);\n              return match;\n            }\n\n            capture = captures[n - 1];\n        }\n\n        return capture === undefined ? '' : capture;\n      });\n    }\n  }); // @@match logic\n\n\n  _fixReWks('match', 1, function (defined, MATCH, $match, maybeCallNative) {\n    return [// `String.prototype.match` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.match\n    function match(regexp) {\n      var O = defined(this);\n      var fn = regexp == undefined ? undefined : regexp[MATCH];\n      return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));\n    }, // `RegExp.prototype[@@match]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@match\n    function (regexp) {\n      var res = maybeCallNative($match, regexp, this);\n      if (res.done) return res.value;\n\n      var rx = _anObject(regexp);\n\n      var S = String(this);\n      if (!rx.global) return _regexpExecAbstract(rx, S);\n      var fullUnicode = rx.unicode;\n      rx.lastIndex = 0;\n      var A = [];\n      var n = 0;\n      var result;\n\n      while ((result = _regexpExecAbstract(rx, S)) !== null) {\n        var matchStr = String(result[0]);\n        A[n] = matchStr;\n        if (matchStr === '') rx.lastIndex = _advanceStringIndex(S, _toLength(rx.lastIndex), fullUnicode);\n        n++;\n      }\n\n      return n === 0 ? null : A;\n    }];\n  }); // 7.2.8 IsRegExp(argument)\n\n\n  var MATCH = _wks('match');\n\n  var _isRegexp = function _isRegexp(it) {\n    var isRegExp;\n    return _isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : _cof(it) == 'RegExp');\n  }; // 7.3.20 SpeciesConstructor(O, defaultConstructor)\n\n\n  var SPECIES$1 = _wks('species');\n\n  var _speciesConstructor = function _speciesConstructor(O, D) {\n    var C = _anObject(O).constructor;\n\n    var S;\n    return C === undefined || (S = _anObject(C)[SPECIES$1]) == undefined ? D : _aFunction(S);\n  };\n\n  var $min = Math.min;\n  var $push = [].push;\n  var $SPLIT = 'split';\n  var LENGTH = 'length';\n  var LAST_INDEX$1 = 'lastIndex';\n  var MAX_UINT32 = 0xffffffff; // babel-minify transpiles RegExp('x', 'y') -> /x/y and it causes SyntaxError\n\n  var SUPPORTS_Y = !_fails(function () {}); // @@split logic\n\n  _fixReWks('split', 2, function (defined, SPLIT, $split, maybeCallNative) {\n    var internalSplit;\n\n    if ('abbc'[$SPLIT](/(b)*/)[1] == 'c' || 'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 || 'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 || '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 || '.'[$SPLIT](/()()/)[LENGTH] > 1 || ''[$SPLIT](/.?/)[LENGTH]) {\n      // based on es5-shim implementation, need to rework it\n      internalSplit = function internalSplit(separator, limit) {\n        var string = String(this);\n        if (separator === undefined && limit === 0) return []; // If `separator` is not a regex, use native split\n\n        if (!_isRegexp(separator)) return $split.call(string, separator, limit);\n        var output = [];\n        var flags = (separator.ignoreCase ? 'i' : '') + (separator.multiline ? 'm' : '') + (separator.unicode ? 'u' : '') + (separator.sticky ? 'y' : '');\n        var lastLastIndex = 0;\n        var splitLimit = limit === undefined ? MAX_UINT32 : limit >>> 0; // Make `global` and avoid `lastIndex` issues by working with a copy\n\n        var separatorCopy = new RegExp(separator.source, flags + 'g');\n        var match, lastIndex, lastLength;\n\n        while (match = _regexpExec.call(separatorCopy, string)) {\n          lastIndex = separatorCopy[LAST_INDEX$1];\n\n          if (lastIndex > lastLastIndex) {\n            output.push(string.slice(lastLastIndex, match.index));\n            if (match[LENGTH] > 1 && match.index < string[LENGTH]) $push.apply(output, match.slice(1));\n            lastLength = match[0][LENGTH];\n            lastLastIndex = lastIndex;\n            if (output[LENGTH] >= splitLimit) break;\n          }\n\n          if (separatorCopy[LAST_INDEX$1] === match.index) separatorCopy[LAST_INDEX$1]++; // Avoid an infinite loop\n        }\n\n        if (lastLastIndex === string[LENGTH]) {\n          if (lastLength || !separatorCopy.test('')) output.push('');\n        } else output.push(string.slice(lastLastIndex));\n\n        return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;\n      }; // Chakra, V8\n\n    } else if ('0'[$SPLIT](undefined, 0)[LENGTH]) {\n      internalSplit = function internalSplit(separator, limit) {\n        return separator === undefined && limit === 0 ? [] : $split.call(this, separator, limit);\n      };\n    } else {\n      internalSplit = $split;\n    }\n\n    return [// `String.prototype.split` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.split\n    function split(separator, limit) {\n      var O = defined(this);\n      var splitter = separator == undefined ? undefined : separator[SPLIT];\n      return splitter !== undefined ? splitter.call(separator, O, limit) : internalSplit.call(String(O), separator, limit);\n    }, // `RegExp.prototype[@@split]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@split\n    //\n    // NOTE: This cannot be properly polyfilled in engines that don't support\n    // the 'y' flag.\n    function (regexp, limit) {\n      var res = maybeCallNative(internalSplit, regexp, this, limit, internalSplit !== $split);\n      if (res.done) return res.value;\n\n      var rx = _anObject(regexp);\n\n      var S = String(this);\n\n      var C = _speciesConstructor(rx, RegExp);\n\n      var unicodeMatching = rx.unicode;\n      var flags = (rx.ignoreCase ? 'i' : '') + (rx.multiline ? 'm' : '') + (rx.unicode ? 'u' : '') + (SUPPORTS_Y ? 'y' : 'g'); // ^(? + rx + ) is needed, in combination with some S slicing, to\n      // simulate the 'y' flag.\n\n      var splitter = new C(SUPPORTS_Y ? rx : '^(?:' + rx.source + ')', flags);\n      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      if (lim === 0) return [];\n      if (S.length === 0) return _regexpExecAbstract(splitter, S) === null ? [S] : [];\n      var p = 0;\n      var q = 0;\n      var A = [];\n\n      while (q < S.length) {\n        splitter.lastIndex = SUPPORTS_Y ? q : 0;\n\n        var z = _regexpExecAbstract(splitter, SUPPORTS_Y ? S : S.slice(q));\n\n        var e;\n\n        if (z === null || (e = $min(_toLength(splitter.lastIndex + (SUPPORTS_Y ? 0 : q)), S.length)) === p) {\n          q = _advanceStringIndex(S, q, unicodeMatching);\n        } else {\n          A.push(S.slice(p, q));\n          if (A.length === lim) return A;\n\n          for (var i = 1; i <= z.length - 1; i++) {\n            A.push(z[i]);\n            if (A.length === lim) return A;\n          }\n\n          q = p = e;\n        }\n      }\n\n      A.push(S.slice(p));\n      return A;\n    }];\n  });\n  /**\r\n   * --------------------------------------------------------------------------\r\n   * CoreUI Utilities (v2.1.9): get-css-custom-properties.js\r\n   * Licensed under MIT (https://coreui.io/license)\r\n   * @returns {string} css custom property name\r\n   * --------------------------------------------------------------------------\r\n   */\n\n\n  var getCssCustomProperties = function getCssCustomProperties() {\n    var cssCustomProperties = {};\n    var sheets = document.styleSheets;\n    var cssText = '';\n\n    for (var i = sheets.length - 1; i > -1; i--) {\n      var rules = sheets[i].cssRules;\n\n      for (var j = rules.length - 1; j > -1; j--) {\n        if (rules[j].selectorText === '.ie-custom-properties') {\n          cssText = rules[j].cssText;\n          break;\n        }\n      }\n\n      if (cssText) {\n        break;\n      }\n    }\n\n    cssText = cssText.substring(cssText.lastIndexOf('{') + 1, cssText.lastIndexOf('}'));\n    cssText.split(';').forEach(function (property) {\n      if (property) {\n        var name = property.split(': ')[0];\n        var value = property.split(': ')[1];\n\n        if (name && value) {\n          cssCustomProperties[\"--\" + name.trim()] = value.trim();\n        }\n      }\n    });\n    return cssCustomProperties;\n  };\n\n  var minIEVersion = 10;\n\n  var isIE1x = function isIE1x() {\n    return Boolean(document.documentMode) && document.documentMode >= minIEVersion;\n  };\n\n  var isCustomProperty = function isCustomProperty(property) {\n    return property.match(/^--.*/i);\n  };\n\n  var getStyle = function getStyle(property, element) {\n    if (element === void 0) {\n      element = document.body;\n    }\n\n    var style;\n\n    if (isCustomProperty(property) && isIE1x()) {\n      var cssCustomProperties = getCssCustomProperties();\n      style = cssCustomProperties[property];\n    } else {\n      style = window.getComputedStyle(element, null).getPropertyValue(property).replace(/^\\s/, '');\n    }\n\n    return style;\n  };\n  /**\r\n   * --------------------------------------------------------------------------\r\n   * CoreUI Utilities (v2.1.9): get-color.js\r\n   * Licensed under MIT (https://coreui.io/license)\r\n   * --------------------------------------------------------------------------\r\n   */\n\n\n  var getColor = function getColor(rawProperty, element) {\n    if (element === void 0) {\n      element = document.body;\n    }\n\n    var property = \"--\" + rawProperty;\n    var style = getStyle(property, element);\n    return style ? style : rawProperty;\n  };\n  /**\r\n   * --------------------------------------------------------------------------\r\n   * CoreUI Utilities (v2.1.9): hex-to-rgb.js\r\n   * Licensed under MIT (https://coreui.io/license)\r\n   * --------------------------------------------------------------------------\r\n   */\n\n  /* eslint-disable no-magic-numbers */\n\n\n  var hexToRgb = function hexToRgb(color) {\n    if (typeof color === 'undefined') {\n      throw new Error('Hex color is not defined');\n    }\n\n    var hex = color.match(/^#(?:[0-9a-f]{3}){1,2}$/i);\n\n    if (!hex) {\n      throw new Error(color + \" is not a valid hex color\");\n    }\n\n    var r;\n    var g;\n    var b;\n\n    if (color.length === 7) {\n      r = parseInt(color.substring(1, 3), 16);\n      g = parseInt(color.substring(3, 5), 16);\n      b = parseInt(color.substring(5, 7), 16);\n    } else {\n      r = parseInt(color.substring(1, 2), 16);\n      g = parseInt(color.substring(2, 3), 16);\n      b = parseInt(color.substring(3, 5), 16);\n    }\n\n    return \"rgba(\" + r + \", \" + g + \", \" + b + \")\";\n  };\n  /**\r\n   * --------------------------------------------------------------------------\r\n   * CoreUI Utilities (v2.1.9): hex-to-rgba.js\r\n   * Licensed under MIT (https://coreui.io/license)\r\n   * --------------------------------------------------------------------------\r\n   */\n\n  /* eslint-disable no-magic-numbers */\n\n\n  var hexToRgba = function hexToRgba(color, opacity) {\n    if (opacity === void 0) {\n      opacity = 100;\n    }\n\n    if (typeof color === 'undefined') {\n      throw new Error('Hex color is not defined');\n    }\n\n    var hex = color.match(/^#(?:[0-9a-f]{3}){1,2}$/i);\n\n    if (!hex) {\n      throw new Error(color + \" is not a valid hex color\");\n    }\n\n    var r;\n    var g;\n    var b;\n\n    if (color.length === 7) {\n      r = parseInt(color.substring(1, 3), 16);\n      g = parseInt(color.substring(3, 5), 16);\n      b = parseInt(color.substring(5, 7), 16);\n    } else {\n      r = parseInt(color.substring(1, 2), 16);\n      g = parseInt(color.substring(2, 3), 16);\n      b = parseInt(color.substring(3, 5), 16);\n    }\n\n    return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + opacity / 100 + \")\";\n  }; // 21.2.5.3 get RegExp.prototype.flags()\n\n\n  if (_descriptors && /./g.flags != 'g') _objectDp.f(RegExp.prototype, 'flags', {\n    configurable: true,\n    get: _flags\n  });\n  var TO_STRING = 'toString';\n  var $toString = /./[TO_STRING];\n\n  var define = function define(fn) {\n    _redefine(RegExp.prototype, TO_STRING, fn, true);\n  }; // 21.2.5.14 RegExp.prototype.toString()\n\n\n  if (_fails(function () {\n    return $toString.call({\n      source: 'a',\n      flags: 'b'\n    }) != '/a/b';\n  })) {\n    define(function toString() {\n      var R = _anObject(this);\n\n      return '/'.concat(R.source, '/', 'flags' in R ? R.flags : !_descriptors && R instanceof RegExp ? _flags.call(R) : undefined);\n    }); // FF44- RegExp#toString has a wrong name\n  } else if ($toString.name != TO_STRING) {\n    define(function toString() {\n      return $toString.call(this);\n    });\n  }\n  /**\r\n   * --------------------------------------------------------------------------\r\n   * CoreUI (v2.1.9): rgb-to-hex.js\r\n   * Licensed under MIT (https://coreui.io/license)\r\n   * --------------------------------------------------------------------------\r\n   */\n\n  /* eslint-disable no-magic-numbers */\n\n\n  var rgbToHex = function rgbToHex(color) {\n    if (typeof color === 'undefined') {\n      throw new Error('Hex color is not defined');\n    }\n\n    if (color === 'transparent') {\n      return '#00000000';\n    }\n\n    var rgb = color.match(/^rgba?[\\s+]?\\([\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?/i);\n\n    if (!rgb) {\n      throw new Error(color + \" is not a valid rgb color\");\n    }\n\n    var r = \"0\" + parseInt(rgb[1], 10).toString(16);\n    var g = \"0\" + parseInt(rgb[2], 10).toString(16);\n    var b = \"0\" + parseInt(rgb[3], 10).toString(16);\n    return \"#\" + r.slice(-2) + g.slice(-2) + b.slice(-2);\n  };\n\n  exports.asideMenuCssClasses = asideMenuCssClasses;\n  exports.checkBreakpoint = checkBreakpoint;\n  exports.deepObjectsMerge = deepObjectsMerge;\n  exports.getColor = getColor;\n  exports.getStyle = getStyle;\n  exports.hexToRgb = hexToRgb;\n  exports.hexToRgba = hexToRgba;\n  exports.rgbToHex = rgbToHex;\n  exports.sidebarCssClasses = sidebarCssClasses;\n  exports.validBreakpoints = validBreakpoints;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});"],"sourceRoot":""}